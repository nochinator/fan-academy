var Ct=Object.defineProperty;var Pt=(t,a,e)=>a in t?Ct(t,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[a]=e;var o=(t,a,e)=>Pt(t,typeof a!="symbol"?a+"":a,e);import{r as vt,a as _t}from"./phaser-LhFSXt8Z.js";import{r as kt}from"./colyseus.js-BZ3dtEL4.js";(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();var st=vt();const _e=_t(st);var Et=kt(),J=(t=>(t.PHYSICAL="physical",t.MAGICAL="magical",t))(J||{}),B=(t=>(t.SEARCHING="searching",t.PLAYING="playing",t.FINISHED="finished",t.CHALLENGE="challenge",t))(B||{}),He=(t=>(t.CRYSTAL="Crystal victory",t.UNITS="Hero victory",t.TIME="Timeout",t.CONCEDED="Game conceded",t))(He||{}),M=(t=>(t.COUNCIL="Council",t.DARK_ELVES="Dark Elves",t))(M||{}),b=(t=>(t.MOVE="move",t.ATTACK="attack",t.HEAL="heal",t.SPAWN="spawn",t.SPAWN_PHANTOM="phantom",t.USE="use",t.SHUFFLE="shuffle",t.TELEPORT="teleport",t.CONCEDE="concede",t.DRAW="draw",t.PASS="pass",t.REMOVE_UNITS="removeUnits",t))(b||{}),ye=(t=>(t.USER="user",t.AUTO="automatic",t))(ye||{}),P=(t=>(t.SHINING_HELM="shiningHelm",t.RUNE_METAL="runeMetal",t.SUPERCHARGE="superCharge",t.DRAGON_SCALE="dragonScale",t.HEALING_POTION="healingPotion",t.INFERNO="inferno",t.SOUL_STONE="soulStone",t.SOUL_HARVEST="soulHarvest",t.MANA_VIAL="manaVial",t))(P||{}),W=(t=>(t.HERO="hero",t.ITEM="item",t))(W||{}),y=(t=>(t.ARCHER="archer",t.CLERIC="cleric",t.KNIGHT="knight",t.NINJA="ninja",t.WIZARD="wizard",t.PRIESTESS="priestess",t.IMPALER="impaler",t.NECROMANCER="necromancer",t.PHANTOM="phantom",t.VOIDMONK="voidmonk",t.WRAITH="wraith",t))(y||{}),S=(t=>(t.BASIC="basic",t.POWER="powerTile",t.PHYSICAL_RESISTANCE="shieldTile",t.MAGICAL_RESISTANCE="helmetTile",t.CRYSTAL_DAMAGE="crystalDamageTile",t.TELEPORTER="teleporterTile",t.CRYSTAL="crystal",t.CRYSTAL_BIG="crystalBig",t.CRYSTAL_SMALL="crystalSmall",t.SPAWN="spawnTile",t.SPEED="speedTile",t))(S||{}),K=(t=>(t.MOVE="move",t.ATTACK="attack",t.HEAL="healing",t))(K||{}),R=(t=>(t.SHOOTER="Shooter",t.FIGHTER="Fighter",t.CASTER="Caster",t.SUPPORT="Support",t.EQUIPMENT="Equipment",t.BUFF="Buff",t.VICTORY="Victory Unit",t.SUPER="Super Unit",t.SUMMONED="Summoned",t.SPELL="Spell",t.CONSUMABLE="Consumable",t.SPECIAL_TILE="Special Tile",t))(R||{}),ne=(t=>(t.SEND="send",t.ACCEPT="accept",t))(ne||{}),w=(t=>(t.BUTTON_PLAY="battleButtonSound",t.BUTTON_GENERIC="buttonPressGenericSound",t.BUTTON_FAILED="buttonFailedSound",t.GAME_DELETE="deleteGameSound",t.RESIGN="resignSound",t.WIN_SFX="winSFXSound",t.LOSE_SFX="loseSFXSound",t))(w||{}),g=(t=>(t.HERO_HAND_SELECT="selectHeroFromHandSound",t.HERO_BOARD_SELECT="selectHeroFromBoardSound",t.HERO_THINKING="thinkingSound",t.HERO_SPAWN="spawnHeroSound",t.HERO_MOVE="moveHeroSound",t.MOVE_FLY="moveFlySound",t.MOVE_WALK="moveWalkSound",t.HEAL="healSound",t.HEAL_EXTRA="healExtraSound",t.HERO_STOMP="stompSound",t.VANISH="vanishSound",t.HERO_REVIVE="reviveHeroSound",t.SCROLL_SELECT="selectScrollSound",t.RUNE_METAL_SELECT="selectRuneMetalSound",t.SHIELD_SELECT="selectDragonScaleSound",t.ITEM_SELECT="selectItemGenericSound",t.POTION_SELECT="selectPotionSound",t.AOE_SPELL_SELECT="selectInfernoSound",t.SCROLL_USE="useScrollSound",t.RUNE_METAL_USE="useRuneMetalSound",t.DRAGON_SCALE_USE="useDragonScaleSound",t.ITEM_USE="useItemGenericSound",t.POTION_USE="usePotionSound",t.SWORD_TILE="swordTileSound",t.SHIELD_TILE="shieldTileSound",t.HELM_TILE="helmTileSound",t.CRYSTAL_TILE="crystalTileSound",t.RESET_TURN="resetTurnSound",t.DRAW="newItemsSound",t.SHUFFLE="returnItemSound",t.CRYSTAL_DAMAGE="damageCrystal1Sound",t.CRYSTAL_DAMAGE_BUFF="damageCrystal2Sound",t.CRYSTAL_DESTROY="destroyCrystalSound",t.HERO_DAMAGE_1="damageHero1Sound",t.HERO_DAMAGE_2="damageHero2Sound",t.HERO_DAMAGE_3="damageHero3Sound",t.HERO_DAMAGE_4="damageHero4Sound",t.HERO_DAMAGE_KO="damageHeroKOSound",t.ARCHER_ATTACK="archerAttackSound",t.ARCHER_ATTACK_BIG="archerAttackBigSound",t.ARCHER_ATTACK_MELEE="archerAttackMeleeSound",t.ARCHER_DEATH="archerDeathSound",t.CLERIC_ATTACK="clericAttackSound",t.CLERIC_ATTACK_BIG="clericAttackBigSound",t.CLERIC_DEATH="clericDeathSound",t.KNIGHT_ATTACK="knightAttackSound",t.KNIGHT_ATTACK_BIG="knightAttackBigSound",t.KNIGHT_DEATH="knightDeathSound",t.NINJA_ATTACK="ninjaAttackSound",t.NINJA_ATTACK_BIG="ninjaAttackBigSound",t.NINJA_ATTACK_RANGED="ninjaAttackRangedSound",t.NINJA_DEATH="ninjaDeathSound",t.NINJA_SMOKE="ninjaSmokeSound",t.WIZARD_ATTACK="wizardAttackSound",t.WIZARD_ATTACK_BIG="wizardAttackBigSound",t.WIZARD_DEATH="wizardDeathSound",t.INFERNO_USE="useInfernoSound",t.PRIESTESS_ATTACK="priestessAttackSound",t.PRIESTESS_DEATH="priestessDeathSound",t.IMPALER_ATTACK="impalerAttackSound",t.IMPALER_ATTACK_BIG="impalerAttackBigSound",t.IMPALER_ATTACK_MELEE="impalerAttackMeleeSound",t.IMPALER_DEATH="impalerDeathSound",t.NECROMANCER_ATTACK="necroAttackSound",t.NECROMANCER_ATTACK_BIG="necroAttackBigSound",t.NECROMANCER_DEATH="necromancerDeathSound",t.PHANTOM_SPAWN="phantomSpawnSound",t.PHANTOM_DEATH="phantomDeathSound",t.VOIDMONK_ATTACK="voidmonkAttackSound",t.VOIDMONK_ATTACK_BIG="voidmonkAttackBigSound",t.VOIDMONK_DEATH="voidmonkDeathSound",t.WRAITH_ATTACK="wraithAttackSound",t.WRAITH_ATTACK_BIG="wraithAttackBigSound",t.WRAITH_DEATH="wraithDeathSound",t.WRAITH_CONSUME="wraithConsumeSound",t.USE_HARVEST="useHarvestSound",t))(g||{});class Ot extends Phaser.GameObjects.Container{constructor(e){super(e,50,50);o(this,"button");o(this,"buttonText");this.button=e.add.image(10,-25,"playButton").setDisplaySize(100,50).setOrigin(.5).setInteractive({useHandCursor:!0}),this.buttonText=e.add.text(10,-25,"Home",{fontFamily:"proLight",fontSize:35,color:"#ffffff"}).setOrigin(.5),this.add([this.button,this.buttonText]).setScale(.8),this.button.on("pointerdown",async()=>{var n,r;this.scene.sound.play(w.BUTTON_GENERIC),await((n=e.lobbyRoom)==null?void 0:n.leave()),await((r=e.currentRoom)==null?void 0:r.leave()),e.currentRoom=void 0,e.scene.stop("GameScene"),e.scene.start("MainMenuScene")}),e.add.existing(this)}}async function Ht(t){console.log("Fetching game list...");const a=localStorage.getItem("jwt"),e=`https://scribble-academy-be.onrender.com/games/playing?userId=${encodeURIComponent(t)}`,i=await fetch(e,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}),s=await i.json();return i.status!==200?(console.log("Error fetching the game list..."),[]):(console.log("Game list fetched..."),s)}async function Dt(t,a,e){const i=localStorage.getItem("jwt");console.log("Sending challenge to player... ");const s=`https://scribble-academy-be.onrender.com/games/newGame?userId=${encodeURIComponent(t)}&faction=${encodeURIComponent(a)}&opponentId=${encodeURIComponent(e)}`,n=await fetch(s,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${i}`}}),r=await n.json();return n.status!==200?(console.error("Error sending challenge...",r.message),null):(console.log("Challenge sent",r),r)}function ve(t,a,e,i){const r=a?1:2,c={[y.ARCHER]:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:0,charImageY:-25}},[y.CLERIC]:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:0,charImageY:-25}},[y.KNIGHT]:{1:{charImageX:5,charImageY:-15},2:{charImageX:0,charImageY:-15},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:0,charImageY:-25}},[y.NINJA]:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:0,charImageY:-25}},[y.WIZARD]:{1:{charImageX:10,charImageY:-15},2:{charImageX:-10,charImageY:-15},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:0,charImageY:-25}},[y.PRIESTESS]:{1:{charImageX:20,charImageY:-20},2:{charImageX:-15,charImageY:-20},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:0,charImageY:-25}},[y.IMPALER]:{1:{charImageX:10,charImageY:-15},2:{charImageX:-15,charImageY:-15},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:15,charImageY:-25}},[y.NECROMANCER]:{1:{charImageX:20,charImageY:-20},2:{charImageX:-5,charImageY:-20},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:10,charImageY:-25}},[y.PHANTOM]:{1:{charImageX:0,charImageY:0},2:{charImageX:0,charImageY:0},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:0,charImageY:-25}},[y.VOIDMONK]:{1:{charImageX:0,charImageY:-20},2:{charImageX:0,charImageY:-20},KO:{1:{charImageX:0,charImageY:0},2:{charImageX:0,charImageY:0}},hand:{charImageX:5,charImageY:-25}},[y.WRAITH]:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10},KO:{1:{charImageX:0,charImageY:-10},2:{charImageX:0,charImageY:-10}},hand:{charImageX:0,charImageY:-25}}};return e?c[t].hand:i?c[t].KO[r]:c[t][r]}function ke(t){var a;return((a=t.player1)==null?void 0:a.playerId)===t.userId?{player:"player1",opponent:"player2"}:{player:"player2",opponent:"player1"}}function Ue(t){return t.isPlayerOne?t.player1:t.player2}function ot(t){const e=/[a-zA-Z]/.test(t),i=/\d/.test(t);return t.length>=8&&e&&i}function We(t,a){var e,i;a.isActive=!0,t.activeUnit=a,a.boardPosition<45&&t.sound.play(g.HERO_THINKING),a.class===W.HERO&&((e=t.gameController)==null||e.onHeroClicked(a)),a.class===W.ITEM&&((i=t.gameController)==null||i.onItemClicked(a))}function he(t){var a,e;t.activeUnit&&(t.sound.stopByKey(g.HERO_THINKING),t.activeUnit.isActive=!1,t.activeUnit=void 0,(a=t.gameController)==null||a.board.clearHighlights(),(e=t.gameController)==null||e.board.removeReticles())}function nt(t,a){t.on("pointerdown",(e,i,s,n)=>{a.currentGame.status!==B.FINISHED&&(De(a),e.button===2&&(t.setDepth(1001),t.unitCard.setVisible(!0),a.visibleUnitCard=t,n.stopPropagation()),a.longPressStart=a.time.now,e.button===0&&Rt(t,a))}),t.on("pointerup",e=>{a.currentGame.status!==B.FINISHED&&e.button!==2&&a.longPressStart&&a.time.now-a.longPressStart>500&&(t.setDepth(1001),t.unitCard.setVisible(!0),a.visibleUnitCard=t)})}function Rt(t,a){if(console.log(`Unit in ${t.boardPosition}`,t),a.activePlayer!==a.userId||a.currentTurnAction>5)return;const e=a.activeUnit,i=de(a,t),s=E(t)&&!i,n=(e==null?void 0:e.unitId)===t.unitId,r=E(t)?t.getByName("healReticle"):void 0,c=E(t)?t.getByName("attackReticle"):void 0,h=E(t)?t.getByName("allyReticle"):void 0;if(!e&&i){if(E(t)&&t.isKO)return;t.boardPosition>=45?(E(t)&&T(a,g.HERO_HAND_SELECT),q(t)&&Ye(a,t.itemType)):T(a,g.HERO_BOARD_SELECT),We(a,t);return}if(n){if(E(e)&&e.canHeal&&(r!=null&&r.visible)&&E(t)){e.heal(t);return}else he(a);return}if(e&&!n){if(E(t)&&t.isKO&&E(e)&&e.unitType===y.WRAITH&&e.boardPosition>=45&&!N(a,t.getTile())){e.spawn(t.getTile());return}if(s){const d=a.gameController.board.getTileFromBoardPosition(t.boardPosition);if(E(e)&&(c!=null&&c.visible)){e.attack(t);return}if(E(e)&&e.boardPosition<45){const m=a.gameController.board.getHeroTilesInRange(e,K.MOVE).find(p=>p.boardPosition===t.boardPosition);if(t.isKO&&e.unitType!==y.NECROMANCER&&(m||d.isHighlighted)){e.move(d);return}if(t.isKO&&e.unitType===y.NECROMANCER&&t.blockedLOS.visible&&(m||d.isHighlighted)){e.move(d);return}}if(E(e)&&e.boardPosition>=45&&(t.isKO||t.unitType===y.PHANTOM)&&!N(a,d)&&d.isHighlighted){e.spawn(t.getTile());return}if(E(e)&&e.boardPosition>=45&&t.unitType===y.PHANTOM&&!N(a,d)){e.spawn(t.getTile());return}if(q(e)&&e.dealsDamage){e.use(t.getTile());return}}if(E(t)&&i&&t.boardPosition<45){if(E(e)&&[y.NECROMANCER,y.WRAITH].includes(e.unitType)&&t.isKO&&(c!=null&&c.visible)){e.attack(t);return}if(E(e)){const d=t.getTile();if(t.isKO&&d.tileType===S.SPAWN&&d.isHighlighted&&e.boardPosition>=45){e.spawn(d);return}if(e.canHeal&&(r!=null&&r.visible)){e.heal(t);return}if(e.unitType===y.NINJA&&(h!=null&&h.visible)&&!t.isKO){e.teleport(t);return}if(e.boardPosition<45){const m=a.gameController.board.getHeroTilesInRange(e,K.MOVE).find(p=>p.boardPosition===t.boardPosition);if(t.isKO&&e.unitType!==y.NECROMANCER&&(m||d.isHighlighted)){const p=a.gameController.board.getTileFromBoardPosition(t.boardPosition);e.move(p);return}}}if(q(e)){if(t.isAlreadyEquipped(e)||t.unitType===y.PHANTOM)return;e.dealsDamage&&e.use(t.getTile()),!e.dealsDamage&&(!t.isKO||e.itemType===P.HEALING_POTION)&&e.use(t);return}}if(i){if(E(t)&&t.isKO)return;he(a),t.boardPosition>=45?(E(t)&&T(a,g.HERO_HAND_SELECT),q(t)&&Ye(a,t.itemType)):T(a,g.HERO_BOARD_SELECT),We(a,t);return}}}function Bt(t,a){t.on("pointerdown",(e,i,s,n)=>{if(a.currentGame.status===B.FINISHED)return;if(De(a),a.longPressStart=void 0,e.button===2){const h=t.tileType!==S.BASIC&&t.tileType!==S.CRYSTAL,d=!t.hero&&!t.crystal;h&&d&&(t.setDepth(1001),t.unitCard.setVisible(!0),a.visibleUnitCard=t,n.stopPropagation())}if(a.activePlayer!==a.userId||a.currentTurnAction>5)return;const r=a.activeUnit,c=a.gameController;!r||!c||(r.boardPosition<45&&t.isHighlighted&&E(r)&&(r.move(t),T(a,g.HERO_MOVE)),r.boardPosition>44&&t.isHighlighted&&(E(r)&&r.spawn(t),q(r)&&r.dealsDamage&&r.use(t)))}),a.input.on("pointerdown",()=>{t.icon&&t.icon.setDepth(2)}),t.on("pointerup",()=>{a.currentGame.status!==B.FINISHED&&a.longPressStart&&a.time.now-a.longPressStart>500&&(t.setDepth(1001),t.unitCard.setVisible(!0),a.visibleUnitCard=t)}),t.on("pointerout",()=>{a.visibleUnitCard||(t.icon&&t.icon.setDepth(2),t.unitCard.setVisible(!1))})}function Nt(t,a){t.on("pointerdown",(e,i,s,n)=>{if(a.currentGame.status!==B.FINISHED&&(console.log(`Crystal on ${t.boardPosition}`,t),De(a),e.button===2&&(t.setDepth(1001),t.unitCard.setVisible(!0),a.visibleUnitCard=t,n.stopPropagation()),a.longPressStart=a.time.now,e.button===0)){const r=t.attackReticle,c=a.activeUnit;if(c){if(E(c)&&r.visible){c.attack(t);return}if(q(c)&&(c!=null&&c.dealsDamage)){c.use(t.getTile());return}}}}),t.on("pointerup",()=>{a.currentGame.status!==B.FINISHED&&a.longPressStart&&a.time.now-a.longPressStart>500&&(t.setDepth(1001),t.unitCard.setVisible(!0),a.visibleUnitCard=t)}),t.on("pointerout",()=>{a.visibleUnitCard||(t.setDepth(t.boardPosition+10),t.unitCard.setVisible(!1))})}class pe extends Phaser.GameObjects.Container{constructor(a,e,i,s,n=!1){super(a,e,i);const r=n?"greenFont":"redFont",c=n?.7:.5;let h=0;for(const u of s){const m=a.textures.get(r).get(u);m&&(h+=m.width*c)}let d=-h/2;for(const u of s){const m=a.add.image(0,0,r,u).setOrigin(0,.7).setScale(c),p=m.frame.width*c;m.x=d,m.y=0,this.add(m),d+=p}this.setDepth(1e3),a.add.existing(this),a.tweens.add({targets:this,y:i-30,duration:1500,ease:"easeOut",alpha:0,onComplete:()=>this.destroy()})}}class rt extends Phaser.GameObjects.Container{constructor(e,i,s,n){super(e,s,n);o(this,"context");o(this,"background");o(this,"healthBar");o(this,"fullWidth",78);this.context=e,this.background=e.add.image(0,0,"HpBackground").setOrigin(0);const r=de(e,i)?"HpAlly":"HpEnemy";this.healthBar=e.add.image(0,0,r).setOrigin(0),this.setHealth(i.maxHealth,i.currentHealth),this.add([this.background,this.healthBar])}setHealth(e,i){const s=i/e;this.healthBar.displayWidth=this.fullWidth*s}}class Lt extends Phaser.GameObjects.Container{constructor(e,i){const s=i.boardPosition>44?-200:0;super(e,0,s);o(this,"cardBackgroundImage");o(this,"unitPictureImage");o(this,"cardSeparatorImage");o(this,"hpBackgroundImage");o(this,"hpBarImage");o(this,"attackTypeImage");o(this,"magicalResistanceImage");o(this,"physicalResistanceImage");o(this,"movementRangeImage");o(this,"attackRangeImage");o(this,"movementSquareImages");o(this,"attackSquareImages");o(this,"hpIconImage");o(this,"context");o(this,"attackType");o(this,"unitType");o(this,"currentHpText");o(this,"powerText");o(this,"magicalResistanceText");o(this,"physicalResistanceText");o(this,"cardFlavorText");o(this,"cardTypeText");o(this,"cardNameText");o(this,"rangeText");this.context=e,this.attackType=i.attackType,this.unitType=i.unitType,this.cardBackgroundImage=e.add.image(10,10,"cardBackground"),this.unitPictureImage=e.add.image(-130,-140,`${i.unitType}CardPic`).setOrigin(.5).setScale(.4),this.cardSeparatorImage=e.add.image(50,-100,"cardSeparator").setOrigin(.5).setScale(1.3);const{cardText:n,cardType:r}=ft(i.unitType);this.cardNameText=this.context.add.text(55,-170,Ee(i.unitType),{fontFamily:"proLight",fontSize:50,color:"#ffffff"}).setOrigin(.5),this.cardTypeText=this.context.add.text(55,-130,Ee(r),{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.hpBackgroundImage=e.add.image(-60,-60,"hpBackground").setOrigin(.5),this.hpBarImage=e.add.image(-118,-72,"hpBar").setOrigin(0),this.setHealthBar(i.currentHealth,i.maxHealth),this.currentHpText=this.context.add.text(80,-60,`${i.currentHealth}/${i.maxHealth}`,{fontFamily:"proLight",fontSize:35,color:i.maxHealth>i.baseHealth?"#00FF00":"#ffffff"}).setOrigin(.5),this.hpIconImage=e.add.image(-150,-60,"hpIcon").setOrigin(.5);const c=i.attackType===J.MAGICAL?"magicalDamage":"physicalDamage";this.attackTypeImage=e.add.image(-150,-15,c).setOrigin(.5),this.powerText=this.context.add.text(-40,-15,`${i.currentPower} ${i.attackType}`,{fontFamily:"proLight",fontSize:35,color:this.getTextColor(i.currentPower,i.basePower)}).setOrigin(.5),this.magicalResistanceImage=e.add.image(40,30,"magicalResistance").setOrigin(.5),this.magicalResistanceText=this.context.add.text(100,30,`${i.magicalDamageResistance} %`,{fontFamily:"proLight",fontSize:35,color:this.getTextColor(i.magicalDamageResistance,i.baseMagicalDamageResistance)}).setOrigin(.5),this.physicalResistanceImage=e.add.image(-150,30,"physicalResistance").setOrigin(.5),this.physicalResistanceText=this.context.add.text(-85,30,`${i.physicalDamageResistance} %`,{fontFamily:"proLight",fontSize:35,color:this.getTextColor(i.physicalDamageResistance,i.basePhysicalDamageResistance)}).setOrigin(.5),this.movementRangeImage=e.add.image(-10,120,"movementRange").setOrigin(.5),this.attackRangeImage=e.add.image(-10,80,"attackRange").setOrigin(.5),this.rangeText=this.context.add.text(-85,90,"Range:",{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5);const h=(d,u,m,p)=>{const f=[];let C=0;for(let A=1;A<=d;A++){const k=e.add.image(u+C,m,p).setOrigin(.5);f.push(k),C+=25}return f};this.movementSquareImages=h(i.movement,20,120,"movementSquare"),this.attackSquareImages=h(i.attackRange,20,80,"attackSquare"),this.cardFlavorText=this.context.add.text(0,180,n,{fontFamily:"proLight",fontSize:25,color:"#ffffff",wordWrap:{width:this.cardBackgroundImage.width-50,useAdvancedWrap:!0}}).setOrigin(.5),this.add([this.cardBackgroundImage,this.unitPictureImage,this.cardSeparatorImage,this.hpBackgroundImage,this.hpBarImage,this.attackTypeImage,this.magicalResistanceImage,this.physicalResistanceImage,this.movementRangeImage,this.attackRangeImage,this.hpIconImage,this.currentHpText,this.cardFlavorText,this.cardTypeText,this.cardNameText,this.powerText,this.physicalResistanceText,this.magicalResistanceText,this.rangeText,...this.movementSquareImages,...this.attackSquareImages])}getTextColor(e,i){return e>i?"#00FF00":e<i?"#ff0000":"#ffffff"}updateCardData(e){this.updateCardPower(e),this.updateCardPhysicalResistance(e),this.updateCardMagicalResistance(e),this.updateCardHealth(e)}updateCardPower(e){const i=e.getTotalPower();this.powerText.setText(`${i} ${this.attackType}`);const s=e.unitType===y.WRAITH?250:e.basePower;e.isDebuffed?this.powerText.setColor("#ff0000"):this.powerText.setColor(this.getTextColor(i,s))}updateCardPhysicalResistance(e){this.physicalResistanceText.setText(`${e.physicalDamageResistance} %`),this.physicalResistanceText.setColor(this.getTextColor(e.physicalDamageResistance,e.basePhysicalDamageResistance))}updateCardMagicalResistance(e){this.magicalResistanceText.setText(`${e.magicalDamageResistance} %`),this.magicalResistanceText.setColor(this.getTextColor(e.magicalDamageResistance,e.baseMagicalDamageResistance))}updateCardHealth(e){this.currentHpText.setText(`${e.currentHealth}/${e.maxHealth}`),this.currentHpText.setColor(this.getTextColor(e.maxHealth,e.baseHealth)),this.setHealthBar(e.currentHealth,e.maxHealth)}setHealthBar(e,i){const s=this.hpBackgroundImage.width-10,n=e/i;this.hpBarImage.displayWidth=s*n}}class _ extends Phaser.GameObjects.Container{constructor(e,i,s){const{x:n,y:r}=e.centerPoints[i.boardPosition];super(e,n,r);o(this,"class",W.HERO);o(this,"faction");o(this,"unitType");o(this,"unitId");o(this,"boardPosition");o(this,"row");o(this,"col");o(this,"baseHealth");o(this,"maxHealth");o(this,"currentHealth");o(this,"isKO");o(this,"lastBreath");o(this,"movement");o(this,"attackRange");o(this,"healingRange");o(this,"attackType");o(this,"basePower");o(this,"physicalDamageResistance");o(this,"basePhysicalDamageResistance");o(this,"magicalDamageResistance");o(this,"baseMagicalDamageResistance");o(this,"factionBuff");o(this,"runeMetal");o(this,"shiningHelm");o(this,"superCharge");o(this,"attackTile");o(this,"isActiveValue");o(this,"belongsTo");o(this,"canHeal");o(this,"unitsConsumed");o(this,"isDebuffed");o(this,"manaVial");o(this,"speedTile");o(this,"context");o(this,"unitCard");o(this,"characterImage");o(this,"runeMetalImage");o(this,"shiningHelmImage");o(this,"factionBuffImage");o(this,"attackReticle");o(this,"healReticle");o(this,"allyReticle");o(this,"blockedLOS");o(this,"debuffImage");o(this,"crystalDebuffTileAnim");o(this,"powerTileAnim");o(this,"magicalResistanceTileAnim");o(this,"physicalResistanceTileAnim");o(this,"superChargeAnim");o(this,"reviveAnim");o(this,"smokeAnim");o(this,"crystalDebuffEvent");o(this,"powerTileEvent");o(this,"magicalResistanceTileEvent");o(this,"physicalResistanceTileEvent");o(this,"superChargeEvent");o(this,"reviveEvent");o(this,"smokeEvent");o(this,"spawnEvent");o(this,"healthBar");this.context=e,this.faction=i.faction,this.unitType=i.unitType,this.unitId=i.unitId,this.boardPosition=i.boardPosition,this.row=i.row,this.col=i.col,this.baseHealth=i.baseHealth,this.maxHealth=i.maxHealth,this.currentHealth=i.currentHealth,this.isKO=i.isKO,this.lastBreath=i.lastBreath,this.movement=i.movement,this.attackRange=i.attackRange,this.healingRange=i.healingRange,this.attackType=i.attackType,this.basePower=i.basePower,this.physicalDamageResistance=i.physicalDamageResistance,this.basePhysicalDamageResistance=i.basePhysicalDamageResistance,this.magicalDamageResistance=i.magicalDamageResistance,this.baseMagicalDamageResistance=i.baseMagicalDamageResistance,this.factionBuff=i.factionBuff,this.runeMetal=i.runeMetal,this.shiningHelm=i.shiningHelm,this.superCharge=i.superCharge,this.attackTile=i.attackTile,this.isActiveValue=!1,this.belongsTo=i.belongsTo??1,this.canHeal=i.canHeal??!1,this.unitsConsumed=i.unitsConsumed??0,this.isDebuffed=i.isDebuffed,this.manaVial=(i==null?void 0:i.manaVial)??void 0,this.speedTile=i.speedTile,this.unitCard=new Lt(e,{...i,currentPower:this.getTotalPower()}).setVisible(!1),this.healthBar=new rt(e,i,-38,-75),this.boardPosition>=45&&this.healthBar.setVisible(!1);const c=dt(this.boardPosition),{charImageX:h,charImageY:d}=ve(this.unitType,this.belongsTo===1,c,i.isKO);this.characterImage=e.add.image(h,d,this.updateCharacterImage()).setOrigin(.5).setName("body"),c&&this.characterImage.setScale(.8),this.belongsTo===2&&this.boardPosition<45&&this.characterImage.setFlipX(!0),this.runeMetalImage=e.add.image(33,25,"runeMetal").setOrigin(.5).setScale(.4).setName("runeMetal"),this.runeMetal||this.runeMetalImage.setVisible(!1),this.shiningHelmImage=e.add.image(-28,25,"shiningHelm").setOrigin(.5).setScale(.4).setName("shiningHelm"),this.shiningHelm||this.shiningHelmImage.setVisible(!1),this.faction===M.COUNCIL?this.factionBuffImage=e.add.image(5,25,"dragonScale").setOrigin(.5).setScale(.4).setName("dragonScale"):this.factionBuffImage=e.add.image(5,25,"soulStone").setOrigin(.5).setScale(.4).setName("soulStone"),this.factionBuff||this.factionBuffImage.setVisible(!1),this.faction===M.COUNCIL&&(this.smokeAnim=e.add.image(0,0,"smokeAnim_1").setOrigin(.5).setScale(2.5).setVisible(!1).setTint(3751239)),this.attackReticle=e.add.image(0,-10,"attackReticle").setOrigin(.5).setScale(.8).setName("attackReticle").setVisible(!1),this.healReticle=e.add.image(0,-10,"healReticle").setOrigin(.5).setScale(.8).setName("healReticle").setVisible(!1),this.allyReticle=e.add.image(0,-10,"allyReticle").setOrigin(.5).setScale(.6).setName("allyReticle").setVisible(!1),this.debuffImage=e.add.image(0,-10,"debuff").setOrigin(.5).setScale(2.5).setName("debuff"),this.isDebuffed?this.debuffImage.setVisible(!0):this.debuffImage.setVisible(!1);const u=p=>{e.tweens.add({targets:p,angle:360,duration:7e3,repeat:-1,ease:"Linear",onRepeat:()=>{p.angle=0}})};u(this.attackReticle),u(this.healReticle),u(this.allyReticle),u(this.debuffImage),this.blockedLOS=e.add.image(0,-10,"blockedLOS").setOrigin(.5).setName("blockedLOS").setVisible(!1),e.tweens.add({targets:this.blockedLOS,scale:1.2,duration:1e3,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"}),this.crystalDebuffTileAnim=e.add.image(0,30,"crystalDamageAnim_1").setOrigin(.5).setScale(.6),(s==null?void 0:s.tileType)===S.CRYSTAL_DAMAGE&&!this.isKO?this.crystalDebuffTileAnim.setVisible(!0):this.crystalDebuffTileAnim.setVisible(!1),this.crystalDebuffEvent=this.continuousEvent(this.crystalDebuffTileAnim,["crystalDamageAnim_1","crystalDamageAnim_2","crystalDamageAnim_3"]),this.powerTileAnim=e.add.image(0,27,"powerTileAnim_1").setOrigin(.5).setScale(.6),(s==null?void 0:s.tileType)===S.POWER&&!this.isKO?this.powerTileAnim.setVisible(!0):this.powerTileAnim.setVisible(!1),this.powerTileEvent=this.continuousEvent(this.powerTileAnim,["powerTileAnim_1","powerTileAnim_2","powerTileAnim_3"]),this.magicalResistanceTileAnim=e.add.image(0,30,"magicalResistanceAnim_1").setOrigin(.5).setScale(.6),((s==null?void 0:s.tileType)===S.MAGICAL_RESISTANCE||(s==null?void 0:s.tileType)===S.SPEED)&&!this.isKO?this.magicalResistanceTileAnim.setVisible(!0):this.magicalResistanceTileAnim.setVisible(!1),this.magicalResistanceTileEvent=this.continuousEvent(this.magicalResistanceTileAnim,["magicalResistanceAnim_1","magicalResistanceAnim_2","magicalResistanceAnim_3"]),this.physicalResistanceTileAnim=e.add.image(0,30,"physicalResistanceAnim_1").setOrigin(.5).setScale(.6),(s==null?void 0:s.tileType)===S.PHYSICAL_RESISTANCE&&!this.isKO?this.physicalResistanceTileAnim.setVisible(!0):this.physicalResistanceTileAnim.setVisible(!1),this.physicalResistanceTileEvent=this.continuousEvent(this.physicalResistanceTileAnim,["physicalResistanceAnim_1","physicalResistanceAnim_2","physicalResistanceAnim_3"]),this.superChargeAnim=e.add.image(0,-18,"superChargeAnim_1").setOrigin(.5).setScale(.8),this.superCharge?this.superChargeAnim.setVisible(!0):this.superChargeAnim.setVisible(!1),this.superChargeEvent=this.continuousEvent(this.superChargeAnim,["superChargeAnim_1","superChargeAnim_2","superChargeAnim_3"]),this.reviveAnim=e.add.image(0,-10,"reviveAnim_1").setOrigin(.5).setScale(.7).setVisible(!1);const m=new Phaser.Geom.Rectangle(-35,-50,75,85);this.add([this.debuffImage,this.superChargeAnim,this.reviveAnim,this.characterImage,this.runeMetalImage,this.factionBuffImage,this.shiningHelmImage,this.healthBar,this.crystalDebuffTileAnim,this.powerTileAnim,this.magicalResistanceTileAnim,this.physicalResistanceTileAnim,this.attackReticle,this.healReticle,this.allyReticle,...this.smokeAnim?[this.smokeAnim]:[],this.blockedLOS,this.unitCard]).setInteractive({hitArea:m,hitAreaCallback:Phaser.Geom.Rectangle.Contains,useHandCursor:!0}).setName(this.unitId).setDepth(this.boardPosition+10),this.boardPosition===51&&this.setVisible(!1),nt(this,e),e.add.existing(this)}get isActive(){return this.isActiveValue}set isActive(e){this.isActiveValue=e,e?this.onActivate():this.onDeactivate()}updatePosition(e){const{x:i,y:s}=this.context.centerPoints[e.boardPosition];this.x=i,this.y=s,this.boardPosition=e.boardPosition,this.row=e.row,this.col=e.col}exportData(){return{class:this.class,faction:this.faction,unitType:this.unitType,unitId:this.unitId,boardPosition:this.boardPosition,row:this.row,col:this.col,baseHealth:this.baseHealth,maxHealth:this.maxHealth,currentHealth:this.currentHealth,isKO:this.isKO,lastBreath:this.lastBreath,movement:this.movement,attackRange:this.attackRange,healingRange:this.healingRange,attackType:this.attackType,basePower:this.basePower,physicalDamageResistance:this.physicalDamageResistance,basePhysicalDamageResistance:this.basePhysicalDamageResistance,magicalDamageResistance:this.magicalDamageResistance,baseMagicalDamageResistance:this.baseMagicalDamageResistance,factionBuff:this.factionBuff,runeMetal:this.runeMetal,shiningHelm:this.shiningHelm,superCharge:this.superCharge,attackTile:this.attackTile,belongsTo:this.belongsTo,canHeal:this.canHeal,unitsConsumed:this.unitsConsumed,isDebuffed:this.isDebuffed,manaVial:this.manaVial,speedTile:this.speedTile}}continuousEvent(e,i){let s=0;const n=this.scene.time.addEvent({delay:100,loop:!0,callback:()=>{if(e.scene)e.setTexture(i[s]),s=(s+1)%i.length;else{n.remove(!1);return}}});return n}singleEvent(e,i,s){let n=0;e.setVisible(!0);const r=this.scene.time.addEvent({delay:s,repeat:i.length-1,callback:()=>{e.setTexture(i[n]),n++,n===i.length&&(e.setVisible(!1),r.remove())}});return r}singleTween(e,i){e.setVisible(!0),this.context.tweens.add({targets:e,scaleX:0,scaleY:0,duration:i,ease:"Cubic.easeIn",onComplete:()=>{e.setVisible(!1)}})}onActivate(){console.log(`${this.unitId} is now active`),this.setScale(1.2)}onDeactivate(){console.log(`${this.unitId} is now inactive`),this.setScale(1)}getsDamaged(e,i,s){this.characterImage.setTint(16711680),this.scene.time.delayedCall(500,()=>this.characterImage.clearTint());const n=me(this.getLifeLost(e,i));if(this.currentHealth-=n,this.currentHealth<=0)this.getsKnockedDown(s);else{const r=[g.HERO_DAMAGE_1,g.HERO_DAMAGE_2,g.HERO_DAMAGE_3,g.HERO_DAMAGE_4];this.scene.time.delayedCall(s,T,[this.context,r[Math.floor(Math.random()*r.length)]])}return this.healthBar.setHealth(this.maxHealth,this.currentHealth),n>0&&new pe(this.context,this.x,this.y-50,n.toString()),this.unitCard.updateCardData(this),this.updateTileData(),n}getTotalPower(e=1){e===0&&(e=1);const i=this.runeMetal?1.5:1,s=this.attackTile?100:0,n=this.superCharge?3:1,r=this.isDebuffed?.5:1;return(this.basePower+s)*e*n*r*i}getLifeLost(e,i){const s={[J.MAGICAL]:this.magicalDamageResistance,[J.PHYSICAL]:this.physicalDamageResistance},n=s[i],r=s?e-e*n/100:e;return r>this.currentHealth?this.currentHealth:r}getTotalHealing(e){const i=this.runeMetal?1.5:1,s=this.attackTile?100:0,n=this.superCharge?3:1,r=this.isDebuffed?.5:1;return(this.basePower+s)*e*n*r*i}getsHealed(e,i=!0){if(e<=0)return;let s;return this.currentHealth+e>=this.maxHealth?(s=this.maxHealth-this.currentHealth,this.currentHealth=this.maxHealth):(this.currentHealth+=e,s=e),this.healthBar.setHealth(this.maxHealth,this.currentHealth),s>0&&i&&new pe(this.context,this.x,this.y-50,s.toString(),!0),this.isKO&&this.getsRevived(),this.unitCard.updateCardData(this),this.updateTileData(),s}getsRevived(){this.reviveEvent=this.singleEvent(this.reviveAnim,["reviveAnim_1","reviveAnim_2","reviveAnim_3"],150),this.isKO=!1,this.lastBreath=!1,this.characterImage.setTexture(this.updateCharacterImage());const{charImageX:e,charImageY:i}=ve(this.unitType,this.belongsTo===1,!1,!1);this.specialTileCheck(this.getTile().tileType),this.characterImage.x=e,this.characterImage.y=i}increaseMaxHealth(e,i=!0){if(e<=0)return;this.isKO&&this.getsRevived();const s=me(e);this.maxHealth+=s,this.currentHealth+=s,this.healthBar.setHealth(this.maxHealth,this.currentHealth),i&&new pe(this.context,this.x,this.y-50,e.toString(),!0),this.unitCard.updateCardData(this),this.updateTileData()}healAndIncreaseHealth(e,i){const s=this.getsHealed(e,!1);this.increaseMaxHealth(i,!1);const n=s?s+i:i;new pe(this.context,this.x,this.y-50,n.toString(),!0)}getsKnockedDown(e){this.scene.time.delayedCall(e,T,[this.context,g.HERO_DAMAGE_KO]),this.unitType!==y.PHANTOM&&this.scene.time.delayedCall(e,ia,[this.scene,this.unitType]),this.removeSpecialTileOnKo(),this.currentHealth=0,this.isKO=!0;const i=this.getTile();i.hero=this.exportData(),this.characterImage.setTexture(this.updateCharacterImage());const{charImageX:s,charImageY:n}=ve(this.unitType,this.belongsTo===1,!1,!0);this.characterImage.x=s,this.characterImage.y=n,Xe(this.context,this)}getTile(){var i,s;const e=(s=(i=this.context)==null?void 0:i.gameController)==null?void 0:s.board.getTileFromBoardPosition(this.boardPosition);if(!e)throw new Error("getTile() -> No tile found");return e}updateTileData(){const e=this.getTile();e.hero=this.exportData()}shuffleInDeck(){this.boardPosition=51;const e=this.exportData();this.context.gameController.hand.removeFromHand(e),this.context.gameController.deck.addToDeck(e),this.removeFromGame(!1)}removeFromGame(e=!0){var i;this.scene&&(this.scene.tweens.killTweensOf(this),this.list.forEach(s=>{this.scene.tweens.killTweensOf(s)}),this.crystalDebuffEvent.remove(!1),this.powerTileEvent.remove(!1),this.magicalResistanceTileEvent.remove(!1),this.physicalResistanceTileEvent.remove(!1),this.superChargeEvent.remove(!1),this.spawnEvent&&((i=this.spawnEvent)==null||i.remove(!1)),e&&this.removeFromBoard(),this.destroy(!0))}removeFromBoard(){this.getTile().removeHero();const i=this.context.gameController.board.units.findIndex(s=>s.unitId===this.unitId);i!==-1&&this.context.gameController.board.units.splice(i,1),Xe(this.context,this)}getDistanceToTarget(e){const i=this.context.gameController,s=i.board.getTileFromBoardPosition(this.boardPosition),n=i.board.getTileFromBoardPosition(e.boardPosition);return!s||!n?(console.error("Archer attack() No attacker or target tile found"),0):mt(s.row,s.col,n.row,n.col)}async move(e){const i=this.context.gameController,s=i.board.getTileFromBoardPosition(this.boardPosition);if(s){if(i.afterAction(b.MOVE,s.boardPosition,e.boardPosition),await aa(this.context,this,e),e.hero&&e.hero.isKO){const n=i.board.units.find(r=>{var c;return r.unitId===((c=e.hero)==null?void 0:c.unitId)});n||console.error("move() Found heroData on targetTile, but no Hero to remove",e),T(this.context,g.HERO_STOMP),n==null||n.removeFromGame(!0)}this.specialTileCheck(e.tileType,s.tileType),this.updatePosition(e),e.hero=this.exportData(),s.removeHero()}}spawn(e){const i=this.boardPosition,s=this.context.gameController;if(e.hero&&(e.hero.isKO||e.isEnemy(this.context.userId)&&e.hero.unitType===y.PHANTOM)){const c=s.board.units.find(h=>{var d;return h.unitId===((d=e.hero)==null?void 0:d.unitId)});c||console.error("spawn() Found heroData on tile, but no Hero to remove",e),T(this.context,g.HERO_STOMP),c==null||c.removeFromGame(!0)}s.hand.removeFromHand(this),s.board.units.push(this),this.characterImage.setScale(1);const{charImageX:n,charImageY:r}=ve(this.unitType,this.belongsTo===1,!1,!1);this.characterImage.x=n,this.characterImage.y=r,this.belongsTo===2&&this.characterImage.setFlipX(!0),this.unitCard.y=0,this.specialTileCheck(e.tileType),this.updatePosition(e),this.updateTileData(),this.healthBar.setVisible(!0),T(this.context,g.HERO_SPAWN),s.afterAction(b.SPAWN,i,e.boardPosition)}isFullHP(){return this.maxHealth===this.currentHealth}isAlreadyEquipped(e){return!!{[P.DRAGON_SCALE]:this.factionBuff,[P.SOUL_STONE]:this.factionBuff,[P.RUNE_METAL]:this.runeMetal,[P.SHINING_HELM]:this.shiningHelm,[P.SUPERCHARGE]:this.superCharge}[e.itemType]}equipShiningHelm(e){const i=this.scene.add.image(this.x,this.y,"shiningHelm").setDepth(100);ee(i),this.shiningHelm=!0,this.magicalDamageResistance+=20,this.increaseMaxHealth(this.baseHealth*.1),this.shiningHelmImage.setVisible(!0),this.characterImage.setTexture(this.updateCharacterImage()),this.unitCard.updateCardData(this),this.updateTileData(),this.context.gameController.afterAction(b.USE,e,this.boardPosition)}equipRunemetal(e){const i=this.scene.add.image(this.x,this.y,"runeMetal").setDepth(100);ee(i),this.runeMetal=!0,this.runeMetalImage.setVisible(!0),this.runeMetalImage.setVisible(!0),this.characterImage.setTexture(this.updateCharacterImage()),this.unitCard.updateCardData(this),this.updateTileData(),this.context.gameController.afterAction(b.USE,e,this.boardPosition)}equipSuperCharge(e){this.superCharge=!0,this.unitCard.updateCardData(this),this.updateTileData(),this.superChargeAnim.setVisible(!0),this.context.gameController.afterAction(b.USE,e,this.boardPosition)}updateCrystals(e){this.context.gameController.board.crystals.forEach(i=>{if(i.belongsTo!==this.belongsTo){let s=0;e&&(s=i.debuffLevel+1),!e&&i.debuffLevel>0&&(s=i.debuffLevel-1),i.updateDebuffAnimation(s)}})}specialTileCheck(e,i,s=!0){i===S.CRYSTAL_DAMAGE&&(this.updateCrystals(!1),this.crystalDebuffTileAnim.setVisible(!1)),i===S.POWER&&(this.attackTile=!1,this.powerTileAnim.setVisible(!1)),i===S.MAGICAL_RESISTANCE&&(this.magicalDamageResistance-=20,this.magicalResistanceTileAnim.setVisible(!1)),i===S.PHYSICAL_RESISTANCE&&(this.physicalDamageResistance-=20,this.physicalResistanceTileAnim.setVisible(!1)),i===S.SPEED&&(this.speedTile=!1,this.magicalResistanceTileAnim.setVisible(!1)),e===S.CRYSTAL_DAMAGE&&(console.log("crystal"),this.updateCrystals(!0),this.crystalDebuffTileAnim.setVisible(!0),s&&T(this.scene,g.CRYSTAL_TILE)),e===S.POWER&&(this.attackTile=!0,this.powerTileAnim.setVisible(!0),s&&T(this.scene,g.SWORD_TILE)),e===S.MAGICAL_RESISTANCE&&(this.magicalDamageResistance+=20,this.magicalResistanceTileAnim.setVisible(!0),s&&T(this.scene,g.HELM_TILE)),e===S.PHYSICAL_RESISTANCE&&(this.physicalDamageResistance+=20,this.physicalResistanceTileAnim.setVisible(!0),s&&T(this.scene,g.SHIELD_TILE)),e===S.SPEED&&(this.speedTile=!0,this.magicalResistanceTileAnim.setVisible(!0),s&&T(this.scene,g.HELM_TILE)),this.unitCard.updateCardData(this)}removeSpecialTileOnKo(){const e=this.getTile();e.tileType===S.CRYSTAL_DAMAGE&&(this.updateCrystals(!1),this.crystalDebuffTileAnim.setVisible(!1)),e.tileType===S.POWER&&(this.attackTile=!1,this.powerTileAnim.setVisible(!1)),e.tileType===S.MAGICAL_RESISTANCE&&(this.magicalDamageResistance-=20,this.magicalResistanceTileAnim.setVisible(!1)),e.tileType===S.PHYSICAL_RESISTANCE&&(this.physicalDamageResistance-=20,this.physicalResistanceTileAnim.setVisible(!1)),this.unitCard.updateCardData(this)}updateCharacterImage(){return this.unitType===y.PHANTOM?"phantom_1":this.isKO?`${this.unitType}_9`:this.runeMetal&&this.factionBuff&&this.shiningHelm?`${this.unitType}_8`:this.runeMetal&&this.shiningHelm?`${this.unitType}_7`:this.factionBuff&&this.shiningHelm?`${this.unitType}_6`:this.factionBuff&&this.runeMetal?`${this.unitType}_5`:this.factionBuff?`${this.unitType}_4`:this.shiningHelm?`${this.unitType}_3`:this.runeMetal?`${this.unitType}_2`:`${this.unitType}_1`}removeAttackModifiers(){this.isDebuffed=!1,this.debuffImage.setVisible(!1),this.superCharge=!1,this.superChargeAnim.setVisible(!1),this.unitCard.updateCardData(this);const e=this.getTile();e.hero=this.exportData()}flashActingUnit(){this.characterImage.setTint(3381759),this.scene.time.delayedCall(800,()=>this.characterImage.clearTint())}}class Mt extends Phaser.GameObjects.Container{constructor(e,i){const s=i.boardPosition>44?-180:0;super(e,0,s);o(this,"cardBackgroundImage");o(this,"unitPictureImage");o(this,"cardSeparatorImage");o(this,"context");o(this,"cardFlavorText");o(this,"cardTypeText");o(this,"cardNameText");this.context=e,this.cardBackgroundImage=e.add.image(10,10,"cardBackground"),this.unitPictureImage=e.add.image(-130,-140,`${i.itemType}CardPic`).setOrigin(.5).setScale(.4),this.cardSeparatorImage=e.add.image(50,-100,"cardSeparator").setOrigin(.5).setScale(1.3);const{cardText:n,cardType:r,cardName:c}=ft(i.itemType);this.cardNameText=this.context.add.text(55,-170,Ee(c),{fontFamily:"proLight",fontSize:50,color:"#ffffff"}).setOrigin(.5),this.cardTypeText=this.context.add.text(55,-130,Ee(r),{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.cardFlavorText=this.context.add.text(-170,-80,n,{fontFamily:"proLight",fontSize:28,color:"#ffffff",wordWrap:{width:this.cardBackgroundImage.width-50,useAdvancedWrap:!0}}).setOrigin(0),this.add([this.cardBackgroundImage,this.unitPictureImage,this.cardSeparatorImage,this.cardFlavorText,this.cardTypeText,this.cardNameText])}}class Z extends Phaser.GameObjects.Container{constructor(e,i){const{x:s,y:n}=e.centerPoints[i.boardPosition];super(e,s,n-20);o(this,"class",W.ITEM);o(this,"faction");o(this,"unitId");o(this,"itemType");o(this,"boardPosition");o(this,"isActiveValue");o(this,"belongsTo");o(this,"canHeal");o(this,"dealsDamage");o(this,"itemImage");o(this,"context");o(this,"unitCard");this.context=e,this.unitCard=new Mt(e,i).setVisible(!1),this.unitId=i.unitId,this.faction=i.faction,this.itemType=i.itemType,this.boardPosition=i.boardPosition,this.isActiveValue=!1,this.belongsTo=i.belongsTo??1,this.canHeal=i.canHeal??!1,this.dealsDamage=i.dealsDamage??!1,this.itemImage=e.add.image(0,0,this.itemType).setOrigin(.5).setName("itemImage"),nt(this,e),this.boardPosition===51&&this.setVisible(!1).disableInteractive(),this.itemImage.displayWidth=110,this.itemImage.displayHeight=110,this instanceof ct&&(this.itemImage.displayWidth=55,this.itemImage.displayHeight=55),this instanceof lt&&(this.itemImage.displayWidth=45,this.itemImage.displayHeight=65);const r=new Phaser.Geom.Rectangle(-35,-30,75,85);this.add([this.itemImage,this.unitCard]).setDepth(this.boardPosition+10).setInteractive({hitArea:r,hitAreaCallback:Phaser.Geom.Rectangle.Contains,useHandCursor:!0}).setName(this.unitId),e.add.existing(this)}get isActive(){return this.isActiveValue}set isActive(e){this.isActiveValue=e,e?this.onActivate():this.onDeactivate()}exportData(){return{class:this.class,faction:this.faction,unitId:this.unitId,itemType:this.itemType,boardPosition:this.boardPosition,belongsTo:this.belongsTo,canHeal:this.canHeal,dealsDamage:this.dealsDamage}}updatePosition(e){const{x:i,y:s}=this.context.centerPoints[e];this.x=i,this.y=s,this.boardPosition=e}onActivate(){console.log(`${this.unitId} is now active`),this.setScale(1.2)}onDeactivate(){console.log(`${this.unitId} is now inactive`),this.setScale(1)}shuffleInDeck(){this.boardPosition=51;const e=this.exportData();this.context.gameController.deck.addToDeck(e),this.removeFromGame()}removeFromGame(){this.scene.tweens.killTweensOf(this),this.context.gameController.hand.removeFromHand(this),this.destroy(!0)}}class lt extends Z{constructor(a,e){super(a,e)}use(a){a.equipShiningHelm(this.boardPosition),T(this.scene,g.ITEM_USE),this.removeFromGame()}}class Ft extends Z{constructor(a,e){super(a,e)}use(a){a.equipRunemetal(this.boardPosition),T(this.scene,g.RUNE_METAL_USE),this.removeFromGame()}}class ct extends Z{constructor(a,e){super(a,e)}use(a){a.equipSuperCharge(this.boardPosition),T(this.scene,g.SCROLL_USE),this.removeFromGame()}}class Ie extends _{constructor(a,e,i){super(a,e,i)}equipFactionBuff(a){const e=this.scene.add.image(this.x+10,this.y-10,"dragonScale").setOrigin(.5).setDepth(100);ee(e),this.factionBuff=!0,this.factionBuffImage.setVisible(!0),this.characterImage.setTexture(this.updateCharacterImage()),this.physicalDamageResistance+=20,this.increaseMaxHealth(this.baseHealth*.1),this.unitCard.updateCardData(this),this.updateTileData(),this.context.gameController.afterAction(b.USE,a,this.boardPosition)}}class $t extends Ie{constructor(a,e,i){super(a,e,i)}attack(a){this.flashActingUnit();const e=this.getDistanceToTarget(a);G(this.context,this,a);let i=0;e===1?a instanceof _&&a.isKO&&N(this.context,a.getTile())?(T(this.scene,g.ARCHER_ATTACK_MELEE),i=500,a.removeFromGame()):(T(this.scene,g.ARCHER_ATTACK_MELEE),i=500,a.getsDamaged(this.getTotalPower(.5),this.attackType,i),this.removeAttackModifiers()):(this.superCharge?(T(this.scene,g.ARCHER_ATTACK_BIG),i=750):(T(this.scene,g.ARCHER_ATTACK),i=600),a.getsDamaged(this.getTotalPower(),this.attackType,i),this.removeAttackModifiers()),a&&a instanceof _&&a.isKO&&a.unitType===y.PHANTOM&&a.removeFromGame(),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}heal(a){}teleport(a){}}class Ut extends Ie{constructor(a,e,i){super(a,e,i)}async attack(a){this.flashActingUnit();const e=this.context.gameController;G(this.context,this,a);let i=0;a instanceof _&&a.isKO&&N(this.context,a.getTile())?(T(this.scene,g.KNIGHT_ATTACK),a.removeFromGame()):(this.superCharge?(T(this.scene,g.KNIGHT_ATTACK_BIG),i=750):(T(this.scene,g.KNIGHT_ATTACK),i=500),a.getsDamaged(this.getTotalPower(),this.attackType,i),a instanceof _&&a.unitType!==y.PHANTOM&&e.pushEnemy(this,a),this.removeAttackModifiers()),a&&a instanceof _&&a.isKO&&a.unitType===y.PHANTOM&&a.removeFromGame(),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}heal(a){}teleport(a){}}class Gt extends Ie{constructor(a,e,i){super(a,e,i)}attack(a){this.flashActingUnit();const e=this.context.gameController;if(G(this.context,this,a),this.getDistanceToTarget(a)===1&&a instanceof _&&a.isKO&&N(this.context,a.getTile()))T(this.scene,g.WIZARD_ATTACK),a.removeFromGame();else{this.superCharge?T(this.scene,g.WIZARD_ATTACK_BIG):T(this.scene,g.WIZARD_ATTACK);const s=e.board.getAttackDirection(this.boardPosition,a.boardPosition),n=this.context.isPlayerOne?[2,3,4]:[6,7,8];let r=[a];const c=this.getNextTarget(a,s,n,e.board,!1);if(c){r.push(c);const u=this.getNextTarget(c,s,n,e.board,!1,[a.boardPosition,c.boardPosition]);u&&r.push(u)}const h=[1,.75,.56],d=[650,775,900];r.forEach((u,m)=>{const p=this.getTotalPower()*(h[m]||0),f=d[m]||d[0];u.getsDamaged(p,this.attackType,f),u&&u instanceof _&&u.isKO&&u.unitType===y.PHANTOM&&u.removeFromGame()}),this.removeAttackModifiers()}this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}getNextTarget(a,e,i,s,n,r){const c=r||[a.boardPosition],h=this.getAdjacentEnemyTiles(a.boardPosition,c);let d=-1,u;for(const m of h){const p=s.getAttackDirection(a.boardPosition,m.boardPosition);let f=0;if(p===e&&(f+=2),this.getGeneralDirections(e).includes(p)&&(f+=1.5),i.includes(p)&&(f+=1),[1,3,5,7].includes(p)&&(f+=1),n||this.getAdjacentEnemyTiles(m.boardPosition,[m.boardPosition]).length&&(f+=1.5),f>d&&(d=f,u=m),d===6)break}if(!u){console.log("getNextTarget() No suitable adjacent target found.");return}if(u.hero){const m=s.units.find(p=>p.unitId===u.hero.unitId);if(m)return m}if(u.crystal){const m=s.crystals.find(p=>p.boardPosition===u.crystal.boardPosition);if(m)return m}throw new Error("getNextTarget() Target found on tile, but not in board units or crystals")}getAdjacentEnemyTiles(a,e=[]){const i=[-10,-9,-8,-1,1,8,9,10],s=[-10,-1,8],n=[10,1,-8],r=[],c=9,h=a%c===0,d=(a+1)%c===0;for(const u of i){if(h&&s.includes(u)||d&&n.includes(u))continue;const m=a+u;if(ut(m)&&!e.includes(m)){const p=this.context.gameController.board.getTileFromBoardPosition(m);pt(this,p)&&r.push(p)}}return r}getGeneralDirections(a){switch(a){case 1:return[1,2,8];case 2:return[[1,2,8],[2,3,4]].flat();case 3:return[2,3,4];case 4:return[[2,3,4],[4,5,6]].flat();case 5:return[4,5,6];case 6:return[[4,5,6],[6,7,8]].flat();case 7:return[6,7,8];case 8:return[[1,2,8],[6,7,8]].flat();default:return[]}}heal(a){}teleport(a){}}class xt extends Ie{constructor(a,e,i){super(a,e,i)}attack(a){this.flashActingUnit(),G(this.context,this,a);const e=this.getDistanceToTarget(a);let i=0;const s=()=>{this.superCharge?(T(this.scene,g.NINJA_ATTACK_BIG),i=650):e===1?(T(this.scene,g.NINJA_ATTACK),i=500):(T(this.scene,g.NINJA_ATTACK_RANGED),i=500)};e===1?a instanceof _&&a.isKO&&N(this.context,a.getTile())?(T(this.scene,g.NINJA_ATTACK),a.removeFromGame()):(s(),a.getsDamaged(this.getTotalPower(2),this.attackType,i),this.removeAttackModifiers()):(s(),a.getsDamaged(this.getTotalPower(),this.attackType,i),this.removeAttackModifiers()),a&&a instanceof _&&a.isKO&&a.unitType===y.PHANTOM&&a.removeFromGame(),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}teleport(a){T(this.scene,g.NINJA_SMOKE);const e=this.getTile(),i=a.getTile();this.singleTween(this.smokeAnim,500),a.singleTween(a.smokeAnim,500),a.specialTileCheck(e.tileType,i.tileType),a.updatePosition(e),e.hero=a.exportData(),this.specialTileCheck(i.tileType,e.tileType),this.updatePosition(i),i.hero=this.exportData(),this.context.gameController.afterAction(b.TELEPORT,e.boardPosition,i.boardPosition)}heal(a){}}class Vt extends Ie{constructor(a,e,i){super(a,e,i)}attack(a){this.flashActingUnit(),G(this.context,this,a);const e=this.getDistanceToTarget(a);let i=0;e===1&&a instanceof _&&a.isKO&&N(this.context,a.getTile())?(this.superCharge?T(this.scene,g.CLERIC_ATTACK_BIG):T(this.scene,g.CLERIC_ATTACK),a.removeFromGame()):(this.superCharge?(T(this.scene,g.CLERIC_ATTACK_BIG),i=750):(T(this.scene,g.CLERIC_ATTACK),i=300),a.getsDamaged(this.getTotalPower(),this.attackType,i),this.removeAttackModifiers()),a&&a instanceof _&&a.isKO&&a.unitType===y.PHANTOM&&a.removeFromGame(),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}heal(a){var e;if(this.flashActingUnit(),G(this.context,this,a),a.isKO){const i=this.getTotalHealing(2);a.getsHealed(i)}else{const i=this.getTotalHealing(3);a.getsHealed(i)}this.removeAttackModifiers(),(e=this.context.gameController)==null||e.afterAction(b.HEAL,this.boardPosition,a.boardPosition),T(this.scene,g.HEAL),setTimeout(T,750,this.scene,g.HEAL_EXTRA)}teleport(a){}}class Kt extends Z{constructor(a,e){super(a,e)}use(a){a.equipFactionBuff(this.boardPosition),this.removeFromGame()}}class Wt extends Z{constructor(a,e){super(a,e)}use(a){T(this.scene,g.POTION_USE);const e=this.scene.add.image(a.x,a.y-10,"healingPotion").setDepth(100);ee(e);const i=a.isKO?100:1e3;a.getsHealed(i),this.removeFromGame(),this.context.gameController.afterAction(b.USE,this.boardPosition,a.boardPosition)}}class jt extends Z{constructor(a,e){super(a,e)}use(a){const e=this.scene.add.image(a.x,a.y,"infernoShockWave").setDepth(100);ee(e,3),T(this.scene,g.INFERNO_USE);const i=350,{enemyHeroTiles:s,enemyCrystalTiles:n}=gt(this.context,this,a);s==null||s.forEach(r=>{const c=this.context.gameController.board.units.find(h=>h.boardPosition===r.boardPosition);if(!c)throw new Error("Inferno use() hero not found");if(c.isKO){c.removeFromGame(!0);return}c.getsDamaged(i,J.MAGICAL,800),c&&c instanceof _&&c.unitType===y.PHANTOM&&c.removeFromGame()}),n.forEach(r=>{const c=this.context.gameController.board.crystals.find(h=>h.boardPosition===r.boardPosition);if(!c)throw new Error("Inferno use() crystal not found");c.belongsTo!==this.belongsTo&&c.getsDamaged(i,J.MAGICAL,800)}),this.removeFromGame(),this.context.gameController.afterAction(b.USE,this.boardPosition,a.boardPosition)}}class Ae extends _{constructor(a,e,i){super(a,e,i)}equipFactionBuff(a){const e=this.scene.add.image(this.x,this.y-10,"soulStone").setOrigin(.5).setDepth(100);ee(e),this.factionBuff=!0,this.factionBuffImage.setVisible(!0),this.characterImage.setTexture(this.updateCharacterImage()),this.increaseMaxHealth(this.baseHealth*.1),this.unitCard.updateCardData(this),this.updateTileData(),T(this.scene,g.ITEM_USE),this.context.gameController.afterAction(b.USE,a,this.boardPosition)}lifeSteal(a){if(this.factionBuff){const e=me(a*.666);this.getsHealed(e)}else{const e=me(a*.333);this.getsHealed(e)}}}class zt extends Ae{constructor(a,e,i){super(a,e,i)}async attack(a){this.flashActingUnit(),G(this.context,this,a);const e=this.getDistanceToTarget(a);let i=0;e===1?(T(this.scene,g.IMPALER_ATTACK_MELEE),i=750,a instanceof _&&a.isKO&&N(this.context,a.getTile())&&a.removeFromGame()):this.superCharge?(T(this.scene,g.IMPALER_ATTACK_BIG),i=1500):(T(this.scene,g.IMPALER_ATTACK),i=650);const s=a.getsDamaged(this.getTotalPower(),this.attackType,i);s!==void 0&&this.lifeSteal(s),this.removeAttackModifiers(),a instanceof _&&a.unitType!==y.PHANTOM&&this.context.gameController.pullEnemy(this,a),a&&a instanceof _&&a.isKO&&a.unitType===y.PHANTOM&&a.removeFromGame(),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}heal(a){}teleport(a){}}class Yt extends Ae{constructor(a,e,i){super(a,e,i)}attack(a){this.flashActingUnit(),G(this.context,this,a);const e=[];let i=0;if(this.superCharge?(T(this.scene,g.VOIDMONK_ATTACK_BIG),i=3e3):(T(this.scene,g.VOIDMONK_ATTACK),i=650),a instanceof _&&a.isKO&&N(this.context,a.getTile()))a.removeFromGame();else{const s=this.context.gameController.board,n=s.getAttackDirection(this.boardPosition,a.boardPosition),r=this.getOffsetTiles(a.boardPosition,n);if(!r.length)throw new Error(`voidMonk attack() No offsetTiles: ${this.boardPosition}, ${a.boardPosition}`);for(const d of r){const u=a.boardPosition+d;if(!ut(u))continue;const m=s.getTileFromBoardPosition(u);if(!m)throw new Error("voidMonk attack() No tile found");if(pt(this,m)){if(m.hero){const p=s.units.find(f=>f.unitId===m.hero.unitId);p&&e.push(p)}if(m.crystal){const p=s.crystals.find(f=>f.boardPosition===m.crystal.boardPosition);p&&e.push(p)}}}let c=0;const h=a.getsDamaged(this.getTotalPower(),this.attackType,i);if(h&&(c+=h),e.length){const d=this.getTotalPower()*.666;console.log(d),e.forEach(u=>{const m=u.getsDamaged(d,this.attackType,i,.666);m&&(c+=m)})}c&&this.lifeSteal(c),this.removeAttackModifiers()}e.forEach(s=>{s instanceof _&&s.unitType===y.PHANTOM&&s.isKO&&s.removeFromGame(!0)}),a&&a instanceof _&&a.isKO&&a.unitType===y.PHANTOM&&a.removeFromGame(),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}getOffsetTiles(a,e){switch(e){case 1:return[-1,1,-9];case 3:return[-9,1,9];case 5:return[-1,1,9];case 7:return[-9,-1,9];default:return[]}}heal(a){}teleport(a){}}class Xt extends Ae{constructor(a,e,i){super(a,e,i)}attack(a){var s;this.flashActingUnit(),G(this.context,this,a);let e=0;if(a instanceof _&&a.isKO){const n=a.getTile();T(this.scene,g.PHANTOM_SPAWN);const r=new Ge(this.context,ea({unitId:`${this.context.userId}_phantom_${na()}`,boardPosition:a.boardPosition,belongsTo:this.belongsTo,row:a.row,col:a.col}),n,!0);a.removeFromGame(!0),(s=this.context.gameController)==null||s.board.units.push(r),n.hero=r.exportData(),this.context.gameController.afterAction(b.SPAWN_PHANTOM,this.boardPosition,a.boardPosition);return}else this.superCharge?(T(this.scene,g.NECROMANCER_ATTACK_BIG),e=1500):(T(this.scene,g.NECROMANCER_ATTACK),e=800);const i=a.getsDamaged(this.getTotalPower(),this.attackType,e);i&&this.lifeSteal(i),this.removeAttackModifiers(),a&&a instanceof _&&a.isKO&&a.unitType===y.PHANTOM&&a.removeFromGame(),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}heal(a){}teleport(a){}}class qt extends Ae{constructor(a,e,i){super(a,e,i)}attack(a){this.flashActingUnit(),G(this.context,this,a);const e=this.getDistanceToTarget(a);let i=0;if(e===1&&a instanceof _&&a.isKO&&N(this.context,a.getTile()))T(this.scene,g.PRIESTESS_ATTACK),a.removeFromGame();else{T(this.scene,g.PRIESTESS_ATTACK),i=500;const s=a.getsDamaged(this.getTotalPower(),this.attackType,i);s&&this.lifeSteal(s),a instanceof _&&(a.isDebuffed=!0,a.debuffImage.setVisible(!0),a.updateTileData(),a.unitCard.updateCardData(a)),this.removeAttackModifiers()}a&&a instanceof _&&a.isKO&&a.unitType===y.PHANTOM&&a.removeFromGame(),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}async heal(a){var e;if(this.flashActingUnit(),G(this.context,this,a),T(this.scene,g.HEAL),a.isKO){const i=this.getTotalHealing(.5);a.getsHealed(i)}else{const i=this.getTotalHealing(2);a.getsHealed(i)}this.removeAttackModifiers(),(e=this.context.gameController)==null||e.afterAction(b.HEAL,this.boardPosition,a.boardPosition)}teleport(a){}}class Jt extends Ae{constructor(a,e,i){super(a,e,i)}attack(a){this.flashActingUnit(),G(this.context,this,a);let e=0;if(a instanceof _&&a.isKO)T(this.scene,g.WRAITH_CONSUME),a.removeFromGame(!0),this.unitsConsumed<3&&(this.basePower+=50,this.unitsConsumed++,this.increaseMaxHealth(100),this.updateTileData(),this.unitCard.updateCardData(this));else{this.superCharge?(T(this.scene,g.WRAITH_ATTACK_BIG),e=4e3):(T(this.scene,g.WRAITH_ATTACK),e=100);const i=a.getsDamaged(this.getTotalPower(),this.attackType,e);i&&this.lifeSteal(i),this.removeAttackModifiers()}a&&a instanceof _&&a.isKO&&a.unitType===y.PHANTOM&&a.removeFromGame(),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,a.boardPosition)}playSuperHitSounds(){const a=[g.HERO_DAMAGE_1,g.HERO_DAMAGE_2,g.HERO_DAMAGE_3,g.HERO_DAMAGE_4];let e=0;e+=1500,this.context.time.delayedCall(e,()=>{this.context.sound.play(Phaser.Math.RND.pick(a),{volume:.5})}),e+=250,this.context.time.delayedCall(e,()=>{this.context.sound.play(Phaser.Math.RND.pick(a),{volume:.5})}),e+=350,this.context.time.delayedCall(e,()=>{this.context.sound.play(Phaser.Math.RND.pick(a),{volume:.5})}),e+=400,this.context.time.delayedCall(e,()=>{this.context.sound.play(Phaser.Math.RND.pick(a),{volume:.5})}),e+=350,this.context.time.delayedCall(e,()=>{this.context.sound.play(Phaser.Math.RND.pick(a),{volume:.5})}),e+=200,this.context.time.delayedCall(e,()=>{this.context.sound.play(Phaser.Math.RND.pick(a),{volume:.5})}),e+=300,this.context.time.delayedCall(e,()=>{this.context.sound.play(Phaser.Math.RND.pick(a),{volume:.5})})}heal(a){}teleport(a){}}class Ge extends _{constructor(e,i,s,n=!1){super(e,i,s);o(this,"spawnAnim");n&&s&&(this.spawnAnim=e.add.image(0,-15,"phantomSpawnAnim_1").setOrigin(.5).setScale(.9),this.specialTileCheck(s.tileType),this.add([this.spawnAnim]),this.singleTween(this.spawnAnim,200))}async attack(e){this.flashActingUnit(),G(this.context,this,e),T(this.scene,g.WRAITH_ATTACK),e instanceof _&&e.isKO&&N(this.context,e.getTile())?e.removeFromGame():(e.getsDamaged(this.getTotalPower(),this.attackType,100),this.removeAttackModifiers()),this.context.gameController.afterAction(b.ATTACK,this.boardPosition,e.boardPosition)}heal(e){}teleport(e){}equipFactionBuff(){}}class Zt extends Z{constructor(a,e){super(a,e)}use(a){a.equipFactionBuff(this.boardPosition),this.removeFromGame()}}class ht extends Z{constructor(a,e){super(a,e)}use(a){T(this.scene,g.POTION_USE);const e=this.scene.add.image(a.x,a.y-10,"manaVial").setDepth(100);ee(e),!a.isKO&&(a.manaVial?a.getsHealed(1e3):(a.healAndIncreaseHealth(1e3,50),a.manaVial=!0,a.updateTileData()),this.context.gameController.afterAction(b.USE,this.boardPosition,a.boardPosition),this.removeFromGame())}}class Qt extends Z{constructor(a,e){super(a,e)}use(a){const e=this.scene.add.image(a.x,a.y-20,"soulHarvestShockWave").setDepth(100);ee(e),T(this.scene,g.USE_HARVEST);const i=this.context.gameController;if(!i){console.error("SoulHarvest use() No gamecontroller");return}const s=100,{enemyHeroTiles:n,enemyCrystalTiles:r}=gt(this.context,this,a);let c=0;n==null||n.forEach(u=>{const m=i.board.units.find(p=>p.boardPosition===u.boardPosition);if(!m)throw new Error("SoulHarvest use() hero not found");m.isKO||(c+=m.getsDamaged(s,J.MAGICAL,700),m&&m instanceof _&&m.unitType===y.PHANTOM&&m.removeFromGame())}),r.forEach(u=>{const m=i.board.crystals.find(p=>p.boardPosition===u.boardPosition);if(!m)throw new Error("SoulHarvest use() crystal not found");m.belongsTo!==this.belongsTo&&m.getsDamaged(s,J.MAGICAL,700)});const h=i.board.units.filter(u=>u.belongsTo===this.belongsTo),d=me(1/(h.length+3)*c);h.forEach(u=>u.increaseMaxHealth(d)),i.afterAction(b.USE,this.boardPosition,a.boardPosition),this.removeFromGame()}}function ea(t){return{unitType:y.PHANTOM,baseHealth:100,maxHealth:100,currentHealth:t.currentHealth??100,movement:3,attackRange:1,healingRange:0,attackType:J.MAGICAL,basePower:100,physicalDamageResistance:0,basePhysicalDamageResistance:0,magicalDamageResistance:0,baseMagicalDamageResistance:0,canHeal:!1,...ta(t)}}function ta(t){return{class:W.HERO,faction:M.DARK_ELVES,unitId:t.unitId,boardPosition:t.boardPosition??51,isKO:t.isKO??!1,lastBreath:t.lastBreath??!1,factionBuff:t.factionBuff??!1,runeMetal:t.runeMetal??!1,shiningHelm:t.shiningHelm??!1,superCharge:t.superCharge??!1,belongsTo:t.belongsTo??1,row:t.row??0,col:t.col??0,isDebuffed:t.isDebuffed??!1,attackTile:t.attackTile??!1}}function E(t){return t.class==="hero"}function q(t){return t.class==="item"}function dt(t){return t>44&&t<51}function ut(t){return t>=0&&t<=44}function de(t,a){const e=t.isPlayerOne?1:2;return a.belongsTo===e}function me(t){return Math.round(t/5)*5}function mt(t,a,e,i){return Math.abs(t-e)+Math.abs(a-i)}function Fe(t,a){const i={[P.SHINING_HELM]:()=>new lt(t,a),[P.SUPERCHARGE]:()=>new ct(t,a),[P.RUNE_METAL]:()=>new Ft(t,a),[P.DRAGON_SCALE]:()=>new Kt(t,a),[P.HEALING_POTION]:()=>new Wt(t,a),[P.INFERNO]:()=>new jt(t,a),[P.MANA_VIAL]:()=>new ht(t,a),[P.SOUL_HARVEST]:()=>new Qt(t,a),[P.SOUL_STONE]:()=>new Zt(t,a)}[a.itemType];return i||console.error("Error creating item",a),i()}function Te(t,a,e){const s={[y.ARCHER]:()=>new $t(t,a,e),[y.CLERIC]:()=>new Vt(t,a,e),[y.KNIGHT]:()=>new Ut(t,a,e),[y.NINJA]:()=>new xt(t,a,e),[y.WIZARD]:()=>new Gt(t,a,e),[y.PRIESTESS]:()=>new qt(t,a,e),[y.IMPALER]:()=>new zt(t,a,e),[y.NECROMANCER]:()=>new Xt(t,a,e),[y.PHANTOM]:()=>new Ge(t,a,e),[y.VOIDMONK]:()=>new Yt(t,a,e),[y.WRAITH]:()=>new Jt(t,a,e)}[a.unitType];return s||console.error("Error creating hero",a),s()}async function aa(t,a,e){[y.NECROMANCER,y.WRAITH,y.PHANTOM].includes(a.unitType)?T(t,g.MOVE_FLY):T(t,g.MOVE_WALK),t.input.enabled=!1;const s=a.getByName("body");let n;a.belongsTo===1&&e.x<a.x&&(s.setFlipX(!0),n=!0),a.belongsTo===2&&e.x>a.x&&(s.setFlipX(!1),n=!0),await((c,h)=>new Promise(d=>{t.tweens.add({targets:c,x:h.x,y:h.y,duration:400,ease:"Linear",onComplete:()=>{t.input.enabled=!0,n&&s.setFlipX(!s.flipX),d()}})})).call(t,a,e)}async function je(t,a,e){t.input.enabled=!1,await((s,n)=>new Promise(r=>{t.tweens.add({targets:s,x:n.x,y:n.y,duration:200,ease:"Linear",onComplete:()=>{t.input.enabled=!0,r()}})})).call(t,a,e)}function ze(t,a,e,i,s){let n=e-t,r=i-a;return n=Math.sign(n),r=Math.sign(r),s||(n*=-1,r*=-1),{row:e+n,col:i+r}}function T(t,a){t.sound.play(a)}function Ye(t,a){const i={[P.RUNE_METAL]:g.RUNE_METAL_SELECT,[P.SUPERCHARGE]:g.SCROLL_SELECT,[P.SHINING_HELM]:g.ITEM_SELECT,[P.DRAGON_SCALE]:g.SHIELD_SELECT,[P.HEALING_POTION]:g.POTION_SELECT,[P.INFERNO]:g.AOE_SPELL_SELECT,[P.SOUL_STONE]:g.ITEM_SELECT,[P.MANA_VIAL]:g.POTION_SELECT,[P.SOUL_HARVEST]:g.AOE_SPELL_SELECT}[a];i&&T(t,i)}function ia(t,a){const i={[y.ARCHER]:g.ARCHER_DEATH,[y.KNIGHT]:g.KNIGHT_DEATH,[y.CLERIC]:g.CLERIC_DEATH,[y.WIZARD]:g.WIZARD_DEATH,[y.NINJA]:g.NINJA_DEATH,[y.IMPALER]:g.IMPALER_DEATH,[y.VOIDMONK]:g.VOIDMONK_DEATH,[y.PRIESTESS]:g.PRIESTESS_DEATH,[y.NECROMANCER]:g.NECROMANCER_DEATH,[y.WRAITH]:g.WRAITH_DEATH,[y.PHANTOM]:g.PHANTOM_DEATH}[a];i&&T(t,i)}function sa(t){return[b.PASS,b.DRAW,b.REMOVE_UNITS].includes(t)?ye.AUTO:ye.USER}function gt(t,a,e){var c;const i=(c=t.gameController)==null?void 0:c.board;if(!i)throw new Error("Inferno use() board not found");const s=i.getAreaOfEffectTiles(e),n=s==null?void 0:s.filter(h=>{var d;return h.hero&&((d=h.hero)==null?void 0:d.belongsTo)!==a.belongsTo}),r=s==null?void 0:s.filter(h=>{var d;return h.crystal&&((d=h.crystal)==null?void 0:d.belongsTo)!==a.belongsTo});return{enemyHeroTiles:n,enemyCrystalTiles:r}}function pt(t,a){let e=!1;return a.hero&&a.hero.belongsTo!==t.belongsTo&&!a.hero.isKO&&(e=!0),a.crystal&&a.crystal.belongsTo!==t.belongsTo&&(e=!0),e}function oa(t,a){var p,f;let e,i;if(a.unitId.includes(t.player1.playerId)?(e=t.player2,i=t.player1):(e=t.player1,i=t.player2),!e||!i)throw new Error("updateUnitsLeft() No player found");const s=(p=t.gameController)==null?void 0:p.board.units;if(!s)throw new Error("updateUnitsLeft() no units array found");const n=s.filter(C=>C.belongsTo===a.belongsTo).find(C=>!C.isKO);let r,c;i.playerId===t.activePlayer?(r=(f=t.gameController)==null?void 0:f.hand.getHand(),c=r.find(C=>C.belongsTo===a.belongsTo&&C.class===W.HERO)):(r=i.factionData.unitsInHand,c=r.find(C=>C.belongsTo===a.belongsTo&&C.class===W.HERO));const d=i.factionData.unitsInDeck.find(C=>C.belongsTo===a.belongsTo&&C.class===W.HERO),u=[P.HEALING_POTION,P.SOUL_HARVEST],m=r?r.find(C=>u.includes(C==null?void 0:C.itemType)):void 0;return!(n||c||d||m)}function Xe(t,a){if(!oa(t,a))return;const e=a.unitId.includes(t.player1.playerId)?t.player2:t.player1;t.gameController.gameOver={winCondition:He.UNITS,winner:e.playerId}}function N(t,a){return a.tileType===S.SPAWN&&(t.isPlayerOne?a.col>5:a.col<5)}function G(t,a,e){const i=a.belongsTo===1,s=a.characterImage;i&&e.col>=a.col||!i&&e.col<=a.col||(i||s.setFlipX(!1),i&&s.setFlipX(!0),t.time.delayedCall(500,()=>{s.setFlipX(!a.characterImage.flipX)}))}function ft(t){return{[y.ARCHER]:{cardType:R.SHOOTER,cardText:"Marksman who does high damage to enemies at range. Weak melee attack."},[y.CLERIC]:{cardType:R.SUPPORT,cardText:"Spellcaster who revives and heals allies. Attacks enemies at range."},[y.KNIGHT]:{cardType:R.FIGHTER,cardText:"Heavily armored and an excellent defender. His attacks knock back enemies."},[y.NINJA]:{cardType:R.SUPER,cardText:"Deals double damage in melee range. He can teleport to allies."},[y.WIZARD]:{cardType:R.CASTER,cardText:"Powerful spellcaster, damages groups of enemies with chain lightning."},[y.PRIESTESS]:{cardType:R.SUPPORT,cardText:"She can heal up to 3 tiles away, and weakens enemy attacks."},[y.IMPALER]:{cardType:R.SHOOTER,cardText:"Wields a powerful harpoon that can pull enemies close."},[y.NECROMANCER]:{cardType:R.CASTER,cardText:"Dark caster who can create Phantoms from fallen units."},[y.PHANTOM]:{cardType:R.SUMMONED,cardText:"A summoned phantom from beyond."},[y.VOIDMONK]:{cardType:R.FIGHTER,cardText:"Strong melee fighter whose hits do splash damage."},[y.WRAITH]:{cardType:R.SUPER,cardText:"A terror who gains max health and power by draining K.O.'d units."},[P.SHINING_HELM]:{cardName:"Shining Helm",cardType:R.EQUIPMENT,cardText:"Adds 20% magical defense, and 10% max health."},[P.SUPERCHARGE]:{cardName:"Scroll",cardType:R.BUFF,cardText:"Multiplies an ally's attack power by 3 for one attack."},[P.RUNE_METAL]:{cardName:"Runemetal",cardType:R.EQUIPMENT,cardText:"Permanently increases an ally's power by 50%."},[P.DRAGON_SCALE]:{cardName:"Dragonscale",cardType:R.EQUIPMENT,cardText:"Adds 20% physical defense, and 10% max health."},[P.HEALING_POTION]:{cardName:"Healing Potion",cardType:R.CONSUMABLE,cardText:"Heals an ally for 1000 HP, or revives an ally with 100 HP."},[P.INFERNO]:{cardName:"Inferno",cardType:R.SPELL,cardText:"Damages all enemies in a 3x3 area and destroys knocked-out units."},[P.MANA_VIAL]:{cardName:"Mana Vial",cardType:R.CONSUMABLE,cardText:"Heals an ally for 1000 HP and increases max health by 50 HP."},[P.SOUL_HARVEST]:{cardName:"Soul Harvest",cardType:R.SPELL,cardText:"Drains health from enemies in a 3x3 area. Increases max health for all allies and revives knocked-out units."},[P.SOUL_STONE]:{cardName:"Soulstone",cardType:R.EQUIPMENT,cardText:"Doubles the effect of a unit's life leech and increases max health by 10%."}}[t]}function Ee(t){return t.charAt(0).toUpperCase()+t.slice(1)}function be(t,a){return t.length>a?t.slice(0,a-3)+"...":t}function De(t){t.visibleUnitCard&&(t.visibleUnitCard.setDepth(t.visibleUnitCard.boardPosition+10),t.visibleUnitCard.unitCard.setVisible(!1))}function na(){return Math.floor(1e3+Math.random()*9e3)}function ee(t,a=2){t.scene.tweens.add({targets:t,scale:a,alpha:0,duration:1e3,onComplete:()=>{t.destroy()}})}function ra(t,a=2){return new Promise(e=>{t.scene.tweens.add({targets:t,scale:a,alpha:50,duration:1e3,onComplete:()=>{t.destroy(),e()}})})}function yt(t,a=1e3){return new Promise(e=>{t.scene.tweens.add({targets:t,alpha:0,duration:a,ease:"Linear",onComplete:()=>{t.destroy(),e()}})})}const qe={x:800,y:400};class xe extends Phaser.GameObjects.Container{constructor(e){const{context:i,opponentId:s,challengeType:n,username:r,gameId:c}=e;super(i,qe.x,qe.y);o(this,"blockingLayer");o(this,"backgroundImage");o(this,"councilButtonImage");o(this,"elvesButtonImage");o(this,"cancelButtonImage");o(this,"popupText");o(this,"cancelButtonText");this.blockingLayer=i.add.rectangle(0,0,2e3,2e3,0,.001).setOrigin(.5).setInteractive(),this.backgroundImage=i.add.image(0,0,"popupBackground").setDisplaySize(500,300),this.councilButtonImage=i.add.image(-150,60,M.COUNCIL).setScale(.4).setInteractive({useHandCursor:!0}),this.elvesButtonImage=i.add.image(-10,60,M.DARK_ELVES).setScale(.4).setInteractive({useHandCursor:!0}),this.cancelButtonImage=i.add.image(130,60,"popupButton").setTint(10027008).setDisplaySize(110,60).setInteractive({useHandCursor:!0});const h=n===ne.SEND?`Pick a faction to challenge ${be(r,20)}`:"Pick a faction to accept the challenge";this.popupText=i.add.text(0,-50,h,{fontFamily:"proLight",fontSize:40,color:"#ffffff",align:"center",lineSpacing:10,wordWrap:{width:400,useAdvancedWrap:!0}}).setOrigin(.5),this.cancelButtonText=i.add.text(130,60,"BACK",{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5);const d=async u=>{i.sound.play(w.BUTTON_GENERIC),this.setVisible(!1),n===ne.SEND&&(await Dt(i.userId,u,s)||yt(i.add.text(200,350,"A player has reached the max amount of open games",{fontFamily:"proLight",fontSize:60,color:"#fffb00"}).setDepth(999),3e3)),n===ne.ACCEPT&&i instanceof At&&Ta(i.lobbyRoom,c,i.userId,u)};this.councilButtonImage.on("pointerdown",async()=>{T(this.scene,w.BUTTON_PLAY),await d(M.COUNCIL)}),this.elvesButtonImage.on("pointerdown",async()=>{T(this.scene,w.BUTTON_PLAY),await d(M.DARK_ELVES)}),this.cancelButtonImage.on("pointerdown",()=>{this.scene.sound.play(w.BUTTON_FAILED),this.setVisible(!1),this.destroy()}),this.add([this.blockingLayer,this.backgroundImage,this.popupText,this.councilButtonImage,this.elvesButtonImage,this.cancelButtonImage,this.cancelButtonText]),this.setDepth(1002),i.add.existing(this)}}const $e={player1:"",player2:""};function Tt(t){const a=document.getElementById("chatmessages");if(!a)return;const{username:e,message:i}=t,s=document.createElement("div");s.innerHTML=`<span class="username">${e}</span>: <span class="message">${i}</span>`;const n=s.querySelector(".username");n.style.color=$e.player1===t.username?"#4fc3f7":"#f44336",n.style.fontWeight="bold",a.appendChild(s),a.scrollTop=a.scrollHeight}function la(t){$e.player1=t.currentGame.players[0].userData.username,$e.player2=t.currentGame.players[1].userData.username;const a=t.add.dom(495,800).createFromCache("chatComponent").setOrigin(.5),e=a.node;e.style.pointerEvents="auto";const i=a.getChildByID("chatcomponent"),s=a.getChildByID("chatinput"),n=a.getChildByID("chatmessages"),r=t.scale.width,c=t.scale.height;i.style.width=`${r*.705}px`,i.style.height=`${c*.19}px`,i.style.backgroundColor="#111",i.style.borderRadius="8px",i.style.padding="8px",i.style.boxShadow="0 0 10px rgba(0,0,0,0.5)",i.style.display="flex",i.style.flexDirection="column",i.style.gap="8px",n.style.flex="1",n.style.overflowY="auto",n.style.overflowX="hidden",n.style.whiteSpace="pre-wrap",n.style.backgroundColor="#222",n.style.color="#fff",n.style.fontFamily="proLight",n.style.fontSize="30px",n.style.padding="8px",n.style.borderRadius="4px",n.style.maxHeight=`${c*.25}px`,n.style.touchAction="manipulation",s.style.width="100%",s.style.height="25px",s.style.padding="6px",s.style.border="none",s.style.borderRadius="4px",s.style.fontSize="25px",s.style.fontFamily="proLight";const h=a.getChildByID("chatmessages");return h.style.maxHeight=`${c*.25}px`,s.addEventListener("keydown",u=>{u.key==="Enter"&&s.value.trim()&&(console.log("Message: ",s.value),da(t.currentRoom,s.value.trim()),s.value="")}),t.currentGame.chatLogs.messages.forEach(u=>Tt(u)),n.scrollTop=n.scrollHeight,a}async function ca(t,a){const{colyseusClient:e,userId:i}=t,s=localStorage.getItem("jwt");if(!e||!i||!a||!s){console.error("createGame error: missing one of client / userId / faction / token");return}try{console.log("Checking for open games | creating a new game...");const n=await e.create("game_room",{userId:i,faction:a,token:s});t.currentRoom=n,bt(n),console.log("Created and joined room:")}catch(n){console.error("Failed to create or join room:",n)}}async function ha(t,a,e,i){const s=localStorage.getItem("jwt");if(!t||!a||!e||!s){console.error("joinGame, { client | userid | gameid | token } missing");return}let n;try{n=await t.joinOrCreate("game_room",{userId:a,roomId:e,token:s,mongoId:e}),console.log("Joined or created room:",n.roomId),i.currentRoom=n,bt(n)}catch(r){console.error("Failed to join or create room",r);return}return n}function bt(t){t.onMessage("chatMessageReceived",a=>{console.log("Received chat message:",a),Tt(a)}),t.onMessage("pong",()=>{}),t==null||t.onLeave(a=>{console.log("Left room with code:",a)})}function It(t,a,e,i,s){const n=localStorage.getItem("jwt");if(!t||!a||!e||!n){console.error("Error sending turn, missing one or more params");return}t.send("turnSent",{_id:t.roomId,currentTurn:a,newActivePlayer:e,gameOver:s,turnNumber:i,token:n}),console.log("Turn message sent")}function da(t,a){const e=localStorage.getItem("jwt");t.send("chatMessage",{_id:t.roomId,message:a,token:e}),console.log("Chat message sent")}function ua(t){const a=new Date,e=new Date(t);let i=Math.floor((a.getTime()-e.getTime())/1e3);const s={year:31536e3,month:2592e3,day:86400,hour:3600,minute:60,second:1},n=[];for(const[r,c]of Object.entries(s)){const h=Math.floor(i/c);if(h>0&&(n.push(`${h} ${r}${h!==1?"s":""}`),i-=h*c,n.length===2))break}return n.length?n.join(" and ")+" ago":"just now"}async function ma(t,a){t.currentRoom&&(console.log("Leaving game: ",t.currentRoom.roomId),await t.currentRoom.leave(),t.currentRoom=void 0,t.scene.stop("GameScene")),console.log("Accessing game: ",a._id);const e=await ha(t.colyseusClient,t.userId,a._id,t);e&&(t.currentRoom=e,t.scene.launch("GameScene",{userId:t.userId,colyseusClient:t.colyseusClient,currentGame:a,currentRoom:e}))}async function oe(t){if(!t.gameList){console.error("createGameList() no gameList in context");return}t.gameListContainer&&t.gameListContainer.destroy(!0);const a=[],e=[],i=[],s=[],n=[],r=[];t.gameList.forEach(v=>{v.status===B.SEARCHING&&i.push(v),v.status===B.PLAYING&&v.activePlayer===t.userId&&a.push(v),v.status===B.PLAYING&&v.activePlayer!==t.userId&&e.push(v),v.status===B.CHALLENGE&&(v.players[0].userData._id===t.userId&&s.push(v),v.players[1].userData._id===t.userId&&n.push(v)),v.status===B.FINISHED&&r.push(v)}),t.activeGamesAmount=a.length+e.length+i.length+n.length+s.length,a.length||n.length?document.title=`(${a.length+n.length}) Fan Academy`:document.title="Fan Academy";const c=142,h=700,d=20,u=40,m=915,p=400;let f=0;const C=19,A=65,k=t.add.container(C,A);t.gameListContainer=k;const H=v=>{v.forEach((O,re)=>{const ge=O.players.find(se=>t.userId===se.userData._id),le=O.players.find(se=>t.userId!==se.userData._id);if(!ge)return;f+=(re===0?u:c)+d;const ie=t.add.image(0,f,"gameListButton").setOrigin(0).setTint(12303291),Ve=ge.faction?{faction:ge.faction,scale:.4}:{faction:"unknownFaction",scale:1.2},wt=t.add.text(20,f+100,ua(O.lastPlayedAt),{fontFamily:"proLight",fontSize:38,color:"#ffffff"}).setOrigin(0),St=t.add.image(90,f+c/2,Ve.faction).setScale(Ve.scale);let Re,Be,Ne;const Ke=se=>t.add.text(200,f+c/2-33,be(se,13),{fontSize:50,fontFamily:"proLight"});le?(Re=t.add.image(510,f+c/2,le.faction).setScale(.4),Be=t.add.image(632,f+c/2,le.userData.picture).setFlipX(!0).setDisplaySize(256*.4,256*.4),Ne=Ke(le.userData.username)):(Re=t.add.image(510,f+c/2,"unknownFaction"),Be=t.add.image(632,f+c/2,"unknownOpponent").setFlipX(!0).setScale(.4),Ne=Ke("Searching..."));const Le=t.add.image(h-30,f,"closeButton").setOrigin(0).setVisible(!1);(O.status===B.SEARCHING||O.status===B.CHALLENGE)&&(Le.setVisible(!0).setInteractive({useHandCursor:!0}),Le.on("pointerup",async()=>{ae||(ya(t.lobbyRoom,O._id,t.userId),t.sound.play(w.GAME_DELETE),oe(t))}));const Pe=()=>{ie.clearTint(),t.activeGameImage&&t.activeGameImage.setTint(12303291),t.activeGameImage=ie,t.activeGameImageId=O._id};(O.status===B.PLAYING||O.status===B.FINISHED)&&(ie.setInteractive({useHandCursor:!0}),t.activeGameImageId===O._id&&Pe(),ie.on("pointerup",async()=>{ae||(Pe(),t.sound.play(w.BUTTON_GENERIC),await ma(t,O))})),O.status===B.CHALLENGE&&n.find(se=>se._id===O._id)&&(ie.setInteractive({useHandCursor:!0}),t.activeGameImageId===O._id&&Pe(),ie.on("pointerup",async()=>{ae||(t.sound.play(w.GAME_DELETE),Pe(),t.currentRoom&&(console.log("Leaving game: ",t.currentRoom.roomId),await t.currentRoom.leave(),t.currentRoom=void 0,t.scene.stop("GameScene")),new xe({context:t,opponentId:le.userData._id,challengeType:ne.ACCEPT,gameId:O._id}))})),k.add([ie,St,Re,Ne,Be,Le,wt])})},L=t.add.text(40,f+40,"Create a game",{fontSize:70,fontFamily:"proHeavy"}),Y=t.add.image(0,f,"newGameButton").setOrigin(0),U=t.add.image(380,f,M.COUNCIL).setOrigin(0).setScale(.5).setInteractive({useHandCursor:!0}),I=t.add.image(530,f,M.DARK_ELVES).setOrigin(0).setScale(.5).setInteractive({useHandCursor:!0}),F=()=>t.add.text(300,350,"You have reached the max amount of open games",{fontFamily:"proLight",fontSize:60,color:"#fffb00"}).setDepth(999),j=async v=>{var O;if(t.activeGamesAmount>=t.activeGamesAmountLimit){console.log("Reached game cap");const re=F();yt(re,3e3);return}t.userId?(t.sound.play(w.BUTTON_PLAY),await ca(t,v),await((O=t.currentRoom)==null?void 0:O.leave()),t.currentRoom=void 0):console.error("No userId when creating a new game")};U.on("pointerdown",async()=>await j(M.COUNCIL)),I.on("pointerdown",async()=>await j(M.DARK_ELVES)),f+=150,k.add([Y,L,U,I]);const Q=v=>t.add.text(30,f,v,{fontSize:50,fontFamily:"proLight"}),D=(v,O)=>{if(!v.length)return;const re=Q(O);k.add(re),H(v),f+=c+d};D(a,"Your turn"),D(n,"Challenges received"),D(e,"Opponent's turn"),D(s,"Challenges sent"),D(i,"Searching for players"),D(r,"Finished"),k.setScale(.51);const $=t.make.graphics();$.fillStyle(16777215),$.fillRect(19,65,p,m-15);const x=new Phaser.Display.Masks.GeometryMask(t,$);k.setMask(x);const V=v=>v.x>=19&&v.x<=19+p&&v.y>=A&&v.y<=A+m;let z=0;const we=0,X=Math.min(m-f*.51-10,0);t.input.on("wheel",(v,O,re,ge,le)=>{V(v)&&f>m&&(z-=ge,z=Phaser.Math.Clamp(z,X,we),k.y=A+z)});let te=!1,Se=0,Ce=0,ae=!1;t.input.on("pointerdown",v=>{V(v)&&f>m?(te=!0,Se=v.y,Ce=z,ae=!1):(te=!1,Se=0,Ce=0,ae=!1)}),t.input.on("pointermove",v=>{if(!te)return;const O=v.y-Se;Math.abs(O)>5&&(ae=!0),z=Phaser.Math.Clamp(Ce+O,X,0),k.y=65+z}),t.input.on("pointerup",()=>{te=!1,Se=0,Ce=0,ae=!1})}function ga(){const t=document.getElementById("disconnect-warning");t&&(t.style.display="block")}function pa(t){t.add.dom(700,400).createFromCache("disconnectWarning")}async function fa(t,a,e){let i;const s=localStorage.getItem("jwt");if(!s){console.error("Error connecting to game lobby: missing token");return}try{console.log("Connecting to game lobby..."),i=await t.joinOrCreate("lobby",{userId:a,token:s}),i.onMessage("newGameListUpdate",async n=>{var c,h;console.log("A game has been added"),e.gameList||console.error("newGameListUpdate - No context.gameList found");const r=e.gameList.findIndex(d=>d._id===n.game._id);r!==-1&&((c=e.gameList)==null||c.splice(r,1)),(h=e.gameList)==null||h.push(n.game),e.activeGamesAmount++,await oe(e)}),i.onMessage("gameListUpdate",async n=>{var h,d,u;console.log("A game has been updated");let r;const c=e.gameList.findIndex(m=>m._id===n.gameId);if(c!==-1&&(r=(h=e.gameList)==null?void 0:h.splice(c,1)[0]),!r)throw new Error("Colyseus lobby. No game found");r.previousTurn=n.previousTurn,r.activePlayer=n.newActivePlayer,r.turnNumber=n.turnNumber,r.lastPlayedAt=n.lastPlayedAt,(d=e.gameList)==null||d.push(r),await oe(e),n.gameId===((u=e.currentRoom)==null?void 0:u.roomId)&&e.scene.get("GameScene").scene.restart({userId:e.userId,colyseusClient:e.colyseusClient,currentGame:r,currentRoom:e.currentRoom,triggerReplay:n.newActivePlayer===e.userId})}),i.onMessage("gameOverUpdate",async n=>{var u;console.log("A game has ended, updating game list");const r=e.gameList;r||console.error("gameOverUpdate - No context.gameList found");const c=r==null?void 0:r.filter(m=>m.status!==B.FINISHED),h=r==null?void 0:r.filter(m=>m.status===B.FINISHED);h==null||h.sort((m,p)=>new Date(p.finishedAt).getTime()-new Date(m.finishedAt).getTime()),console.log("finished games",h),h&&h.length>4&&h.pop();const d=c==null?void 0:c.find(m=>m._id===n.gameId);if(!d)throw new Error("Colyseus lobby. No game found");d.previousTurn=n.previousTurn,d.turnNumber=n.turnNumber,d.status=B.FINISHED,d.lastPlayedAt=n.lastPlayedAt,d.gameOver=n.gameOver,e.gameList=[...c??[],...h??[]],e.activeGamesAmount--,await oe(e),n.gameId===((u=e.currentRoom)==null?void 0:u.roomId)&&e.scene.get("GameScene").scene.restart({userId:e.userId,colyseusClient:e.colyseusClient,currentGame:d,currentRoom:e.currentRoom})}),i.onMessage("gameDeletedUpdate",async n=>{var c;console.log("A game has been deleted, removing it from the game list"),e.gameList||console.error("gameDeletedUpdate - No context.gameList found");const r=e.gameList.findIndex(h=>h._id===n.gameId);r!==-1&&((c=e.gameList)==null||c.splice(r,1)),await oe(e),console.log("Game removed from list")}),i.onMessage("userDeletedUpdate",async n=>{console.log("A user has been deleted, removing affected games from the game list"),e.gameList||console.error("userDeletedUpdate - No context.gameList found"),n.gameIds.forEach(r=>{var h,d;const c=e.gameList.findIndex(u=>u._id===r);if(c!==-1){const u=(h=e.gameList)==null?void 0:h.splice(c,1);u!=null&&u.length&&((d=e.currentRoom)==null?void 0:d.roomId)===u[0]._id&&e.scene.get("GameScene").scene.stop()}}),e.activeGamesAmount--,await oe(e),console.log("Games removed from list")}),i.onMessage("pong",()=>{}),i.onLeave(n=>{console.log("Left room with code:",n),ga()})}catch(n){console.error("Error joining lobby ->",n)}if(!i)throw new Error("connectToGameLobby() No lobby found");return i}function ya(t,a,e){const i=localStorage.getItem("jwt");t.send("gameDeletedMessage",{gameId:a,userId:e,token:i})}function Ta(t,a,e,i){const s=localStorage.getItem("jwt");t.send("challengeAcceptedMessage",{gameId:a,userId:e,faction:i,token:s})}const l="https://cdn.jsdelivr.net/gh/nochinator/sa-assets@990b21d";class ba extends Phaser.Scene{constructor(){super({key:"PreloaderScene"})}preload(){this.load.image("loadingScreen",`${l}/ui/loading.webp`),this.load.once("filecomplete-image-loadingScreen",()=>{this.add.image(0,0,"loadingScreen").setOrigin(0).setScale(2.8),this.loadRestOfAssets()})}loadRestOfAssets(){this.load.font("proHeavy","/scribble-academy/fonts/BlambotFXProHeavyLowerCapsBB.woff","truetype"),this.load.font("proLight","/scribble-academy/fonts/BlambotFXProLightBB.woff","truetype"),this.load.image("popupBackground",`${l}/images/gameItems/popup_button.webp`),this.load.image("popupButton",`${l}/images/gameItems/ColorSwatch_Color-hd.webp`),this.load.image("gameBackground",`${l}/ui/create_game.webp`)}create(){this.scene.start("MainMenuScene")}}const Oe=["archer_v1-hd","archer_v2-hd","archer_v3-hd","archer_v4-hd","cleric_v0-hd","cleric_v1-hd","cleric_v2-hd","cleric_v3-hd","cleric_v4-hd","impaler_v1-hd","impaler_v2-hd","impaler_v3-hd","impaler_v4-hd","knight_v0-hd","knight_v1-hd","knight_v2-hd","knight_v3-hd","knight_v4-hd","ninja_v1-hd","ninja_v2-hd","phantom_v1-hd","phantom_v2-hd","phantom_v3-hd","priestess_v0-hd","priestess_v1-hd","priestess_v2-hd","priestess_v3-hd","priestess_v4-hd","unknownAvatar-hd","wizard_v1-hd","wizard_v2-hd","wizard_v3-hd","wizard_v4-hd","wraith_v1-hd","wraith_v2-hd","voidmonk_v1-hd","voidmonk_v2-hd","voidmonk_v3-hd","voidmonk_v4-hd","necromancer_v0-hd","necromancer_v1-hd","necromancer_v2-hd","necromancer_v3-hd","necromancer_v4-hd","soulHarvestIcon","soulStoneIcon","shiningHelmIcon","superChargeIcon","runeMetalIcon","crystalIcon","manaVialIcon","infernoIcon","healingPotionIcon","dragonScaleIcon"];class At extends Phaser.Scene{constructor(){super({key:"UIScene"});o(this,"colyseusClient");o(this,"lobbyRoom");o(this,"userId");o(this,"gameListContainer");o(this,"gameList");o(this,"currentRoom");o(this,"gameScene");o(this,"activeGameImage");o(this,"activeGameImageId");o(this,"activeGamesAmountLimit",50);o(this,"activeGamesAmount",0);this.colyseusClient=new Et.Client("https://scribble-academy-be.onrender.com")}init(e){this.userId=e.userId}preload(){this.load.image(M.COUNCIL,`${l}/ui/council_emblem.webp`),this.load.image(M.DARK_ELVES,`${l}/ui/elves_emblem.webp`),Oe.forEach(e=>{this.load.image(e,`${l}/images/profilePics/${e}.webp`)}),this.load.image("gameListButton",`${l}/ui/game_list_premade.webp`),this.load.image("newGameButton",`${l}/ui/new_game_btn.webp`),this.load.image("unknownFaction",`${l}/ui/unknown_faction.webp`),this.load.image("unknownOpponent",`${l}/images/profilePics/unknownAvatar-hd.webp`),this.load.image("closeButton",`${l}/ui/close_button.webp`),this.load.image("concedeButton",`${l}/ui/concede_button.webp`),this.load.html("disconnectWarning","html/disconnectWarning.html"),this.load.audio("deleteGameSound",`${l}/audio/ui/deleteGame.mp3`)}async create(){this.time.addEvent({delay:3e5,callback:()=>{this.lobbyRoom.send("ping")},loop:!0}),pa(this),this.add.image(0,0,"loadingScreen").setOrigin(0).setScale(2.8),this.lobbyRoom=await fa(this.colyseusClient,this.userId,this),this.gameList=await Ht(this.userId),this.add.image(0,0,"uiBackground").setOrigin(0),await oe(this),new Ot(this),this.add.image(397,15,"gameBackground").setOrigin(0,0).setScale(1.06,1.2)}onShutdown(){this.sound.stopAll()}}async function Ia(t,a){try{const e=localStorage.getItem("jwt"),i=await fetch("https://scribble-academy-be.onrender.com/users/login",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({username:t,password:a})}),s=await i.json();return i.ok?(console.log("Successful login! :)"),localStorage.setItem("jwt",s.token),{success:!0,userData:s.userData}):(console.error("Server responded with an error:",s.message||"Unknown error"),{success:!1,error:s.message||"Unknown error"})}catch(e){return console.error("Error login in: ",e),{success:!1,error:"Network error. Please try again."}}}async function Aa(t,a,e){try{const i=localStorage.getItem("jwt"),s=await fetch("https://scribble-academy-be.onrender.com/users/signup",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${i}`},body:JSON.stringify({email:t,username:a,password:e})}),n=await s.json();return s.ok?(console.log("Successful sign up! :)"),localStorage.setItem("jwt",n.token),{success:!0,userData:n.userData}):(console.log("Server responded with an error:",n.message||"Unknown error"),{success:!1,error:n.message||"Unknown error"})}catch(i){return console.error("Network error signing up:",i),{success:!1,error:"Network error. Please try again."}}}async function wa(){console.log("Checking Authentication Status...");const t=localStorage.getItem("jwt"),a=await fetch("https://scribble-academy-be.onrender.com/auth-check",{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}});if(a.status!=200){console.error("User not authenticated...");return}const e=await a.json();return console.log("User authenticated...",e.userId),e}async function fe(t=1){console.log("Fetching leaderboard data...");const a=localStorage.getItem("jwt"),e=await fetch(`https://scribble-academy-be.onrender.com/users/leaderboard?page=${encodeURIComponent(t)}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}),i=await e.json();return e.status!==200?(console.error("Error getting leaderboard data..."),null):(console.log("Leaderboard data fetched"),i)}async function Sa(){console.log("Fetching profile data...");const t=localStorage.getItem("jwt"),a=await fetch("https://scribble-academy-be.onrender.com/users/profile",{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}}),e=await a.json();return a.status!==200?(console.error("Error getting profile data..."),null):(console.log("Profile data fetched"),e)}async function Ca(t){try{const a=localStorage.getItem("jwt"),e=await fetch("https://scribble-academy-be.onrender.com/users/update",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify(t)}),i=await e.json();return e.ok?(console.log("Profile updated! :)"),{success:!0,user:i}):(console.log("Server responded with an error:",i.message||"Unknown error"),{success:!1,error:i.message||"Unknown error"})}catch(a){return console.error("Network error updating profile:",a),{success:!1,error:"Network error. Please try again."}}}async function Pa(){try{const t=localStorage.getItem("jwt"),a=await fetch("https://scribble-academy-be.onrender.com/users/delete",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}}),e=await a.json();return a.ok?(console.log("Profile deleted :("),localStorage.removeItem("jwt"),e):(console.log("Server responded with an error:",e.message||"Unknown error"),{success:!1,error:e.message||"Unknown error"})}catch(t){return console.error("Network error while deleting account:",t),{success:!1,error:"Network error. Please try again."}}}function ce(t){const{thisParam:a,x:e,y:i,imageKey:s,text:n,font:r,tint:c,callback:h}=t,d=a.add.image(0,0,s).setOrigin(.5).setInteractive({useHandCursor:!0}),u=a.add.text(.5,.5,n,{font:r}).setOrigin(.5,.6);c&&d.setTint(10027008);const m=a.add.container(e,i,[d,u]);return d.on("pointerdown",()=>{h()}),m}class va extends Phaser.Scene{constructor(){super({key:"MainMenuScene"});o(this,"userId");o(this,"gameList");o(this,"userPreferences");o(this,"currentSubScene")}init(){}preload(){this.load.html("loginForm","html/loginForm.html"),this.load.html("signUpForm","html/signUpForm.html"),this.load.image("uiBackground",`${l}/ui/game_screen.webp`),this.load.image("mainMenuImage",`${l}/ui/main_menu_image.webp`),this.load.image("mainMenuBottom",`${l}/ui/main_menu_bottom.webp`),this.load.image("playButton",`${l}/ui/play_button.webp`),this.load.image("mainMenuButton",`${l}/ui/main_menu_button.webp`),this.load.font("proHeavy","/scribble-academy/fonts/BlambotFXProHeavyLowerCapsBB.woff","truetype"),this.load.font("proLight","/scribble-academy/fonts/BlambotFXProLightBB.woff","truetype"),this.load.audio("buttonFailedSound",`${l}/audio/ui/buttonFailed.mp3`),this.load.audio("battleButtonSound",`${l}/audio/ui/battleButton.mp3`),this.load.audio("buttonPressGenericSound",`${l}/audio/ui/buttonPressGeneric.mp3`)}async create(){const e=await wa();e&&this.updateUserPreferences(e);const i=this.add.image(0,0,"uiBackground").setOrigin(0),s=this.add.image(0,0,"mainMenuImage").setOrigin(0),n=this.add.image(397,15,"gameBackground").setOrigin(0,0).setScale(1.06,1.2).setVisible(!1);s.x=i.width-s.width-14,s.y+=14;const r=this.add.image(0,0,"mainMenuBottom").setOrigin(0),c=this.add.text(.5,.5,"Welcome to the Hero Academy!",{font:"50px proLight",color:"#873600"}).setOrigin(-.4,-1.3);this.add.container(i.width-r.width-14,i.height-r.height-14,[r,c]),this.add.text(30,730,"This game is in beta state: Expect bugs and crashes. If you run into any issues, please let dadazbk know on Discord. Thanks!",{fontFamily:"proLight",fontSize:35,color:"#ffffff",wordWrap:{width:350,useAdvancedWrap:!0}});const h=this.textures.get("mainMenuButton").getSourceImage().height,d=200,u=20;ce({thisParam:this,x:d,y:h*4+u,imageKey:"mainMenuButton",text:"Profile",font:"70px proHeavy",callback:()=>{this.sound.play(w.BUTTON_GENERIC),n.setVisible(!0),s.setVisible(!1),this.currentSubScene&&this.scene.stop(this.currentSubScene),this.scene.launch("ProfileScene",{userId:this.userId}),this.currentSubScene="ProfileScene"}}),ce({thisParam:this,x:d,y:h*6-u,imageKey:"mainMenuButton",text:"Leaderboard",font:"70px proHeavy",callback:()=>{this.sound.play(w.BUTTON_GENERIC),this.currentSubScene&&this.scene.stop(this.currentSubScene),this.scene.launch("LeaderboardScene",{userId:this.userId}),this.currentSubScene="LeaderboardScene"}}),ce({thisParam:this,x:d,y:h*7+5,imageKey:"mainMenuButton",text:"About",font:"70px proHeavy",callback:()=>{this.sound.play(w.BUTTON_GENERIC),this.currentSubScene&&this.scene.stop(this.currentSubScene),this.scene.launch("AboutScene"),this.currentSubScene="AboutScene"}}),ce({thisParam:this,x:d,y:h*8.5,imageKey:"mainMenuButton",text:"Discord",font:"70px proHeavy",callback:()=>{this.sound.play(w.BUTTON_GENERIC),window.open("https://discord.gg/pkfwDvKyxX")}}),ce({thisParam:this,x:200,y:140,imageKey:"playButton",text:"Play!",font:"130px proHeavy",callback:()=>{this.sound.play(w.BUTTON_PLAY),this.currentSubScene&&this.scene.stop(this.currentSubScene),this.scene.start("UIScene",{userId:this.userId}),this.currentSubScene="UIScene"}}),ce({thisParam:this,x:d,y:h*14+40,imageKey:"mainMenuButton",text:"Logout",font:"70px proHeavy",tint:"0x990000",callback:async()=>{this.sound.play(w.BUTTON_GENERIC),localStorage.removeItem("jwt"),this.userId=void 0,document.title="Fan Academy",this.currentSubScene&&this.scene.stop(this.currentSubScene),this.scene.restart()}}),this.createSignUpAndLoginForms(this.userId)}onShutdown(){this.sound.stopAll()}createSignUpAndLoginForms(e){const i=this.add.dom(800,400).createFromCache("loginForm"),s=this.add.dom(800,400).createFromCache("signUpForm");s.setVisible(!1);const n=this.add.rectangle(0,0,2900,2e3,0,.001).setOrigin(.5).setInteractive(),r=i.getChildByID("username"),c=i.getChildByID("password"),h=i.getChildByID("loginButton"),d=i.getChildByID("linkToSignUp"),u=i.getChildByID("loginError"),m=s.getChildByID("email"),p=s.getChildByID("username"),f=s.getChildByID("password"),C=s.getChildByID("passwordConfirm"),A=s.getChildByID("signUpButton"),k=s.getChildByID("linkToLogin"),H=s.getChildByID("signUpError"),L=(I,F)=>{I.innerText=F,I.style.display="block"},Y=I=>{I.innerText="",I.style.display="none"};h.addEventListener("click",async()=>{if(r.value&&c.value){const I=await Ia(r.value,c.value);I.success?(I.userData&&this.updateUserPreferences(I.userData),i.setVisible(!1),n.setVisible(!1),this.sound.play(w.BUTTON_GENERIC),console.log("UserId after login:",this.userId)):(this.sound.play(w.BUTTON_FAILED),L(u,I.error))}else this.sound.play(w.BUTTON_FAILED),L(u,"Incorrect username or password.")}),A.addEventListener("click",async()=>{if(Y(H),f.value!==C.value){this.sound.play(w.BUTTON_FAILED),L(H,"Passwords do not match");return}if(!ot(f.value)){this.sound.play(w.BUTTON_FAILED),L(H,"Password must be at least 8 characters long and contain a letter and a number");return}if(p.value.length>20){this.sound.play(w.BUTTON_FAILED),L(H,"Username must be 20 characters or shorter");return}if(m.value&&p.value&&f.value){const I=await Aa(m.value,p.value,f.value);I.success?(I.userData&&this.updateUserPreferences(I.userData),s.setVisible(!1),n.setVisible(!1),this.sound.play(w.BUTTON_GENERIC),console.log("UserId after sign up:",this.userId)):(this.sound.play(w.BUTTON_FAILED),L(H,I.error))}});const U=(I,F)=>{I.addEventListener("keydown",j=>{j.key==="Enter"&&F.click()})};return[r,c].forEach(I=>U(I,h)),[m,p,f,C].forEach(I=>U(I,A)),d.addEventListener("click",()=>{i.setVisible(!1),s.setVisible(!0)}),k.addEventListener("click",()=>{s.setVisible(!1),i.setVisible(!0)}),e&&(i.setVisible(!1),s.setVisible(!1),n.setVisible(!1)),{loginForm:i,signUpForm:s}}updateUserPreferences(e){this.userId=e.userId,this.registry.set("userPreferences",{chat:e.preferences.chat,sound:e.preferences.sound}),this.sound.mute=!e.preferences.sound}}function _a(t){const a=t.add.image(460,70,"replayButton").setScale(1.3).setInteractive({useHandCursor:!0}).setVisible(!t.triggerReplay);return a.on("pointerdown",()=>{t.sound.play(w.BUTTON_GENERIC),t.scene.restart({userId:t.userId,colyseusClient:t.colyseusClient,currentGame:t.currentGame,currentRoom:t.currentRoom,triggerReplay:!0})}),a}const Je={x:550,y:730};class ka extends Phaser.GameObjects.Container{constructor(e){super(e,Je.x,Je.y);o(this,"actionCircle");o(this,"actionPie1");o(this,"actionPie2");o(this,"actionPie3");o(this,"actionPie4");o(this,"actionPie5");o(this,"actionArrow");o(this,"context");this.context=e,this.actionCircle=e.add.image(0,0,"actionCircle").setOrigin(.5).setName("actionCircle"),this.actionPie1=e.add.image(12,-19,"actionPie").setOrigin(.5).setRotation(-.3).setName("actionPie1"),this.actionPie2=e.add.image(24,6,"actionPie").setOrigin(.5).setRotation(.9).setName("actionPie2"),this.actionPie3=e.add.image(4,25,"actionPie").setOrigin(.5).setRotation(2.2).setName("actionPie3"),this.actionPie4=e.add.image(-18,13,"actionPie").setOrigin(.5).setRotation(3.4).setName("actionPie4"),this.actionPie5=e.add.image(-15,-15,"actionPie").setOrigin(.5).setRotation(4.7).setName("actionPie5"),this.actionArrow=e.add.image(-35,0,"actionArrow").setOrigin(.5).setRotation(-.1).setName("actionArrow").setVisible(!1),e.turnNumber===0&&e.activePlayer===e.userId&&(this.actionPie1.setVisible(!1),this.actionPie2.setVisible(!1)),this.add([this.actionCircle,this.actionPie1,this.actionPie2,this.actionPie3,this.actionPie4,this.actionPie5,this.actionArrow]),this.setSize(90,90).setInteractive({useHandCursor:!0}),this.on("pointerdown",i=>{this.context.longPressStart=this.context.time.now,i.button===2?this.context.gameController.resetTurn():i.button===0&&this.context.gameController.undoLastAction()}),this.on("pointerup",()=>{this.context.longPressStart&&this.context.time.now-this.context.longPressStart>500&&this.context.gameController.resetTurn()}),e.add.existing(this)}resetActionPie(){this.context.turnNumber!==0&&(this.actionPie1.setVisible(!0),this.popAnimation(this.actionPie1,!0),this.actionPie2.setVisible(!0),this.popAnimation(this.actionPie2,!0)),this.actionPie3.setVisible(!0),this.popAnimation(this.actionPie3,!0),this.actionPie4.setVisible(!0),this.popAnimation(this.actionPie4,!0),this.actionPie5.setVisible(!0),this.popAnimation(this.actionPie5,!0),this.actionArrow.setVisible(!1)}popAnimation(e,i=!1){if(!e)return;e.setVisible(i);const s=this.getIndex(e);this.bringToTop(e),this.context.tweens.add({targets:e,scale:1.5,duration:100,yoyo:!0,ease:"Quad.easeInOut",onComplete:()=>{this.moveTo(e,s)}})}hideActionSlice(e){switch(e){case 1:this.popAnimation(this.actionPie1),this.actionArrow.setVisible(!0);break;case 2:this.popAnimation(this.actionPie2);break;case 3:this.popAnimation(this.actionPie3);break;case 4:this.popAnimation(this.actionPie4),this.actionArrow.setVisible(!0);break;case 5:this.popAnimation(this.actionPie5);break}}showActionSlice(e){switch(e){case 1:this.popAnimation(this.actionPie1,!0),this.actionArrow.setVisible(!1);break;case 2:this.popAnimation(this.actionPie2,!0);break;case 3:this.popAnimation(this.actionPie3,!0);break;case 4:this.popAnimation(this.actionPie4,!0);break;case 5:this.popAnimation(this.actionPie5,!0);break}}}class Ea extends Phaser.GameObjects.Container{constructor(e,i){super(e,0,0);o(this,"cardBackgroundImage");o(this,"unitPictureImage");o(this,"cardSeparatorImage");o(this,"hpBackgroundImage");o(this,"hpBarImage");o(this,"magicalResistanceImage");o(this,"physicalResistanceImage");o(this,"hpIconImage");o(this,"context");o(this,"currentHpText");o(this,"magicalResistanceText");o(this,"physicalResistanceText");o(this,"cardFlavorText");o(this,"cardTypeText");o(this,"cardNameText");this.context=e,this.cardBackgroundImage=e.add.image(10,10,"cardBackground"),this.unitPictureImage=e.add.image(-130,-140,"crystalCardPic").setOrigin(.5).setScale(.4),this.cardSeparatorImage=e.add.image(50,-100,"cardSeparator").setOrigin(.5).setScale(1.3),this.cardNameText=this.context.add.text(55,-170,"Crystal",{fontFamily:"proLight",fontSize:50,color:"#ffffff"}).setOrigin(.5),this.cardTypeText=this.context.add.text(55,-130,"Victory Unit",{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.hpBackgroundImage=e.add.image(-60,-60,"hpBackground").setOrigin(.5),this.hpBarImage=e.add.image(-118,-72,"hpBar").setOrigin(0),this.setHealthBar(i.currentHealth,i.maxHealth),this.currentHpText=this.context.add.text(100,-60,`${i.currentHealth}/${i.maxHealth}`,{fontFamily:"proLight",fontSize:35,color:"#ffffff"}).setOrigin(.5),this.hpIconImage=e.add.image(-150,-60,"hpIcon").setOrigin(.5),this.magicalResistanceImage=e.add.image(40,-10,"magicalResistance").setOrigin(.5),this.magicalResistanceText=this.context.add.text(100,-10,"0%",{fontFamily:"proLight",fontSize:35,color:"#ffffff"}).setOrigin(.5),this.physicalResistanceImage=e.add.image(-150,-10,"physicalResistance").setOrigin(.5),this.physicalResistanceText=this.context.add.text(-85,-10,"0%",{fontFamily:"proLight",fontSize:35,color:"#ffffff"}).setOrigin(.5),this.cardFlavorText=this.context.add.text(0,50,"Destroy all crystals to win the game!",{fontFamily:"proLight",fontSize:30,color:"#ffffff",wordWrap:{width:this.cardBackgroundImage.width-50,useAdvancedWrap:!0}}).setOrigin(.5),this.add([this.cardBackgroundImage,this.unitPictureImage,this.cardSeparatorImage,this.hpBackgroundImage,this.hpBarImage,this.magicalResistanceImage,this.physicalResistanceImage,this.hpIconImage,this.currentHpText,this.cardFlavorText,this.cardTypeText,this.cardNameText,this.physicalResistanceText,this.magicalResistanceText])}updateCardHealth(e,i){this.currentHpText.setText(`${e}/${i}`),this.setHealthBar(e,i)}setHealthBar(e,i){const s=this.hpBackgroundImage.width-10,n=e/i;this.hpBarImage.displayWidth=s*n}}class Me extends Phaser.GameObjects.Container{constructor(e,i,s){const{x:n,y:r}=e.centerPoints[i.boardPosition];super(e,n,r);o(this,"belongsTo");o(this,"maxHealth");o(this,"currentHealth");o(this,"isDestroyed");o(this,"isLastCrystal");o(this,"boardPosition");o(this,"row");o(this,"col");o(this,"debuffLevel");o(this,"context");o(this,"pedestalImage");o(this,"crystalImage");o(this,"singleCrystalDebuff");o(this,"doubleCrystalDebuff");o(this,"attackReticle");o(this,"blockedLOS");o(this,"debuffEventSingle");o(this,"debuffEventDouble");o(this,"healthBar");o(this,"unitCard");this.context=e,this.maxHealth=i.maxHealth,this.currentHealth=i.currentHealth,this.isDestroyed=i.isDestroyed,this.isLastCrystal=s.tileType===S.CRYSTAL_BIG?!0:i.isLastCrystal,this.boardPosition=i.boardPosition,this.row=s.row,this.col=s.col,this.belongsTo=i.belongsTo,this.debuffLevel=i.debuffLevel<0?0:i.debuffLevel,this.healthBar=new rt(e,i,-38,-70),this.unitCard=new Ea(e,i).setVisible(!1);const c=this.maxHealth===9e3;this.pedestalImage=e.add.image(0,10,"pedestal").setScale(.8);const h=i.currentHealth<=i.maxHealth/2?"crystalDamaged":"crystalFull";this.crystalImage=e.add.image(0,-30,h).setScale(c?1:.8),this.blockedLOS=e.add.image(0,-10,"blockedLOS").setOrigin(.5).setName("blockedLOS").setVisible(!1);const d=this.belongsTo===1?3381759:10027008;this.crystalImage.setTint(d),this.singleCrystalDebuff=e.add.image(0,-30,"crystalDebuff_1").setVisible(!1),this.doubleCrystalDebuff=e.add.image(0,-30,"crystalDebuff_3").setVisible(!1);const u=(p,f,C)=>{let A=0;return this.scene.time.addEvent({delay:100,loop:!0,callback:()=>{A=1-A,p.setTexture(A===0?f:C)}})};this.debuffEventSingle=u(this.singleCrystalDebuff,"crystalDebuff_1","crystalDebuff_2"),this.debuffEventDouble=u(this.doubleCrystalDebuff,"crystalDebuff_3","crystalDebuff_4"),this.attackReticle=e.add.image(0,-10,"attackReticle").setOrigin(.5).setScale(.8).setName("attackReticle").setVisible(!1),(p=>{e.tweens.add({targets:p,angle:360,duration:7e3,repeat:-1,ease:"Linear",onRepeat:()=>{p.angle=0}})})(this.attackReticle),this.add([this.pedestalImage,this.crystalImage,this.singleCrystalDebuff,this.doubleCrystalDebuff,this.healthBar,this.attackReticle,this.blockedLOS,this.unitCard]).setSize(90,95).setInteractive({useHandCursor:!0}).setDepth(this.boardPosition+10),Nt(this,this.context),e.add.existing(this)}updateDebuffAnimation(e){switch(e){case 0:this.singleCrystalDebuff.setVisible(!1),this.doubleCrystalDebuff.setVisible(!1);break;case 1:this.singleCrystalDebuff.setVisible(!0),this.doubleCrystalDebuff.setVisible(!1);break;case 2:this.singleCrystalDebuff.setVisible(!1),this.doubleCrystalDebuff.setVisible(!0);break;default:console.error("updateDebuffAnimation() level and case dont match",e);break}e!==this.debuffLevel&&(this.debuffLevel=e,this.updateTileData())}getTile(){var i,s;const e=(s=(i=this.context)==null?void 0:i.gameController)==null?void 0:s.board.getTileFromBoardPosition(this.boardPosition);if(!e)throw new Error("getTile() -> No tile found");return e}updateTileData(){const e=this.getTile();this.debuffLevel<0&&(this.debuffLevel=0,this.updateDebuffAnimation(this.debuffLevel)),e.crystal={belongsTo:this.belongsTo,maxHealth:this.maxHealth,currentHealth:this.currentHealth,isDestroyed:this.isDestroyed,isLastCrystal:this.isLastCrystal,boardPosition:this.boardPosition,row:this.row,col:this.col,debuffLevel:this.debuffLevel}}getsDamaged(e,i,s,n=1){var d,u;this.debuffLevel>0?this.scene.time.delayedCall(s,T,[this.scene,g.CRYSTAL_DAMAGE_BUFF]):this.scene.time.delayedCall(s,T,[this.scene,g.CRYSTAL_DAMAGE]);const r=300*n*this.debuffLevel,c=me(e+r),h=c>this.currentHealth?this.currentHealth:c;this.currentHealth-=h,this.currentHealth<=this.maxHealth/2&&this.crystalImage.setTexture("crystalDamaged"),this.healthBar.setHealth(this.maxHealth,this.currentHealth),h>0&&new pe(this.context,this.x,this.y-50,h.toString()),this.unitCard.updateCardHealth(this.currentHealth,this.maxHealth),this.updateTileData(),this.belongsTo===1&&((d=this.context.gameController)==null||d.gameUI.banner.playerOneHpBar.setHealth()),this.belongsTo===2&&((u=this.context.gameController)==null||u.gameUI.banner.playerTwoHpBar.setHealth()),this.currentHealth<=0&&this.removeFromGame()}removeFromGame(e=!0){const i=this.getTile();i.crystal=void 0,i.obstacle=!1,i.tileType=S.BASIC;const s=this.context.gameController.board.crystals,n=s.findIndex(r=>r.boardPosition===this.boardPosition);if(s.splice(n,1),this.scene.tweens.killTweensOf(this),this.list.forEach(r=>{this.scene.tweens.killTweensOf(r)}),this.debuffEventSingle.remove(!1),this.debuffEventDouble.remove(!1),e)if(T(this.scene,g.CRYSTAL_DESTROY),this.isLastCrystal)this.context.gameController.gameOver={winCondition:He.CRYSTAL,winner:this.context.activePlayer};else{const r=s.find(c=>c.belongsTo===this.belongsTo);if(!r)throw new Error("Crystal getsDestroyed() No other crystal found");r.isLastCrystal=!0,r.updateTileData()}this.destroy(!0)}}class Oa extends Phaser.GameObjects.Container{constructor(e,i){super(e,0,0);o(this,"cardBackgroundImage");o(this,"unitPictureImage");o(this,"cardSeparatorImage");o(this,"cardNameText");o(this,"cardTypeText");o(this,"cardFlavorText");o(this,"context");this.context=e;let s="",n="",r="";switch(i){case S.SPAWN:s="spawnTile",n="Spawn Tile",r="Units can be spawned here.";break;case S.POWER:s="powerTile",n="Power Boost",r="Adds 100 damage to the unit on this tile.";break;case S.PHYSICAL_RESISTANCE:s="shieldTile",n="Defense Boost",r="Grants 20% physical resistance to the unit on this tile.";break;case S.MAGICAL_RESISTANCE:s="helmetTile",n="Resist Boost",r="Grants 20% magical resistance to the unit on this tile.";break;case S.CRYSTAL_DAMAGE:s="crystalDamageTile",n="Assault Boost",r="Adds 300 damage to all hits to crystals by any unit in the board.";break;case S.TELEPORTER:s="teleporterTile",n="Teleporter",r="Units on this tile can teleport to any other unoccupied teleporter.";break;case S.SPEED:s="speedTile",n="Speed Boost",r="Grants 2 extra movement to the unit on this tile.";break;default:s="specialTile",n="Special Tile",r="A unique tile with special properties.";break}this.cardBackgroundImage=e.add.image(10,10,"cardBackground"),this.unitPictureImage=e.add.image(-130,-140,s).setOrigin(.5).setScale(1.2),this.cardSeparatorImage=e.add.image(50,-100,"cardSeparator").setOrigin(.5).setScale(1.3),this.cardNameText=this.context.add.text(55,-170,n,{fontFamily:"proLight",fontSize:50,color:"#ffffff"}).setOrigin(.5),this.cardTypeText=this.context.add.text(55,-130,R.SPECIAL_TILE,{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.cardFlavorText=this.context.add.text(0,-55,r,{fontFamily:"proLight",fontSize:30,color:"#ffffff",wordWrap:{width:this.cardBackgroundImage.width-50,useAdvancedWrap:!0}}).setOrigin(.5),this.add([this.cardBackgroundImage,this.unitPictureImage,this.cardSeparatorImage,this.cardNameText,this.cardTypeText,this.cardFlavorText])}}class Ha extends Phaser.GameObjects.Container{constructor(e,i){super(e,i.x,i.y);o(this,"baseRectangle");o(this,"row");o(this,"col");o(this,"x");o(this,"y");o(this,"boardPosition");o(this,"obstacle");o(this,"hero");o(this,"crystal");o(this,"tileSize",90);o(this,"tileType");o(this,"isHighlighted");o(this,"unitCard");o(this,"icon");this.row=i.row,this.col=i.col,this.x=i.x,this.y=i.y,this.tileType=i.tileType,this.obstacle=i.obstacle,this.hero=i.hero,this.crystal=i.crystal,this.boardPosition=i.boardPosition,this.baseRectangle=e.add.rectangle(0,0,this.tileSize,this.tileSize),this.add(this.baseRectangle),this.isHighlighted=this.baseRectangle.isFilled,this.unitCard=new Oa(e,this.tileType).setVisible(!1),[S.BASIC,S.CRYSTAL,S.CRYSTAL_SMALL,S.CRYSTAL_BIG].includes(this.tileType)||(this.icon=e.add.image(0,0,this.tileType),this.col>4&&this.icon.setFlipX(!0),this.add(this.icon)),this.setSize(90,90).setInteractive({useHandCursor:!0}).setDepth(2),Bt(this,e),this.add(this.unitCard),e.add.existing(this)}getTileData(){return{row:this.row,col:this.col,x:this.x,y:this.y,tileType:this.tileType,boardPosition:this.boardPosition,obstacle:this.obstacle,hero:this.hero,crystal:this.crystal}}removeHero(){this.hero=void 0}removeCrystal(){this.crystal=void 0}setCrystal(e){this.crystal=e}isFriendly(e){return this.hero&&this.hero.unitId.includes(e)}isEnemy(e){return this.hero&&!this.hero.unitId.includes(e)}setHighlight(){this.baseRectangle.setFillStyle(33023,.3),this.isHighlighted=this.baseRectangle.isFilled}clearHighlight(){this.baseRectangle.setFillStyle(),this.isHighlighted=this.baseRectangle.isFilled}}class Da{constructor(a,e){o(this,"topLeft",{x:545,y:225});o(this,"tileSize",90);o(this,"context");o(this,"tiles");o(this,"units",[]);o(this,"crystals",[]);this.context=a,this.tiles=this.createTileGrid(e),this.crystals.forEach(i=>i.updateDebuffAnimation(i.debuffLevel))}createTileGrid(a){const e=[];return a.forEach(i=>{const s=new Ha(this.context,i);s.hero&&this.units.push(Te(this.context,s.hero,s)),s.crystal&&this.crystals.push(new Me(this.context,s.crystal,i)),e.push(s)}),e}getTileFromCoordinates(a,e){const i=this.tiles.find(s=>s.row===a&&s.col===e);if(!i)throw new Error("Board getTile() No tile found");return i}getTileFromBoardPosition(a){const e=this.tiles.find(i=>i.boardPosition===a);if(!e)throw new Error("Board getTile() No tile found");return e}getBoardState(){return this.tiles.map(a=>a.getTileData())}setBoardState(a){const e=[];this.units.forEach(s=>{e.push(s)}),this.crystals.forEach(s=>{e.push(s)}),e.forEach(s=>s.removeFromGame(!1)),this.units=[],this.crystals=[];const i=[];a.forEach(s=>{const n=this.getTileFromBoardPosition(s.boardPosition);if(n){if(n.removeHero(),n.removeCrystal(),s.crystal){const r=new Me(this.context,s.crystal,n);r.updateDebuffAnimation(0),this.crystals.push(r),n.setCrystal(r)}s.hero&&i.push(()=>{const r=Te(this.context,s.hero);r.specialTileCheck(n.tileType,void 0,!1),r.updatePosition(n),this.units.push(r),n.hero=r.exportData()})}}),i.forEach(s=>s())}clearHighlights(){this.tiles.forEach(a=>a.clearHighlight())}highlightSpawns(a){const e=new Set;this.tiles.forEach(i=>{var n,r,c;const s=N(this.context,i);i.tileType===S.SPAWN&&!s&&(i.hero||e.add(i),(n=i.hero)!=null&&n.isKO&&e.add(i),((r=i.hero)==null?void 0:r.unitType)===y.PHANTOM&&e.add(i)),a===y.WRAITH&&((c=i.hero)!=null&&c.isKO)&&!N(this.context,i)&&e.add(i)}),this.highlightTiles([...e])}highlightEnemyTargets(a){const e=this.getHeroTilesInRange(a,K.ATTACK);if(!e.length)return;const i=[];e.forEach(r=>{const c=r.hero?this.units.find(h=>h.unitId===r.hero.unitId):r.crystal?this.crystals.find(h=>{var d;return h.boardPosition===((d=r.crystal)==null?void 0:d.boardPosition)}):void 0;if(!c){console.error("No target found",r.hero);return}(c instanceof Me&&c.belongsTo!==a.belongsTo||c instanceof _&&c.belongsTo!==a.belongsTo&&!c.isKO||(a.unitType===y.NECROMANCER||a.unitType===y.WRAITH)&&c instanceof _&&c.isKO||c instanceof _&&c.isKO&&this.isOrthogonalAdjacent(a,c)&&N(this.context,c.getTile()))&&i.push(c)});const s=[],n=[];i.forEach(r=>{this.hasLineOfSight(a,r)?s.push(r):n.push(r)}),s.forEach(r=>r.attackReticle.setVisible(!0)),n.forEach(r=>r.blockedLOS.setVisible(!0))}highlightFriendlyTargets(a){if(!a.canHeal)return;const e=this.getHeroTilesInRange(a,K.HEAL);e.length&&e.forEach(i=>{if(i.crystal)return;const s=this.units.find(h=>{var d;return h.unitId===((d=i.hero)==null?void 0:d.unitId)});if(!s){console.error("No healing target found",i);return}const n=this.context.userId,r=s.maxHealth,c=s.currentHealth;i.isFriendly(n)&&c<r&&s.healReticle.setVisible(!0)})}highlightMovementArea(a){const e=this.getHeroTilesInRange(a,K.MOVE);this.highlightTiles(e)}highlightTeleportOptions(a){if(a.getTile().tileType===S.TELEPORTER){const i=this.tiles.filter(s=>s.tileType===S.TELEPORTER&&(!s.hero||s.hero.isKO));this.highlightTiles(i)}if(a.unitType!==y.NINJA)return;const e=[];this.units.forEach(i=>{a.belongsTo===i.belongsTo&&!i.isKO&&e.push(i)}),!(e.length<=1)&&e.forEach(i=>{i.allyReticle.setVisible(!0)})}highlightEquipmentTargets(a){const e=[];this.units.forEach(i=>{i.belongsTo===a.belongsTo&&(i instanceof Ge||i.isAlreadyEquipped(a)||a.canHeal&&i.isFullHP()||a.canHeal&&a instanceof ht&&i.isKO||!a.canHeal&&i.isKO||e.push(i.getTile()))}),this.highlightTiles(e)}highlightAllBoard(){this.highlightTiles(this.tiles)}highlightTiles(a){a.forEach(e=>{e.setHighlight()})}removeReticles(){this.units.forEach(a=>{a.attackReticle.setVisible(!1),a.blockedLOS.setVisible(!1),a.healReticle.setVisible(!1),a.allyReticle.setVisible(!1)}),this.crystals.forEach(a=>{a.attackReticle.setVisible(!1),a.blockedLOS.setVisible(!1)})}getHeroTilesInRange(a,e){const i=this.getTileFromBoardPosition(a.boardPosition);let s;switch(e){case K.MOVE:s=a.speedTile?a.movement+2:a.movement;break;case K.ATTACK:s=a.attackRange;break;case K.HEAL:s=a.healingRange;break}if(!i)return console.error("No tile found - getTilesInRange"),[];const n=new Set;return this.tiles.forEach(r=>{mt(r.row,r.col,i.row,i.col)<=s&&(e===K.MOVE&&!N(this.context,r)&&(!r.hero||r.hero.isKO)&&!r.crystal&&n.add(r),(e===K.ATTACK||e===K.HEAL)&&(r.crystal||r.hero&&r.hero.unitId!==a.unitId)&&n.add(r))}),[...n]}getAreaOfEffectTiles(a){const s=[];for(let n=-1;n<=1;n++)for(let r=-1;r<=1;r++){const c=a.row+n,h=a.col+r,d=c>=0&&c<=4,u=h>=0&&h<=8;if(d&&u){const m=this.getTileFromCoordinates(c,h);s.push(m)}else console.warn("Invalid tile coordinates skipped:",c,h)}return s}getAttackDirection(a,e){const i=e-a;let s;switch(i){case-27:case-18:case-9:s=1;break;case-8:s=2;break;case 1:case 2:case 3:s=3;break;case 10:s=4;break;case 9:case 18:case 27:s=5;break;case 8:s=6;break;case-1:case-2:case-3:s=7;break;case-10:s=8;break;default:s=0;break}return s===0&&console.error(`getAttackDirection() No direction found between: ${a} and ${e}`),s}hasLineOfSight(a,e){if(this.isAdjacent(a,e))return!0;if(a.row===e.row||a.col===e.col){const h=this.getAttackDirection(a.boardPosition,e.boardPosition),u={1:[-9,-18],3:[1,2],5:[9,18],7:[-1,-2]}[h];if(!u)return!0;for(const m of u){const p=a.boardPosition+m;if(p===e.boardPosition)return!0;const f=this.getTileFromBoardPosition(p);if(f.crystal&&!de(this.context,f.crystal)||f.hero&&!de(this.context,f.hero)&&!f.hero.isKO)return!1}}const i={"1, 2":[[0,1],[1,1]],"1, -2":[[0,-1],[1,-1]],"-1, 2":[[0,1],[-1,1]],"-1, -2":[[0,-1],[-1,-1]],"2, 1":[[1,0],[1,1]],"2, -1":[[1,0],[1,-1]],"-2, 1":[[-1,0],[-1,1]],"-2, -1":[[-1,0],[-1,-1]]},s={row:e.row-a.row,col:e.col-a.col},n=`${s.row}, ${s.col}`,r=i[n];let c;if(r&&r.length)for(const h of r){const d=a.row+h[0],u=a.col+h[1],m=d<0||d>4,p=u<0||u>8;if(m||p)continue;const f=this.getTileFromCoordinates(d,u);if(f.boardPosition===e.boardPosition)return!0;if(f.crystal&&!de(this.context,f.crystal)||f.hero&&!de(this.context,f.hero)&&!f.hero.isKO){c=!1;break}}return c!==!1}isAdjacent(a,e){const i=Math.abs(a.row-e.row),s=Math.abs(a.col-e.col);return s<=1&&i<=1&&!(i===0&&s===0)}isOrthogonalAdjacent(a,e){const i=Math.abs(a.row-e.row),s=Math.abs(a.col-e.col);return i===1&&s===0||i===0&&s===1}}const Ze={x:800,y:400};class Ra extends Phaser.GameObjects.Container{constructor(e){super(e,Ze.x,Ze.y);o(this,"blockingLayer");o(this,"backgroundImage");o(this,"okButtonImage");o(this,"cancelButtonImage");o(this,"popupText");o(this,"okButtonText");o(this,"cancelButtonText");this.blockingLayer=e.add.rectangle(0,0,2e3,2e3,0,.001).setOrigin(.5).setInteractive(),this.backgroundImage=e.add.image(0,0,"popupBackground").setDisplaySize(500,300),this.okButtonImage=e.add.image(-90,60,"popupButton").setTint(10027008).setDisplaySize(120,60).setInteractive({useHandCursor:!0}),this.cancelButtonImage=e.add.image(90,60,"popupButton").setTint(31743).setDisplaySize(120,60).setInteractive({useHandCursor:!0}),this.popupText=e.add.text(0,-50,"You are about to concede this game. Are you sure?",{fontFamily:"proLight",fontSize:40,color:"#ffffff",align:"center",lineSpacing:10,wordWrap:{width:400,useAdvancedWrap:!0}}).setOrigin(.5),this.okButtonText=e.add.text(-90,60,"CONCEDE",{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.cancelButtonText=e.add.text(90,60,"CANCEL",{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.okButtonImage.on("pointerdown",async()=>{var c,h;T(this.scene,w.RESIGN),this.setVisible(!1);const i=e.gameController,s=(c=e.currentGame.players.find(d=>d.userData._id.toString()!==e.userId))==null?void 0:c.userData._id;if(!s){console.error("concedePopup() no winnder found");return}const n={winCondition:He.CONCEDED,winner:s},r={...i.lastTurnState,action:{action:b.CONCEDE,actionClass:ye.USER}};i.currentTurn=[r],e.activePlayer=e.opponentId,e.turnNumber++,It(e.currentRoom,i.currentTurn,e.opponentId,e.turnNumber,n),i.gameOver&&console.log("GAME ENDS! THE WINNER IS",(h=i.gameOver)==null?void 0:h.winner)}),this.cancelButtonImage.on("pointerdown",()=>{T(this.scene,w.BUTTON_FAILED),this.setVisible(!1)}),this.add([this.blockingLayer,this.backgroundImage,this.popupText,this.okButtonImage,this.okButtonText,this.cancelButtonImage,this.cancelButtonText]),this.setDepth(1002),this.setVisible(!1),e.add.existing(this)}}class Ba{constructor(a){o(this,"context");o(this,"deck");this.context=a,this.deck=[...Ue(a).factionData.unitsInDeck]}getDeckSize(){return this.deck.length}getDeck(){return this.deck}setDeck(a){this.deck=[...a]}removeFromDeck(a){return this.deck.splice(0,a)}addToDeck(a){return this.deck.push(a),this.deck}}class Na extends Phaser.GameObjects.Container{constructor(e){super(e,450,715);o(this,"doorClosed");o(this,"doorOpen");o(this,"doorBanner");o(this,"bannerText");o(this,"context");this.context=e,this.doorClosed=e.add.image(50,-15,"doorClosed").setScale(.9),this.doorOpen=e.add.image(55,-15,"doorOpen").setVisible(!1),this.doorBanner=e.add.image(0,45,"doorBanner");const i=Ue(e).factionData.unitsInDeck.length??99;this.bannerText=this.context.add.text(0,47,i.toString(),{fontFamily:"proLight",fontSize:30,color:"#000000"}).setOrigin(.5),this.add([this.doorClosed,this.doorOpen,this.doorBanner,this.bannerText]),this.setSize(70,100).setInteractive({useHandCursor:!0}),this.on("pointerdown",s=>{var n;if(s.button===0&&e.activeUnit&&dt(e.activeUnit.boardPosition)){T(this.scene,g.SHUFFLE);const r=e.activeUnit.boardPosition;e.activeUnit.shuffleInDeck(),(n=e.gameController)==null||n.afterAction(b.SHUFFLE,r,51),this.updateBannerText()}s.button===2&&console.log("Add list of items in Deck here")}),this.on("pointerover",s=>{s.rightButtonDown()}),this.on("pointerout",()=>{}),e.add.existing(this)}updateBannerText(){var i;const e=((i=this.context.gameController)==null?void 0:i.deck.getDeckSize())??0;this.bannerText.setText(e.toString())}openDoor(){this.doorOpen.setVisible(!0),this.doorClosed.setVisible(!1),this.scene.time.delayedCall(1e3,()=>{this.doorOpen.setVisible(!1),this.doorClosed.setVisible(!0)})}}class La extends st.GameObjects.Container{constructor(e){super(e,0,0);o(this,"gameOverImage");o(this,"gameOverEffect");o(this,"context");this.context=e,e.add.existing(this).setDepth(999)}async init(){var s;await this.loadImages();let e,i;((s=this.context.currentGame.gameOver)==null?void 0:s.winner)===this.context.userId?(e="gameOverVictoryEffect",i="gameOverVictoryText"):(e="gameOverDefeatEffect",i="gameOverDefeatText"),this.gameOverEffect=this.context.add.image(880,400,e).setOrigin(.5).setName("gameOverEffect").setScale(1.5),this.gameOverImage=this.context.add.image(900,400,i).setOrigin(.5).setName("gameOverImage"),this.context.tweens.add({targets:this.gameOverEffect,angle:360,duration:1e4,repeat:-1,ease:"Linear"}),this.add([this.gameOverEffect,this.gameOverImage])}loadImages(){return new Promise(e=>{var i;((i=this.context.currentGame.gameOver)==null?void 0:i.winner)===this.context.userId?(this.context.load.image("gameOverVictoryText",`${l}/images/gameItems/gameOverVictoryText.webp`),this.context.load.image("gameOverVictoryEffect",`${l}/images/gameItems/gameOverVictoryEffect.webp`)):(this.context.load.image("gameOverDefeatText",`${l}/images/gameItems/gameOverDefeatText.webp`),this.context.load.image("gameOverDefeatEffect",`${l}/images/gameItems/gameOverDefeatEffect.webp`)),this.context.load.once("complete",()=>e()),this.context.load.start()})}}const Qe={x:800,y:400};class Ma extends Phaser.GameObjects.Container{constructor(e){super(e,Qe.x,Qe.y);o(this,"blockingLayer");o(this,"backgroundRectangle");o(this,"cardImages",[]);o(this,"context");this.context=e,this.blockingLayer=e.add.rectangle(0,0,2e3,2e3,0,.001).setOrigin(.5).setInteractive(),this.blockingLayer.on("pointerdown",()=>{T(this.scene,w.BUTTON_GENERIC),this.setVisible(!1)}),this.backgroundRectangle=e.add.rectangle(50,0,700,700,2236962,.5).setStrokeStyle(2,16777215),this.add([this.blockingLayer,this.backgroundRectangle]),this.setDepth(1002),this.setVisible(!1),e.add.existing(this)}showDeckContents(e){this.cardImages.forEach(A=>A.destroy()),this.cardImages=[];const i={[W.HERO]:0,[W.ITEM]:1},s=[...e].sort((A,k)=>{const H=i[A.class]-i[k.class];return H!==0?H:A.unitId.localeCompare(k.unitId)}),n=-150,r=-250,c=100,h=100,d=5,u=s.length,m=Math.ceil(u/d),p=100,f=m*h,C=f+p;this.backgroundRectangle.setSize(this.backgroundRectangle.width,C),this.backgroundRectangle.setOrigin(.5),s.forEach((A,k)=>{const H=Math.floor(k/d),L=k%d,Y=n+L*c,U=r+H*h;let I;A.class===W.HERO?I=`${A.unitType}CardPic`:I=`${A.itemType}CardPic`;const F=this.context.add.image(Y,U,I).setDisplaySize(90,90).setOrigin(.5);this.add(F),this.cardImages.push(F)}),this.backgroundRectangle.y=r+f/2-h/2,this.setVisible(!0)}}class et extends Phaser.GameObjects.Container{constructor(e,i,s){super(e,0,0);o(this,"context");o(this,"board");o(this,"background");o(this,"healthBar");o(this,"maxHealth",9e3);o(this,"currentHealth",0);o(this,"player");o(this,"fullWidth");this.context=e,this.board=i,this.player=s;const n={1:{x:640,y:65},2:{x:930,y:65}};this.background=e.add.image(n[s].x,n[s].y,"HpBackground").setScale(3).setOrigin(0),this.healthBar=e.add.image(n[s].x,n[s].y,"HpAlly").setScale(3).setOrigin(0),this.fullWidth=this.healthBar.displayWidth,this.setHealth(),this.add([this.background,this.healthBar])}setHealth(){this.currentHealth=0,this.board.crystals.forEach(i=>{i.belongsTo===this.player&&(this.currentHealth+=i.currentHealth)});const e=this.currentHealth/this.maxHealth;this.healthBar.displayWidth=this.fullWidth*e,this.player===1&&(this.healthBar.x=this.background.x+(this.fullWidth-this.healthBar.displayWidth))}}class Fa extends Phaser.GameObjects.Container{constructor(e,i,s){super(e,0,0);o(this,"playerOneHpBar");o(this,"playerTwoHpBar");o(this,"playerOneBanner");o(this,"playerTwoBanner");o(this,"playerOnePortrait");o(this,"playerTwoPortrait");o(this,"playerOneName");o(this,"playerTwoName");o(this,"deckPopup");o(this,"vsBanner");this.playerOneBanner=e.add.image(0,0,"playerBanner").setOrigin(.5).setPosition(705,80).setFlipX(!0).setTint(3381759),this.playerTwoBanner=e.add.image(0,0,"playerBanner").setOrigin(.5).setPosition(1095,80).setTint(10027008),this.playerOnePortrait=e.add.image(0,0,s[0].picture).setOrigin(.5).setPosition(600,73).setDisplaySize(256*.3,256*.3).setDepth(1).setInteractive({useHandCursor:!0}),this.playerTwoPortrait=e.add.image(0,0,s[1].picture).setOrigin(.5).setPosition(1200,73).setDisplaySize(256*.3,256*.3).setFlipX(!0).setDepth(1).setInteractive({useHandCursor:!0}),this.deckPopup=new Ma(e);const n=r=>{if(r._id===e.userId)this.deckPopup.showDeckContents(e.gameController.deck.getDeck());else{const{opponent:c}=ke(e),h=[...e[c].factionData.unitsInDeck,...e[c].factionData.unitsInHand];this.deckPopup.showDeckContents(h)}};this.playerOnePortrait.on("pointerdown",()=>{n(s[0])}),this.playerTwoPortrait.on("pointerdown",()=>{n(s[1])}),this.playerOneHpBar=new et(e,i,1),this.playerTwoHpBar=new et(e,i,2),this.playerOneName=e.add.text(645,35,be(s[0].username,14),{fontFamily:"proLight",color:"#ffffff",fontSize:40}),this.playerTwoName=e.add.text(950,35,be(s[1].username,14),{fontFamily:"proLight",color:"#ffffff",fontSize:40}),this.vsBanner=e.add.image(0,0,"vsBanner").setOrigin(.5).setPosition(900,75),this.add([this.playerOneBanner,this.playerTwoBanner,this.playerOneHpBar,this.playerTwoHpBar,this.playerOneName,this.playerTwoName,this.playerOnePortrait,this.playerTwoPortrait,this.vsBanner]),e.add.existing(this)}}class $a{constructor(a,e,i){o(this,"itemRack");o(this,"banner");const s=a.add.image(0,0,"gameBoard").setOrigin(0).setInteractive();s.x=1434-s.width-14,s.y+=14,this.itemRack=a.add.image(0,0,"itemRack").setOrigin(.5).setPosition(900,736).setScale(.9),this.banner=new Fa(a,e,i)}}class Ua{constructor(a){o(this,"context");o(this,"handData");o(this,"hand");var e;this.context=a,this.handData=Ue(a).factionData.unitsInHand??[],this.hand=((e=this.handData)==null?void 0:e.map(i=>this.renderUnit(i)))??[]}getHandSize(){return this.hand.length}getHand(){return this.hand}renderUnit(a){if(E(a))return Te(this.context,a);if(q(a))return Fe(this.context,a);throw new Error("Unit passed to renderUnit is not a recognized type")}addToHand(a){const e=[45,46,47,48,49,50];let i=-1;e.forEach(s=>{const n=this.hand.findIndex(r=>r.boardPosition===s);if(n!==-1)i=n;else{const r=a.shift();if(r){r.boardPosition=s;const c=this.renderUnit(r);this.hand.splice(++i,0,c)}}})}removeFromHand(a){const e=this.hand.findIndex(i=>i.unitId===a.unitId);e!==-1&&this.hand.splice(e,1)}exportHandData(){return this.hand.length===0?[]:this.hand.map(a=>a.exportData())}importHandData(a){this.hand.forEach(e=>e.destroy()),this.hand=[],a.forEach(e=>{if(E(e)){const i=Te(this.context,e);this.hand.push(i)}if(q(e)){const i=Fe(this.context,e);this.hand.push(i)}})}}class Ga extends Phaser.GameObjects.Container{constructor(e){super(e,1300,725);o(this,"buttonImage");o(this,"buttonText");o(this,"context");this.context=e,this.buttonImage=e.add.image(0,0,"popupBackground").setOrigin(.5).setScale(1.1).setInteractive({useHandCursor:!0}),this.buttonText=e.add.text(0,-5,"Again!",{fontFamily:"proHeavy",fontSize:55,color:"#ffffff"}).setOrigin(.5),this.buttonImage.on("pointerdown",async()=>{var i;new xe({context:e,opponentId:e.opponentId,challengeType:ne.SEND,username:(i=e.gameController.playerData.find(s=>s._id===e.opponentId))==null?void 0:i.username})}),this.add([this.buttonImage,this.buttonText]),e.add.existing(this)}}class xa{constructor(a){o(this,"context");o(this,"buttonImage");this.context=a,this.buttonImage=a.add.image(1300,725,"turnButton").setOrigin(.5).setScale(1.1).setInteractive({useHandCursor:!0}),this.buttonImage.on("pointerdown",async()=>{if(a.currentGame&&a.activePlayer===a.userId){if(a.sound.play(w.BUTTON_PLAY),console.log("Clicked on send turn"),a.gameController.hasActionsLeft()){a.gameController.turnPopup.setVisible(!0);return}await this.handleSendingTurn()}})}async handleSendingTurn(){const a=this.context.gameController;this.context.currentTurnAction===1&&a.addActionToState(b.PASS),await a.removeKOUnits(),await a.endOfTurnActions()}}const tt={x:800,y:400};class Va extends Phaser.GameObjects.Container{constructor(e){super(e,tt.x,tt.y);o(this,"blockingLayer");o(this,"backgroundImage");o(this,"okButtonImage");o(this,"cancelButtonImage");o(this,"popupText");o(this,"okButtonText");o(this,"cancelButtonText");this.blockingLayer=e.add.rectangle(0,0,2e3,2e3,0,.001).setOrigin(.5).setInteractive(),this.backgroundImage=e.add.image(0,0,"popupBackground").setDisplaySize(500,300),this.okButtonImage=e.add.image(-90,60,"popupButton").setTint(31743).setDisplaySize(110,60).setInteractive({useHandCursor:!0}),this.cancelButtonImage=e.add.image(90,60,"popupButton").setTint(10027008).setDisplaySize(110,60).setInteractive({useHandCursor:!0}),this.popupText=e.add.text(0,-50,"You still have actions left. Send turn?",{fontFamily:"proLight",fontSize:40,color:"#ffffff",align:"center",lineSpacing:10,wordWrap:{width:400,useAdvancedWrap:!0}}).setOrigin(.5),this.okButtonText=e.add.text(-90,60,"SEND",{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.cancelButtonText=e.add.text(90,60,"BACK",{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.okButtonImage.on("pointerdown",()=>{this.scene.sound.play(w.BUTTON_GENERIC),this.setVisible(!1),e.gameController.turnButton.handleSendingTurn()}),this.cancelButtonImage.on("pointerdown",()=>{this.scene.sound.play(w.BUTTON_FAILED),this.setVisible(!1)}),this.add([this.blockingLayer,this.backgroundImage,this.popupText,this.okButtonImage,this.okButtonText,this.cancelButtonImage,this.cancelButtonText]),this.setDepth(1002),this.setVisible(!1),e.add.existing(this)}}class Ka{constructor(a){o(this,"context");o(this,"game");o(this,"gameUI");o(this,"board");o(this,"hand");o(this,"deck");o(this,"actionPie");o(this,"door");o(this,"turnButton");o(this,"turnPopup");o(this,"rematchButton");o(this,"lastTurnState");o(this,"currentTurn");o(this,"blockingLayer");o(this,"replayButton");o(this,"playerData");o(this,"gameOver");o(this,"gameOverScreen");o(this,"concedeButton");o(this,"concedePopup");a.triggerReplay&&a.chatComponent&&(a.chatComponent.pointerEvents="none"),a.currentGame.status===B.FINISHED&&!a.triggerReplay&&new La(a).init(),this.context=a,this.game=a.currentGame,this.lastTurnState=a.currentGame.previousTurn[a.triggerReplay?0:a.currentGame.previousTurn.length-1],this.board=new Da(a,this.lastTurnState.boardState),this.playerData=a.currentGame.players.map(e=>e.userData),this.gameUI=new $a(a,this.board,this.playerData),a.player1=this.lastTurnState.player1,a.player2=this.lastTurnState.player2,this.deck=new Ba(a),this.hand=new Ua(a),this.actionPie=new ka(a),this.turnButton=new xa(a),this.turnPopup=new Va(a),this.rematchButton=new Ga(a).setVisible(!1),this.concedeButton=this.addConcedeButton(a),this.concedePopup=new Ra(a),a.triggerReplay?(this.rematchButton.setVisible(!1),this.turnButton.buttonImage.setVisible(!1)):this.game.status===B.FINISHED&&(this.rematchButton.setVisible(!0),this.turnButton.buttonImage.setVisible(!1),this.gameOverEffects()),a.activePlayer!==a.userId&&this.turnButton.buttonImage.setVisible(!1),this.door=new Na(a),this.blockingLayer=a.add.rectangle(910,0,1040,1650,0,.3).setOrigin(.5).setInteractive().setDepth(999).setVisible(this.context.triggerReplay),this.blockingLayer.on("pointerdown",()=>{a.scene.restart({userId:a.userId,colyseusClient:a.colyseusClient,currentGame:a.currentGame,currentRoom:a.currentRoom,triggerReplay:!1})}),this.replayButton=_a(a),this.currentTurn=[],a.input.on("gameobjectdown",()=>De(a))}addConcedeButton(a){const e=a.add.image(1350,70,"concedeButton").setScale(.9).setInteractive({useHandCursor:!0});return e.on("pointerdown",()=>{T(this.context,w.BUTTON_GENERIC),this.concedePopup.setVisible(!0)}),e}async replayTurn(){var e;const a=[];if(this.context.activePlayer===this.context.userId){const i=this.context.isPlayerOne?this.lastTurnState.player2:this.lastTurnState.player1;i==null||i.factionData.unitsInHand.forEach(s=>{E(s)&&a.push(Te(this.context,s).setVisible(!1).setInteractive(!1)),q(s)&&a.push(Fe(this.context,s).setVisible(!1).setInteractive(!1))})}for(let i=1;i<this.context.currentGame.previousTurn.length;i++){const s=this.context.currentGame.previousTurn[i],n=[b.DRAW,b.PASS],r=(e=s.action)==null?void 0:e.action;!r||n.includes(r)||await new Promise(c=>{this.context.time.delayedCall(1e3,async()=>{(r===b.SPAWN||r===b.MOVE)&&this.replaySpawnOrMove(s.action,a),(r===b.ATTACK||r===b.HEAL||r===b.TELEPORT||r===b.SPAWN_PHANTOM)&&await this.replayAttackHealTeleport(s.action),r===b.SHUFFLE&&await this.replayShuffle(),r===b.USE&&await this.replayUse(s.action,a),r===b.REMOVE_UNITS&&await this.removeKOUnits(),c()})})}this.context.scene.restart({userId:this.context.userId,colyseusClient:this.context.colyseusClient,currentGame:this.context.currentGame,currentRoom:this.context.currentRoom,triggerReplay:!1,gameOver:void 0})}replaySpawnOrMove(a,e){const i=a.action,s=e.length?e:this.hand.hand,n=i===b.SPAWN?s.find(c=>c.boardPosition===a.actorPosition):this.board.units.find(c=>c.boardPosition===a.actorPosition),r=this.board.getTileFromBoardPosition(a.targetPosition);if(!n||!r)throw new Error("Missing hero or tile in spawn or move action");i===b.MOVE&&n.move(r),i===b.SPAWN&&n.setVisible(!0).spawn(r)}async replayAttackHealTeleport(a){const e=this.board.units.find(s=>s.boardPosition===a.actorPosition),i=this.board.crystals.find(s=>s.boardPosition===a.targetPosition)??this.board.units.find(s=>s.boardPosition===a.targetPosition);if(!e||!i)throw new Error("Missing hero or target in attack or heal action");(a.action===b.ATTACK||a.action===b.SPAWN_PHANTOM)&&await e.attack(i),a.action===b.HEAL&&await e.heal(i),a.action===b.TELEPORT&&await e.teleport(i)}async replayUse(a,e){const s=(e.length?e:this.hand.hand).find(n=>n.boardPosition===a.actorPosition);if(!s)throw new Error("Missing item in use action");if(s.dealsDamage){const n=this.board.getTileFromBoardPosition(a.targetPosition);if(!s)throw new Error("Missing tile in use action");await s.use(n)}if(!s.dealsDamage){const n=this.board.units.find(r=>r.boardPosition===a.targetPosition);if(!n)throw new Error("Missing target in use action");await s.use(n)}}async replayShuffle(){const a=this.context.add.text(600,350,"OPPONENT SWAPPED AN ITEM!",{fontFamily:"proLight",fontSize:50,color:"#fffb00"}).setDepth(999);T(this.context,g.SHUFFLE),await ra(a,1.3)}async resetTurn(){he(this.context),this.context.longPressStart=void 0,this.context.visibleUnitCard=void 0,this.context.scene.restart(),T(this.context,g.RESET_TURN)}getDeck(){return this.deck.getDeck()}drawUnits(){T(this.context,g.DRAW);const a=6-this.hand.getHandSize();if(this.deck.getDeckSize()===0||a===0)return;this.door.openDoor();const e=this.deck.removeFromDeck(a);this.hand.addToHand(e);const{player:i,opponent:s}=ke(this.context),n={...this.context[i],factionData:{...this.context[i].factionData,unitsInHand:this.hand.exportHandData(),unitsInDeck:this.deck.getDeck()}},r=this.context[s];this.currentTurn.push({player1:this.context.isPlayerOne?n:r,player2:this.context.isPlayerOne?r:n,action:{actionClass:ye.AUTO,action:b.DRAW},boardState:this.board.getBoardState()})}async removeKOUnits(){const a=[];if(this.board.units.forEach(e=>{e.isKO&&(e.lastBreath&&a.push(e),e.lastBreath||(e.lastBreath=!0,e.updateTileData()))}),a.length){T(this.context,g.VANISH);const e=i=>new Promise(s=>{this.context.tweens.add({targets:i,alpha:0,duration:500,ease:"Linear",onComplete:()=>{i.removeFromGame(!0),s()}})});await Promise.all(a.map(i=>e.call(this.context,i)))}this.addActionToState(b.REMOVE_UNITS)}hasActionsLeft(){return this.context.turnNumber===0&&this.context.currentTurnAction<4||this.context.currentTurnAction<6}async endOfTurnActions(){this.context.activeUnit&&he(this.context),this.actionPie.resetActionPie(),this.drawUnits(),this.door.updateBannerText(),this.currentTurn.unshift(this.lastTurnState),this.context.activePlayer=this.context.opponentId,this.context.turnNumber++,It(this.context.currentRoom,this.currentTurn,this.context.opponentId,this.context.turnNumber,this.gameOver),this.gameOver&&this.gameOverEffects()}async gameOverEffects(){var a;((a=this.gameOver)==null?void 0:a.winner)===this.context.activePlayer?T(this.context,w.WIN_SFX):T(this.context,w.LOSE_SFX)}onHeroClicked(a){console.log(`A hero in position ${a.boardPosition} has been clicked`),a.boardPosition>44&&this.board.highlightSpawns(a.unitType),a.boardPosition<45&&(this.board.highlightEnemyTargets(a),this.board.highlightFriendlyTargets(a),this.board.highlightMovementArea(a),(a.unitType===y.NINJA||a.getTile().tileType===S.TELEPORTER)&&this.board.highlightTeleportOptions(a))}onItemClicked(a){console.log(`An item ${a.unitId} has been clicked`),a.dealsDamage?this.board.highlightAllBoard():this.board.highlightEquipmentTargets(a)}onTileClicked(a){console.log(`A tile ${a.tileType} has been clicked`)}rebuildFromState(a){const{player:e,opponent:i}=ke(this.context),s=this.context.isPlayerOne?a.player1:a.player2;this.context[e]=s;const n=this.context.isPlayerOne?a.player2:a.player1;this.context[i]=n,this.board.setBoardState(a.boardState),this.hand.importHandData(s.factionData.unitsInHand),this.deck.setDeck(s.factionData.unitsInDeck),this.door.updateBannerText(),this.context.currentTurnAction--}undoLastAction(){if(T(this.context,w.BUTTON_GENERIC),this.currentTurn.length<=0)return;const a=this.currentTurn[this.currentTurn.length-1]??this.lastTurnState;this.rebuildFromState(a),this.currentTurn.pop(),this.actionPie.showActionSlice(this.context.currentTurnAction),this.context.activeUnit&&he(this.context)}afterAction(a,e,i){this.context.triggerReplay||(this.addActionToState(a,e,i),this.actionPie.hideActionSlice(this.context.currentTurnAction++),this.context.activeUnit&&he(this.context))}addActionToState(a,e,i){const{player:s,opponent:n}=ke(this.context),r=sa(a),c={...this.context[s],factionData:{...this.context[s].factionData,unitsInHand:this.hand.exportHandData(),unitsInDeck:this.deck.getDeck()}},h=this.context[n];this.currentTurn.push({player1:this.context.isPlayerOne?c:h,player2:this.context.isPlayerOne?h:c,action:{actorPosition:e,targetPosition:i??e,action:a,actionClass:r},boardState:this.board.getBoardState()})}async pushEnemy(a,e){const i=this.board.getTileFromBoardPosition(a.boardPosition),s=this.board.getTileFromBoardPosition(e.boardPosition);if(!i||!s){console.error("pushEnemy() no attacker or target board position");return}const n=ze(i.row,i.col,s.row,s.col,!0),r=n.row<0||n.row>4,c=n.col<0||n.col>8;if(r||c){console.error("pushEnemy() Cant push enemy out of the map");return}const h=this.board.getTileFromCoordinates(n.row,n.col);if(!h){console.error("pushEnemy() No destination tile found");return}if(h.crystal||h.hero){console.error("pushEnemy() Destination tile is occupied");return}if(h.tileType==S.SPAWN&&!N(this.context,h)&&!e.isKO){console.error("pushEnemy() Can't push a non-KO'd enemy onto a friendly spawn");return}e.isKO||e.specialTileCheck(h.tileType,s.tileType),await je(this.context,e,h),e.updatePosition(h),h.hero=e.exportData(),s.removeHero()}async pullEnemy(a,e){const i=this.board.getTileFromBoardPosition(a.boardPosition),s=this.board.getTileFromBoardPosition(e.boardPosition);if(!i||!s){console.error("pullEnemy() no attacker or target board position");return}const n=ze(i.row,i.col,s.row,s.col,!1),r=this.board.getTileFromCoordinates(n.row,n.col);if(!r){console.error("pullEnemy() No destination tile found");return}if(r.crystal||r.hero){console.error("pullEnemy() Destination tile is occupied");return}if(r.tileType==S.SPAWN&&!N(this.context,r)&&!e.isKO){console.error("pushEnemy() Can't pull a non-KO'd enemy onto a friendly spawn");return}e.isKO||e.specialTileCheck(r.tileType,s.tileType),await je(this.context,e,r),e.updatePosition(r),r.hero=e.exportData(),s.removeHero()}}function Wa(){const t={x:545,y:225},a=[];let e=0;for(let i=0;i<5;i++)for(let s=0;s<9;s++){const n=t.x+s*90,r=t.y+i*90;a.push({x:n,y:r,row:i,col:s,boardPosition:e}),e++}return a}function ja(){const t=Wa(),a={x:700,y:745};for(let e=0;e<6;e++)t.push({x:a.x,y:a.y}),a.x+=80;return t.push({x:435,y:720}),t}function za(t){t.load.image("gameBoard",`${l}/images/maps/game_board.webp`),t.load.image("itemRack",`${l}/images/gameItems/item_rack.webp`),t.load.image("doorClosed",`${l}/images/gameItems/door_closed.webp`),t.load.image("doorOpen",`${l}/images/gameItems/door_open.webp`),t.load.image("doorBanner",`${l}/images/gameItems/door_banner.webp`),t.load.image("actionArrow",`${l}/images/gameItems/action_arrow.webp`),t.load.image("actionPie",`${l}/images/gameItems/action_pie.webp`),t.load.image("actionCircle",`${l}/images/gameItems/action_circle.webp`),t.load.image("turnButton",`${l}/ui/turn_button.webp`),t.load.image("playerBanner",`${l}/images/gameItems/player_banner.webp`),t.load.image("vsBanner",`${l}/images/gameItems/vs_banner.webp`),t.load.image("replayButton",`${l}/ui/replay.webp`)}function Ya(t){t.load.image("spawnTile",`${l}/images/gameItems/DeployZone01-hd.webp`),t.load.image("helmetTile",`${l}/images/gameItems/PremiumTile_Resist-hd.webp`),t.load.image("powerTile",`${l}/images/gameItems/PremiumTile_Sword-hd.webp`),t.load.image("shieldTile",`${l}/images/gameItems/PremiumTile_Shield-hd.webp`),t.load.image("speedTile",`${l}/images/gameItems/PremiumTile_Speed-hd.webp`),t.load.image("crystalDamageTile",`${l}/images/gameItems/PremiumTile_VictoryDamageMultiplier-hd.webp`),t.load.image("teleporterTile",`${l}/images/gameItems/PremiumTile_Teleport-hd.webp`),t.load.image("crystalDamageAnim_1",`${l}/images/gameItems/animations/CrystalPremiumTile_BottomSplash01-hd.webp`),t.load.image("crystalDamageAnim_2",`${l}/images/gameItems/animations/CrystalPremiumTile_BottomSplash02-hd.webp`),t.load.image("crystalDamageAnim_3",`${l}/images/gameItems/animations/CrystalPremiumTile_BottomSplash03-hd.webp`),t.load.image("magicalResistanceAnim_1",`${l}/images/gameItems/animations/ResistPremiumTile_BottomSplash01-hd.webp`),t.load.image("magicalResistanceAnim_2",`${l}/images/gameItems/animations/ResistPremiumTile_BottomSplash02-hd.webp`),t.load.image("magicalResistanceAnim_3",`${l}/images/gameItems/animations/ResistPremiumTile_BottomSplash03-hd.webp`),t.load.image("physicalResistanceAnim_1",`${l}/images/gameItems/animations/ShieldPremiumTile_BottomSplash01-hd.webp`),t.load.image("physicalResistanceAnim_2",`${l}/images/gameItems/animations/ShieldPremiumTile_BottomSplash02-hd.webp`),t.load.image("physicalResistanceAnim_3",`${l}/images/gameItems/animations/ShieldPremiumTile_BottomSplash03-hd.webp`),t.load.image("powerTileAnim_1",`${l}/images/gameItems/animations/SwordPremiumTile_BottomSplash01-hd.webp`),t.load.image("powerTileAnim_2",`${l}/images/gameItems/animations/SwordPremiumTile_BottomSplash02-hd.webp`),t.load.image("powerTileAnim_3",`${l}/images/gameItems/animations/SwordPremiumTile_BottomSplash03-hd.webp`),t.load.image("superChargeAnim_1",`${l}/images/gameItems/animations/Scroll_Backspash01-hd.webp`),t.load.image("superChargeAnim_2",`${l}/images/gameItems/animations/Scroll_Backspash02-hd.webp`),t.load.image("superChargeAnim_3",`${l}/images/gameItems/animations/Scroll_Backspash03-hd.webp`),t.load.image("soulHarvestAnim_1",`${l}/images/gameItems/animations/SoulHarvest_Explosion01-hd.webp`),t.load.image("soulHarvestAnim_2",`${l}/images/gameItems/animations/SoulHarvest_Explosion02-hd.webp`),t.load.image("soulHarvestAnim_3",`${l}/images/gameItems/animations/SoulHarvest_Explosion03-hd.webp`),t.load.image("infernoAnim_1",`${l}/images/gameItems/animations/Inferno_Fireball01-hd.webp`),t.load.image("infernoAnim_2",`${l}/images/gameItems/animations/Inferno_Fireball02-hd.webp`),t.load.image("infernoAnim_3",`${l}/images/gameItems/animations/Inferno_Fireball03-hd.webp`),t.load.image("infernoAnim_4",`${l}/images/gameItems/animations/Inferno_Fireball04-hd.webp`),t.load.image("infernoAnim_5",`${l}/images/gameItems/animations/Inferno_Fireball05-hd.webp`),t.load.image("infernoAnim_6",`${l}/images/gameItems/animations/Inferno_Fireball06-hd.webp`),t.load.image("infernoShockWave",`${l}/images/factions/council/Inferno_Shockwave01-hd.webp`),t.load.image("soulHarvestShockWave",`${l}/images/factions/darkElves/SoulHarvest_Shockwave01-hd.webp`),t.load.image("smokeAnim_1",`${l}/images/gameItems/animations/NinjaSmoke_Puff01-hd.webp`),t.load.image("smokeAnim_2",`${l}/images/gameItems/animations/NinjaSmoke_Puff02-hd.webp`),t.load.image("smokeAnim_3",`${l}/images/gameItems/animations/NinjaSmoke_Puff03-hd.webp`),t.load.image("reviveAnim_1",`${l}/images/gameItems/animations/Revive_Backsplash01-hd.webp`),t.load.image("reviveAnim_2",`${l}/images/gameItems/animations/Revive_Backsplash02-hd.webp`),t.load.image("reviveAnim_3",`${l}/images/gameItems/animations/Revive_Backsplash03-hd.webp`),t.load.image("phantomSpawnAnim_1",`${l}/images/gameItems/animations/PhantomSpawn_Explosion01-hd.webp`),t.load.image("phantomSpawnAnim_2",`${l}/images/gameItems/animations/PhantomSpawn_Explosion02-hd.webp`),t.load.image("debuff",`${l}/images/gameItems/animations/MoveDebuff_PurpleGlow-hd.webp`),t.load.image("crystalFull",`${l}/images/gameItems/crystal_full.webp`),t.load.image("pedestal",`${l}/images/gameItems/crystal_pedestal.webp`),t.load.image("crystalDamaged",`${l}/images/gameItems/crystal_damaged.webp`),t.load.image("crystalDebuff_1",`${l}/images/gameItems/animations/CrystalDebuff1_BgFlames01-hd.webp`),t.load.image("crystalDebuff_2",`${l}/images/gameItems/animations/CrystalDebuff1_BgFlames02-hd.webp`),t.load.image("crystalDebuff_3",`${l}/images/gameItems/animations/CrystalDebuff2_BgFlames01-hd.webp`),t.load.image("crystalDebuff_4",`${l}/images/gameItems/animations/CrystalDebuff2_BgFlames02-hd.webp`),t.load.image("crystalCardPic",`${l}/images/profilePics/crystalIcon.webp`);const a=["archer","cleric","knight","ninja","wizard"],e=["priestess","impaler","necromancer","phantom","voidmonk","wraith"];a.forEach(i=>{for(let s=1;s<=9;s++)t.load.image(`${i}_${s}`,`${l}/images/factions/council/${i}/${i}_${s}.webp`);t.load.image(`${i}CardPic`,`${l}/images/profilePics/${i}_v1-hd.webp`)}),e.forEach(i=>{if(i!==y.PHANTOM)for(let s=1;s<=9;s++)t.load.image(`${i}_${s}`,`${l}/images/factions/darkElves/${i}/${i}_${s}.webp`);else t.load.image(`${i}_1`,`${l}/images/factions/darkElves/${i}/${i}_1.webp`);t.load.image(`${i}CardPic`,`${l}/images/profilePics/${i}_v1-hd.webp`)}),Object.entries(P).forEach(([i,s])=>{t.load.image(`${s}CardPic`,`${l}/images/profilePics/${s}Icon.webp`)}),t.load.image("dragonScale",`${l}/images/factions/council/dragon_scale.webp`),t.load.image("inferno",`${l}/images/factions/council/inferno.webp`),t.load.image("healingPotion",`${l}/images/factions/council/healing_potion.webp`),t.load.image("soulStone",`${l}/images/factions/darkElves/soul_stone.webp`),t.load.image("soulHarvest",`${l}/images/factions/darkElves/soul_harvest.webp`),t.load.image("manaVial",`${l}/images/factions/darkElves/mana_vial.webp`),t.load.image("superCharge",`${l}/images/factions/common/super_charge.webp`),t.load.image("runeMetal",`${l}/images/factions/common/rune_metal.webp`),t.load.image("shiningHelm",`${l}/images/factions/common/shining_helm.webp`),t.load.image("attackReticle",`${l}/images/gameItems/attack_reticle.webp`),t.load.image("healReticle",`${l}/images/gameItems/heal_reticle.webp`),t.load.image("allyReticle",`${l}/images/gameItems/ally_reticle.webp`),t.load.image("blockedLOS",`${l}/images/gameItems/blocked_los.webp`),t.load.image("HpBackground",`${l}/images/gameItems/hp_background.webp`),t.load.image("HpAlly",`${l}/images/gameItems/hp_green.webp`),t.load.image("HpEnemy",`${l}/images/gameItems/hp_red.webp`),t.load.atlas("greenFont",`${l}/fonts/green_font.png`,`${l}/fonts/green_font.json`),t.load.atlas("redFont",`${l}/fonts/red_font.png`,`${l}/fonts/red_font.json`),t.load.image("cardBackground",`${l}/images/gameItems/card/HelpTooltip_BG-hd.webp`),t.load.image("cardSeparator",`${l}/images/gameItems/card/HelpTooltip_Separator.webp`),t.load.image("hpBackground",`${l}/images/gameItems/card/HelpTooltip_InsetHP-hd.webp`),t.load.image("hpBar",`${l}/images/gameItems/card/HelpTooltip_HPBar-hd.webp`),t.load.image("magicalDamage",`${l}/images/gameItems/card/TooltipIcon_MagicDmg-hd.webp`),t.load.image("physicalDamage",`${l}/images/gameItems/card/TooltipIcon_PhysDmg-hd.webp`),t.load.image("magicalResistance",`${l}/images/gameItems/card/TooltipIcon_MagicRes-hd.webp`),t.load.image("physicalResistance",`${l}/images/gameItems/card/TooltipIcon_PhysDef-hd.webp`),t.load.image("movementRange",`${l}/images/gameItems/card/TooltipIcon_Movement-hd.webp`),t.load.image("attackRange",`${l}/images/gameItems/card/TooltipIcon_Range-hd.webp`),t.load.image("movementSquare",`${l}/images/gameItems/card/TooltipIcon_MovementTile-hd.webp`),t.load.image("attackSquare",`${l}/images/gameItems/card/TooltipIcon_RangeTile-hd.webp`),t.load.image("hpIcon",`${l}/images/gameItems/card/HelpTooltip_HP-hd.webp`),t.load.audio("resignSound",`${l}/audio/ui/resignGame.mp3`),t.load.audio("resetTurnSound",`${l}/audio/ui/turnReset.mp3`),t.load.audio("selectHeroFromHandSound",`${l}/audio/game/Game_Pickup_CharacterTile_Generic.mp3`),t.load.audio("selectHeroFromBoardSound",`${l}/audio/game/Game_Select_Character.mp3`),t.load.audio("thinkingSound",`${l}/audio/game/Game_Ponder_LP.mp3`),t.load.audio("spawnHeroSound",`${l}/audio/game/Game_Place_CharacterTile.mp3`),t.load.audio("moveHeroSound",`${l}/audio/game/Game_Release_ToMove_Character.mp3`),t.load.audio("moveFlySound",`${l}/audio/game/Character_Movement_Flying.mp3`),t.load.audio("moveWalkSound",`${l}/audio/game/Character_Movement_Steps.mp3`),t.load.audio("stompSound",`${l}/audio/game/KO_Player_Stomp.mp3`),t.load.audio("vanishSound",`${l}/audio/game/KO_Player_Vanish.mp3`),t.load.audio("reviveHeroSound",`${l}/audio/game/Game_Revive.mp3`),t.load.audio("healSound",`${l}/audio/game/Civ_Cleric_Heal.mp3`),t.load.audio("healExtraSound",`${l}/audio/game/Game_Heal.mp3`),t.load.audio("selectScrollSound",`${l}/audio/game/Game_Touch_Scroll.mp3`),t.load.audio("selectRuneMetalSound",`${l}/audio/game/Touch_Sword.mp3`),t.load.audio("selectDragonScaleSound",`${l}/audio/game/Touch_Shield.mp3`),t.load.audio("selectItemGenericSound",`${l}/audio/game/Touch_Generic.mp3`),t.load.audio("selectPotionSound",`${l}/audio/game/Touch_Potion.mp3`),t.load.audio("useScrollSound",`${l}/audio/game/Game_Use_Scroll.mp3`),t.load.audio("useRuneMetalSound",`${l}/audio/game/Game_Equip_Sword.mp3`),t.load.audio("useDragonScaleSound",`${l}/audio/game/Deploy_Shield.mp3`),t.load.audio("useItemGenericSound",`${l}/audio/game/Deploy_Generic.mp3`),t.load.audio("usePotionSound",`${l}/audio/game/Deploy_Potion.mp3`),t.load.audio("useInfernoSound",`${l}/audio/game/Game_FireBomb_Activate.mp3`),t.load.audio("swordTileSound",`${l}/audio/game/Game_Land_Sword.mp3`),t.load.audio("shieldTileSound",`${l}/audio/game/Game_Land_Shield.mp3`),t.load.audio("helmTileSound",`${l}/audio/game/Tile_Resist_Magic.mp3`),t.load.audio("crystalTileSound",`${l}/audio/game/Game_Land_X.mp3`),t.load.audio("newItemsSound",`${l}/audio/game/UI_Door_KickOpenClose.mp3`),t.load.audio("returnItemSound",`${l}/audio/game/UI_Game_Chest_Tap.mp3`),t.load.audio("damageCrystal1Sound",`${l}/audio/game/Game_Crystal_Damage_1.mp3`),t.load.audio("damageCrystal2Sound",`${l}/audio/game/Game_Crystal_Damage_2.mp3`),t.load.audio("destroyCrystalSound",`${l}/audio/game/Game_Crystal_Destroy.mp3`),t.load.audio("damageHero1Sound",`${l}/audio/game/Game_Damage_Opponent_1.mp3`),t.load.audio("damageHero2Sound",`${l}/audio/game/Game_Damage_Opponent_2.mp3`),t.load.audio("damageHero3Sound",`${l}/audio/game/Game_Damage_Opponent_3.mp3`),t.load.audio("damageHero4Sound",`${l}/audio/game/Game_Damage_Opponent_4.mp3`),t.load.audio("damageHeroKOSound",`${l}/audio/game/KO_Slow_Mo_Punch.mp3`),t.load.audio("winSFXSound",`${l}/audio/game/Game_Win_SFX_01.mp3`),t.load.audio("loseSFXSound",`${l}/audio/game/Game_Lose_SFX_01.mp3`),t.load.audio("archerAttackSound",`${l}/audio/council/Civ_Archer_Attack_Arrow.mp3`),t.load.audio("archerAttackBigSound",`${l}/audio/council/Civ_Human_Archer_BigAttack.mp3`),t.load.audio("archerAttackMeleeSound",`${l}/audio/council/Civ_Human_Archer_Attack_CloseRange.mp3`),t.load.audio("archerDeathSound",`${l}/audio/council/Civ_Death_Archer_Element.mp3`),t.load.audio("clericAttackSound",`${l}/audio/council/Civ_Human_Cleric_Attack_CloseRange.mp3`),t.load.audio("clericAttackBigSound",`${l}/audio/council/Civ_Human_Cleric_AttackBig.mp3`),t.load.audio("clericDeathSound",`${l}/audio/council/Civ_Death_Cleric_Element.mp3`),t.load.audio("knightAttackSound",`${l}/audio/council/Civ_Knight_Attack.mp3`),t.load.audio("knightAttackBigSound",`${l}/audio/council/Civ_Human_Fighter_BigAttack.mp3`),t.load.audio("knightDeathSound",`${l}/audio/council/Civ_Death_Knight_Element.mp3`),t.load.audio("ninjaAttackSound",`${l}/audio/council/Civ_Human_Ninja_Attack_CloseRange.mp3`),t.load.audio("ninjaAttackBigSound",`${l}/audio/council/Civ_Human_Ninja_AttackBig.mp3`),t.load.audio("ninjaAttackRangedSound",`${l}/audio/council/Civ_Ninja_ThrowingStar_Attack.mp3`),t.load.audio("ninjaDeathSound",`${l}/audio/council/Civ_Death_Ninja_Element.mp3`),t.load.audio("ninjaSmokeSound",`${l}/audio/council/Civ_Ninja_Deploy_SmokeBomb.mp3`),t.load.audio("wizardAttackSound",`${l}/audio/council/Civ_Wizard_Attack.mp3`),t.load.audio("wizardAttackBigSound",`${l}/audio/council/Civ_Human_Wizard_BigAttack.mp3`),t.load.audio("wizardDeathSound",`${l}/audio/council/Civ_Death_Wizard_Element.mp3`),t.load.audio("selectInfernoSound",`${l}/audio/council/Game_FireBomb_Grab_Tile.mp3`),t.load.audio("priestessAttackSound",`${l}/audio/elves/DE-Heretic_Attack_Curse.mp3`),t.load.audio("priestessDeathSound",`${l}/audio/elves/DE-Heretic_Death.mp3`),t.load.audio("impalerAttackSound",`${l}/audio/elves/DE-Impaler_Attack_Throw_Spear.mp3`),t.load.audio("impalerAttackBigSound",`${l}/audio/elves/DE-Impaler_BigAttack.mp3`),t.load.audio("impalerAttackMeleeSound",`${l}/audio/elves/DE-Impaler_Melee_Attack.mp3`),t.load.audio("impalerDeathSound",`${l}/audio/elves/DE-Impaler_Death.mp3`),t.load.audio("necroAttackSound",`${l}/audio/elves/DE-Necro_Attack.mp3`),t.load.audio("necroAttackBigSound",`${l}/audio/elves/DE-Necro_AttackBig.mp3`),t.load.audio("necromancerDeathSound",`${l}/audio/elves/DE-Heretic_Death.mp3`),t.load.audio("phantomSpawnSound",`${l}/audio/elves/DE-Phantom_Spawn.mp3`),t.load.audio("phantomDeathSound",`${l}/audio/elves/DE-Phantom_Death.mp3`),t.load.audio("voidmonkAttackSound",`${l}/audio/elves/DE-VoidMonk_Attack_Punch.mp3`),t.load.audio("voidmonkAttackBigSound",`${l}/audio/elves/DE-VoidMonk_AttackBig.mp3`),t.load.audio("voidmonkDeathSound",`${l}/audio/elves/DE-VoidMonk_Death.mp3`),t.load.audio("wraithSpawnSound",`${l}/audio/elves/DE-Wraith_Birth.mp3`),t.load.audio("wraithAttackSound",`${l}/audio/elves/Civ_DarkElf_Attack_Spell_1.mp3`),t.load.audio("wraithAttackBigSound",`${l}/audio/elves/DE-Wraith_BigAttack.mp3`),t.load.audio("wraithDeathSound",`${l}/audio/elves/DE-Wraith_Death.mp3`),t.load.audio("wraithConsumeSound",`${l}/audio/elves/DE-Wraith_Consume.mp3`),t.load.audio("useHarvestSound",`${l}/audio/elves/Civ_DarkElf_Inferno_Explosion.mp3`)}class Xa extends Phaser.Scene{constructor(){super({key:"GameScene"});o(this,"userId");o(this,"colyseusClient");o(this,"centerPoints");o(this,"currentRoom");o(this,"currentGame");o(this,"currentTurnAction");o(this,"turnNumber");o(this,"activeUnit");o(this,"gameController");o(this,"activePlayer");o(this,"isPlayerOne");o(this,"opponentId");o(this,"player1");o(this,"player2");o(this,"longPressStart");o(this,"visibleUnitCard");o(this,"triggerReplay",!0);o(this,"chatComponent");this.centerPoints=ja()}init(e){var s;this.userId=e.userId,this.colyseusClient=e.colyseusClient,this.turnNumber=e.currentGame.turnNumber,this.currentGame=e.currentGame,this.currentRoom=e.currentRoom;const i=e.currentGame.players.find(n=>e.userId!==n.userData._id);this.opponentId=i.userData._id,this.triggerReplay=e.triggerReplay??!0,this.activePlayer=this.currentGame.activePlayer.toString(),this.isPlayerOne=((s=this.currentGame)==null?void 0:s.players[0].userData._id)===this.userId,this.currentTurnAction=this.turnNumber===0?3:1}preload(){this.load.html("chatComponent","html/chat.html"),Ya(this),za(this)}create(){this.time.addEvent({delay:3e5,callback:()=>{this.currentRoom.send("ping")},loop:!0}),this.registry.get("userPreferences").chat&&(this.chatComponent=la(this)),this.input.mouse.disableContextMenu(),this.gameController=new Ka(this),this.triggerReplay&&this.gameController.replayTurn(),this.events.on("shutdown",()=>{this.sound.stopAll()})}}class ue extends Phaser.GameObjects.Container{constructor(e,i){const s={x:350,y:50};super(e,0,0);o(this,"header");o(this,"rows");o(this,"paginationBar");o(this,"context");this.context=e;const n={fontFamily:"proLight",color:"#ffffff",wordWrap:{width:190,useAdvancedWrap:!0}},r={...n,fontSize:45},c={...n,fontSize:35};this.header=e.add.container(s.x,s.y);const h=e.add.text(100,0,"Username",r),d=e.add.text(320,0,"Games",r),u=e.add.text(520,0,"Wins",r),m=e.add.text(720,0,"Council",r),p=e.add.text(920,0,"Elves",r);this.header.add([h,d,u,m,p]),s.y+=20,this.rows=i.players.map(I=>{s.y+=50;const F=e.add.container(s.x,s.y),j=e.add.text(100,0,be(I.username,13),c),Q=e.add.text(350,0,`${I.stats.totalGames}`,c),D=e.add.text(550,0,`${I.stats.totalWins}`,c),$=e.add.text(750,0,`${I.stats.councilWins}`,c),x=e.add.text(950,0,`${I.stats.elvesWins}`,c),V=e.add.image(1030,15,"challengeIcon").setInteractive({useHandCursor:!0});return V.on("pointerdown",()=>{T(this.scene,w.BUTTON_GENERIC),new xe({context:e,username:I.username,challengeType:ne.SEND,opponentId:I._id})}),I._id===e.userId&&V.setVisible(!1).disableInteractive(),F.add([j,Q,D,$,x,V]),F});let f=i.currentPage;const C=730,A=900;this.paginationBar=e.add.container(A,C+10);const k=e.add.text(0,0,`${f} / ${i.totalPages}`,r).setOrigin(.5),H=e.add.image(-180,0,"arrowButton").setFlipX(!0).setScale(.7).setVisible(f>1),L=e.add.image(-120,0,"curvedArrowButton").setScale(.7).setVisible(f>1),Y=e.add.image(120,0,"curvedArrowButton").setFlipX(!0).setScale(.7).setVisible(f!==i.totalPages),U=e.add.image(180,0,"arrowButton").setScale(.7).setVisible(f!==i.totalPages);H.setInteractive({useHandCursor:!0}).on("pointerdown",async()=>{if(this.scene.sound.play(w.BUTTON_GENERIC),f>1){const I=await fe(1);I&&(new ue(this.context,I),this.destroy())}}),L.setInteractive({useHandCursor:!0}).on("pointerdown",async()=>{if(this.scene.sound.play(w.BUTTON_GENERIC),f>1){const I=await fe(--f);I&&(new ue(this.context,I),this.destroy())}}),Y.setInteractive({useHandCursor:!0}).on("pointerdown",async()=>{this.scene.sound.play(w.BUTTON_GENERIC);const I=await fe(++f);I&&(new ue(this.context,I),this.destroy())}),U.setInteractive({useHandCursor:!0}).on("pointerdown",async()=>{if(this.scene.sound.play(w.BUTTON_GENERIC),f!==i.totalPages){const I=await fe(i.totalPages);I&&(new ue(this.context,I),this.destroy())}}),this.paginationBar.add([H,L,k,Y,U]),this.add([this.header,...this.rows,this.paginationBar]),this.context.add.existing(this)}}function qa(t){t.load.image("challengeIcon",`${l}/images/gameItems/card/TooltipIcon_PhysDmg-hd.webp`),t.load.image("arrowButton",`${l}/ui/arrow_button.webp`),t.load.image("curvedArrowButton",`${l}/ui/curved_arrow_button.webp`),t.load.image(M.COUNCIL,`${l}/ui/council_emblem.webp`),t.load.image(M.DARK_ELVES,`${l}/ui/elves_emblem.webp`)}class Ja extends Phaser.Scene{constructor(){super({key:"LeaderboardScene"});o(this,"userId")}init(e){this.userId=e.userId}preload(){qa(this)}async create(){this.add.image(396,14,"gameBackground").setOrigin(0,0).setScale(1.07,1.2);const e=await fe();e&&new ue(this,e)}onShutdown(){this.sound.stopAll()}}const at={x:800,y:400};class Za extends Phaser.GameObjects.Container{constructor(e,i){super(e,at.x,at.y);o(this,"blockingLayer");o(this,"backgroundImage");o(this,"okButtonImage");o(this,"cancelButtonImage");o(this,"popupText");o(this,"okButtonText");o(this,"cancelButtonText");this.blockingLayer=e.add.rectangle(0,0,2e3,2e3,0,.001).setOrigin(.5).setInteractive(),this.backgroundImage=e.add.image(0,0,"popupBackground").setDisplaySize(500,300),this.okButtonImage=e.add.image(-90,60,"popupButton").setTint(10027008).setDisplaySize(110,60).setInteractive({useHandCursor:!0}),this.cancelButtonImage=e.add.image(90,60,"popupButton").setTint(31743).setDisplaySize(110,60).setInteractive({useHandCursor:!0}),this.popupText=e.add.text(0,-50,"Delete account? All data will be lost",{fontFamily:"proLight",fontSize:40,color:"#ffffff",align:"center",lineSpacing:10,wordWrap:{width:400,useAdvancedWrap:!0}}).setOrigin(.5),this.okButtonText=e.add.text(-90,60,"DELETE",{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.cancelButtonText=e.add.text(90,60,"CANCEL",{fontFamily:"proLight",fontSize:30,color:"#ffffff"}).setOrigin(.5),this.okButtonImage.on("pointerdown",async()=>{T(this.scene,w.BUTTON_GENERIC),this.setVisible(!1),await i.handleDelete()}),this.cancelButtonImage.on("pointerdown",()=>{this.scene.sound.play(w.BUTTON_FAILED),this.setVisible(!1),i.toggleFormVisibility(!0)}),this.add([this.blockingLayer,this.backgroundImage,this.popupText,this.okButtonImage,this.okButtonText,this.cancelButtonImage,this.cancelButtonText]),this.setDepth(1002),this.setVisible(!1),e.add.existing(this)}}class Qa extends Phaser.GameObjects.Container{constructor(e,i){super(e,900,400);o(this,"visibleFlag");const s=new Phaser.GameObjects.Container(e,0,0),n=e.add.rectangle(0,0,3e3,2e3,0,.001).setOrigin(.5).setInteractive(),r=600,c=500,h=256*.4,d=10,u=4,m=e.add.rectangle(0,0,r,c,2236962,1).setStrokeStyle(2,16777215);s.add(m);const p=new Phaser.GameObjects.Container(e,-600/2+d,-500/2+d);s.add(p);const f=[],C=()=>{const D=-250+d+25,$=D+(c-60);f.forEach(x=>{var X;const V=x.y+p.y;V+x.displayHeight>D&&V<$?(X=x.input)!=null&&X.enabled||x.setInteractive({useHandCursor:!0}):x.disableInteractive()})};Oe.forEach((D,$)=>{const x=Math.floor($/u),z=$%u*(h+d),we=x*(h+d),X=e.add.image(z+120,we-160,D).setInteractive({useHandCursor:!0}).setDisplaySize(h,h).setData("key",D);X.on("pointerup",()=>{var te;Q||!this.visibleFlag||(e.userData.picture=D,i.setTexture(D).setDisplaySize(256*.5,256*.5),this.setVisible(!1),(te=e.profile)==null||te.toggleFormVisibility(!0))}),f.push(X),p.add(X)});const A=this.x+p.x,k=this.y+p.y,H=e.make.graphics({});H.fillStyle(16777215),H.fillRect(A,k+25,r-2*d,c-60);const L=new Phaser.Display.Masks.GeometryMask(e,H);p.setMask(L);const I=-(Math.ceil(Oe.length/u)*(h+d))+c-2*d-100;p.y=0,C(),e.input.on("wheel",(D,$,x,V,z)=>{this.visible&&(p.y-=V*1,p.y=Phaser.Math.Clamp(p.y,I,0),C())});let F=!1,j=0,Q=!1;e.input.on("pointerdown",D=>{this.visible&&(F=!0,j=D.y,Q=!1)}),e.input.on("pointermove",D=>{if(!F)return;const $=D.y-j;Math.abs($)>5&&(Q=!0),p.y+=$*.7,p.y=Phaser.Math.Clamp(p.y,I,0),C(),j=D.y}),e.input.on("gameobjectup",()=>{F=!1,j=0,Q=!1}),this.add([n,s]),this.setDepth(1002),this.setVisible(!1),e.add.existing(this),this.visibleFlag=!0}}class ei extends Phaser.GameObjects.Container{constructor(e){var s,n,r,c;super(e,0,0);o(this,"context");o(this,"profilePicturePopup");o(this,"emailInput");o(this,"passwordInput");o(this,"passwordConfirmInput");o(this,"profileUpdateError");o(this,"profileUpdateSuccess");o(this,"notificationsCheckBox");o(this,"chatCheckBox");o(this,"soundCheckBox");o(this,"saveButtonImage");o(this,"saveButtonText");o(this,"deleteAccountButtonImage");o(this,"deleteAccountButtonText");o(this,"deletePopup");o(this,"profilePicture");o(this,"previousPicture");this.context=e,this.context.add.image(396,14,"gameBackground").setOrigin(0,0).setScale(1.07,1.2),this.context.add.text(800,40,"PROFILE",{fontFamily:"proHeavy",fontSize:80,color:"#ffffff"}),this.context.add.text(1e3,150,"PREFERENCES",{fontFamily:"proHeavy",fontSize:40,color:"#ffffff"}),this.context.add.text(550,150,"DATA",{fontFamily:"proHeavy",fontSize:40,color:"#ffffff"}),this.previousPicture=this.context.userData.picture,this.profilePicture=this.context.add.image(580,550,this.context.userData.picture).setDisplaySize(256*.5,256*.5).setInteractive({useHandCursor:!0}),this.profilePicture.on("pointerdown",()=>{this.profilePicturePopup.setVisible(!0),this.toggleFormVisibility(!1),this.bringToTop(this.profilePicturePopup)}),this.profilePicturePopup=new Qa(this.context,this.profilePicture),this.emailInput=this.createInputField(600,230,"email","Email"),this.passwordInput=this.createInputField(600,290,"New password","password"),this.passwordConfirmInput=this.createInputField(600,350,"Confirm Password","password"),this.profileUpdateError=this.context.add.dom(450,380).createFromHTML(`
  <div id="profileError" class="proLightFont" style="color: white; font-size: 30px; margin-bottom: 10px; display: none; max-width: 500px; background-color: #8e0000; padding: 10px"></div>`),this.profileUpdateSuccess=this.context.add.dom(450,380).createFromHTML(`
  <div id="profileSuccess" class="proLightFont" style="color: white; font-size: 30px; margin-bottom: 10px; display: none; max-width: 500px; background-color: #14452f; padding: 10px"></div>`);const i=e.userData.preferences;this.notificationsCheckBox=this.createCheckbox(1150,230,"Email notifications",i.emailNotifications),this.chatCheckBox=this.createCheckbox(1087,290,"Enable chat",i.chat),this.soundCheckBox=this.createCheckbox(1103,350,"Enable sound",i.sound),e.add.text(1e3,390,"STATS",{fontFamily:"proHeavy",fontSize:40,color:"#ffffff"}),e.add.text(1e3,440,`Games: ${(s=e.userData)==null?void 0:s.stats.totalGames}`,{fontFamily:"proLight",fontSize:35,color:"#ffffff"}),e.add.text(1e3,490,`Wins: ${(n=e.userData)==null?void 0:n.stats.totalWins}`,{fontFamily:"proLight",fontSize:35,color:"#ffffff"}),e.add.text(1e3,540,`Council wins: ${(r=e.userData)==null?void 0:r.stats.councilWins}`,{fontFamily:"proLight",fontSize:35,color:"#ffffff"}),e.add.text(1e3,590,`Elves wins: ${(c=e.userData)==null?void 0:c.stats.elvesWins}`,{fontFamily:"proLight",fontSize:35,color:"#ffffff"}),this.saveButtonImage=this.context.add.image(895,700,"popupButton").setTint(3381759).setDisplaySize(230,100).setInteractive({useHandCursor:!0}),this.saveButtonText=this.context.add.text(830,655,"SAVE CHANGES",{fontFamily:"proHeavy",fontSize:40,color:"#ffffff",align:"center",wordWrap:{width:150,useAdvancedWrap:!0}}),this.saveButtonImage.on("pointerdown",async()=>{T(this.scene,w.BUTTON_GENERIC),await this.handleSubmit()}),this.loadUserData(),this.deletePopup=new Za(e,this),this.deleteAccountButtonImage=this.context.add.image(1265,700,"popupButton").setTint(10027008).setDisplaySize(230,100).setInteractive({useHandCursor:!0}),this.deleteAccountButtonText=this.context.add.text(1200,655,"DELETE ACCOUNT",{fontFamily:"proHeavy",fontSize:40,color:"#ffffff",align:"center",wordWrap:{width:150,useAdvancedWrap:!0}}),this.deleteAccountButtonImage.on("pointerdown",()=>{T(this.scene,w.BUTTON_GENERIC),console.log("Clicked on delete account"),this.toggleFormVisibility(!1),this.deletePopup.setVisible(!0)}),this.add([this.emailInput,this.passwordInput,this.passwordConfirmInput,this.profileUpdateError,this.profileUpdateSuccess,this.notificationsCheckBox,this.chatCheckBox,this.soundCheckBox,this.saveButtonImage,this.saveButtonText,this.deleteAccountButtonImage,this.deleteAccountButtonText,this.profilePicturePopup]),this.bringToTop(this.profilePicturePopup),this.context.add.existing(this)}createInputField(e,i,s,n,r=""){const c=`
    <input
      type="${n}"
      placeholder="${s}"
      value="${r}"
      style="font-size:25px; width: 300px; height: 30px; font-family: proLight"
    />
  `;return this.context.add.dom(e,i).createFromHTML(c)}createCheckbox(e,i,s,n){return this.context.add.dom(e,i).createFromHTML(`
      <label style="color:white; font-size: 50px; font-family: proLight">
        <input type="checkbox" ${n?"checked":""} style="width: 35px; height: 35px;"/> ${s}
      </label>
    `)}loadUserData(){this.emailInput.getChildByName("").value=this.context.userData.email,this.notificationsCheckBox.getChildByName("").checked=this.context.userData.preferences.emailNotifications,this.chatCheckBox.getChildByName("").checked=this.context.userData.preferences.chat,this.soundCheckBox.getChildByName("").checked=this.context.userData.preferences.sound}async handleSubmit(){var m,p,f,C,A;this.profileUpdateError.setVisible(!1),this.profileUpdateSuccess.setVisible(!1);const e=this.emailInput.getChildByName("").value,i=this.passwordInput.getChildByName("").value,s=this.passwordConfirmInput.getChildByName("").value,n=this.notificationsCheckBox.getChildByName("").checked,r=this.chatCheckBox.getChildByName("").checked,c=this.soundCheckBox.getChildByName("").checked;if(!this.emailInput.node.querySelector("input").checkValidity()){this.showForm(this.profileUpdateError,"profileError","Incorrect email format");return}if(i.trim()!==""){if(i!==s){this.showForm(this.profileUpdateError,"profileError","Passwords do not match");return}if(!ot(i)){this.showForm(this.profileUpdateError,"profileError","Password must be at least 8 characters long and contain a letter and a number");return}}const d={};if(e&&e!==((m=this.context.userData)==null?void 0:m.email)&&(d.email=e),i&&i.trim()!==""&&(d.password=i),n!==void 0&&n!==((p=this.context.userData)==null?void 0:p.preferences.emailNotifications)&&(d.emailNotifications=n),r!==void 0&&r!==((f=this.context.userData)==null?void 0:f.preferences.chat)&&(d.chat=r),c!==void 0&&c!==((C=this.context.userData)==null?void 0:C.preferences.sound)&&(d.sound=c),((A=this.context.userData)==null?void 0:A.picture)!==this.previousPicture&&(d.picture=this.context.userData.picture),Object.keys(d).length===0)return;const u=await Ca(d);u.success?(console.log("Profile updated"),this.showForm(this.profileUpdateSuccess,"profileSuccess","Profile successfully updated"),this.context.userData=u.user,this.scene.registry.set("userPreferences",{chat:u.user.preferences.chat,sound:u.user.preferences.sound}),this.scene.sound.mute=!u.user.preferences.sound):(this.loadUserData(),this.profilePicture.setTexture(this.previousPicture),this.showForm(this.profileUpdateError,"profileError",u.error))}async handleDelete(){(await Pa()).success&&this.context.scene.start("MainMenuScene")}toggleFormVisibility(e){this.emailInput.setVisible(e),this.passwordInput.setVisible(e),this.passwordConfirmInput.setVisible(e),this.notificationsCheckBox.setVisible(e),this.chatCheckBox.setVisible(e),this.soundCheckBox.setVisible(e),this.profileUpdateError.setVisible(e),this.profileUpdateSuccess.setVisible(e)}showForm(e,i,s){var r;e.setVisible(!0);const n=(r=e.getChildByID)==null?void 0:r.call(e,i);n&&(n.innerText=s,n.style.display="block")}hideForm(e,i){var n;const s=(n=e.getChildByID)==null?void 0:n.call(e,i);s&&(s.innerText="",s.style.display="none")}}class ti extends Phaser.Scene{constructor(){super({key:"ProfileScene"});o(this,"userId");o(this,"profile");o(this,"userData")}init(e){this.userId=e.userId}preload(){Oe.forEach(e=>{this.load.image(e,`${l}/images/profilePics/${e}.webp`)})}async create(){this.userData=await Sa(),this.profile=new ei(this)}onShutdown(){console.log("Profile scene shutdown logs, remove"),this.sound.stopAll()}}const ai=`Fan Academy is a fan-made revival of the game Hero Academy, a turn-based tactics game developed by Robot Entertainment. This project aims to bring back the joy of the original game, offering a way for fans to rediscover it.

This is not a reverse engineering of the game. The game logic is being implemented from scratch while using the original assets to try to preserve the game's aesthetic as much as possible.`,ii="Hero Academy is a player-versus-player turn-based tactics game where players choose a team of heroes and use their units and items to defeat their opponents. Unfortunately, the game is currently deadf, delisted from all stores and its online servers shut down. It is no longer possible for people who purchased the game to play it.",si="This project includes proprietary assets from Hero Academy, which are the property of Robot Entertainment. These assets are used for educational and non-commercial purposes under the assumption of fair use for a fan project. This license applies only to the code in this repository and not to the assets. All rights to the proprietary assets remain with their respective owners.",oi=`You can create a game by clicking on the icon of the faction you want to play as. Matchmaking happens automatically: if there is already a game looking for players, you will be paired immediately. If not, you will see your game under the "Looking for games" section.

Games in the game list are organized on sections based on their status. Here's the order in which they appear in the game list:

-Your turn: You should probably click on these and play your turn.

-Challenges received: Click on these games to select a faction and start playing against the player who challenged you. You can also decline by clicking the X button on the top-right corner of the game.

-Opponent's turn. Your opponent should probably click on those and play their turn.

-Searching for players: As mentioned earlier, these are open games created by you. When another player looks for a game they will be paired with you. If you don't want to search for a game anymore, you can click the X button on the top-right corner of the game to delete it.

-Challenges sent: These games are waiting for the player you challenged to pick a faction or decline the challenge. You can remove the challenge by, you guessed it, clicking on the X button on the top-right corner of the game.

-Finished: Here you will find your 5 more recent finished games. You can click on a game to see the final game state and challenge your opponent to a rematch.

Please note that one ore more of these categories may not be present in your game if you don't have any games that qualify. E.g., you won't see a "Challenges sent" category if you have not sent any challenges.

You can come back to the main menu by clicking on the "Home" button.`,ni=`Here you can update your email, password, profile pics and communication preferences. No changes are saved until you click on the "Save changes" button.

-Email preferences: The game sends an email when it's your turn to play, when a game ends and when you receive a challenge. If you don't wish to receive emails, leave the checkbox blank. Note: An email confirmation email was sent to you when you created the account. If you have not confirmed your email, you will not receive email notifications, even if the checkbox is ticked.

-Enable chat: Having this option checked allows people to message you in the in-game chat. Or it will, once I add an in-game chat to the game.

-Delete account: Clicking on this button will open a confirmation popup. Deleting your account is irreversible, I have no way to recover your data.`,ri=`Shows a list of all players, sorted by number of victories. If two or more players have the same amount of wins, the player with the fewer played games appears above.

You can send a challenge to a player from the leaderboard by clicking the sword icon on the right hand side of the screen. You will be prompted to pick a faction before sending the challenge.`,li=`If you are new to Hero Academy, here you will find resources to learn how to play. Fan Academy plays exactly the same than Hero Academy. And if it doesn't, please let me know.

The information below is taken from a guide written by Hamlet on his defunct site, iam.yellingontheinternet.com, thanks to the magic of the Internet Archive. I have edited some parts for clarification.`,ci=`Basic:

    • 5 action points (AP) per turn (3 AP for the first player on their first turn to balance first player advantage).

    • 1 AP can be used to:
    	- deploy a unit to deploy square
    	- move a unit
    	- attack an enemy unit or crystal
    	- heal or revive a friendly unit
    	- use a unit special ability
    	- equip a unit with an upgrade
    	- use a one-time item
    	- return a unit or item from your hand back into the deck (the door icon) to draw a random one next turn

    • A unit that reaches 0 HP is knocked out, but can be revived by an ally. It vanishes from the board permanently if:
    	- any player moves a unit onto it (“stomps” it)
    	- destroys it with certain spells
    	- its owner takes a full turn without reviving it

    • A player loses upon having all of his crystals destroyed, or by having all of the units in his deck stomped or knocked out (the game will end even if he has an item left that can revive a KO'd unit).

    • Units are drawn in random order throughout the game, except that your starting hand always has at least 3 units.

Map features:

    • Crystals. There are two per faction, each one with 4500 hp. Destroy both of your opponent's crystals to win the game.

    • Deploy square. Enemy units cannot move onto it, even to stomp. An enemy unit adjacent to a deploy square can attack a corpse that's on the square (which destroys it), without moving onto it. A Necromancer or Inferno can also destroy a KO'd unit on a deploy square.

    • Attack square (red sword). A unit on the square has +100 attack power, applied before all %-based bonuses.

    • Defense square (blue shield). A unit on the square has +20% physical resist.

    • Magic Defense square (dark blue helm). A unit on the square has +20% magical resist.

    • Assault square (purple gem). While a friendly unit is standing on this square, all attacks against enemy crystals do an extra 300 damage. Multiple assault bonuses stack. The bonus is reduced accordingly if the crystal takes AoE or chain damage. The bonus damage has no type and is not affected by any resist.

    • Teleport square (light blue dot). A unit on the square can use 1 AP to teleport to the other teleport square, if it is open.

Advanced:

    • Range is counted orthogonally only, not diagonally (e.g. a unit one square diagonally from another is at range 2).

    • Each unit has an attack power, and a damage type (physical or magical). • Ordinary attacks hit for damage equal to the unit's attack power, but some multiply by certain percentage or add other bonuses. The attack power is what's shown in the unit's info window.

    • Each target also has a physical and magical resist, which reduce incoming damage of the appropriate type by a fixed percentage.

    • Ranged attacks (but not ranged friendly actions) require line of sight to the target. Enemy units and crystals block line of sight, but friendly ones do not. An attack to an immediately diagonal square can't be blocked.

    • A unit that can act on a corpse (healer reviving a friendly corpse, or Necromancer/Wraith destroying an enemy one) can't choose to move and stomp the corpse instead. Clicking on the corpse causes the unit to act on it. However, if the unit does not have line of sight to the enemy corpse, it will move and stomp instead.

    • Knockbacks only occur if the target square is open, otherwise the unit simply doesn't move. If a unit is KO'd by the knockback, it still moves. A unit can't be knocked onto an enemy start tile, unless it's also KO'd (in which case an enemy spawning there will stomp it).

    • A unit can wind up on an enemy deploy square if it's KO'd onto it and then revived, or if it's a Wraith that spawned from a corpse on that square. It will block the enemy from deploying units there so long as it remains.
    • A corpse on its own deploy square will be stomped automatically if a friendly unit deploys there.

    • Units cannot target themselves with heals or other buffs.`,hi=`Knight (3):
1000 HP
20% P resist
200 attack (P), range 1
Attack knocks target back one square.
Move 2

Archer (3):
800 HP
300 attack (P), range 3
50% damage in melee, 100% damage at range.
Move 2

Wizard (3):
800 HP
10% M resist
200 attack (M), range 2
Attack can hit up to 3 enemy units or crystals if they are adjacent. Main target takes 100% damage, first jump does 75%, second jump 56%.
Move 2

Cleric (3):
800 HP
200 attack (M), range 2
Heals for 300% attack, revives for 200% attack, range 2
Move 2

Ninja (1):
800 HP
200 attack (P), range 2.
200% damage in melee, 100% damage at range.
Can use 1 AP to swap places with any friendly unit.
Move 3`,di=`Upgrades:
-Sword (3): +50% attack
-Armor (3): +20% physical resist, +10% HP
-Helm (3): +20% magical resist, +10% HP

Consumables:
-Scroll (2): Targets one friendly. Unit has 300% attack power for one attack/heal.

-Inferno (2): Targets a 3×3 area. KO'd enemies are destroyed, and other enemies take 350 M.

-Potion (2): Targets one friendly. Heals for 1000. In addition, can revive a KO'd unit for 100.

Faction passive: None`,ui=`Void Monk (3):
800 HP
20% P resist, 20% M resist
200 attack (P), range 1
100% damage to target, splashes for 66% damage to any enemies adjacent (not diagonal) to target.
Move 3

Impaler (3):
800 HP
300 attack (P), range 2
If target is at range 2 in a straight line, pulled one square towards Impaler.
Move 2

Necromancer (3):
800 HP
200 attack (M), range 3
Can use 1 AP to turn any KO'd unit into a Phantom at range 3, including on an enemy start tile.
Move 2

Priestess (3):
800 HP
200 attack (M), range 2
Heals for 200% attack, revives for 50% attack, range 3
An unit damaged by the Priestess has 50% attack power for its next attack/heal (doesn't affect Barbed Crystals).
Move 2

Wraith (1):
800 HP
250 attack (M), range 1.
Can use 1 AP to consume a KO'd unit at range 1. Increases current and max HP by 100 and attack power by 50 (bonus can only be obtained 3 times per game although you can continue to consume).
Can deploy onto any KO'd unit (stomping it) instead of a deploy tile, unless the KO'd unit is on an enemy deploy tile.
Move 3

Phantom:
100 HP
100 attack (M), range 1
Does not leave a corpse when killed.
If spawned on an enemy deploy tile, will be automatically destroyed if an enemy deploys there.
Move 3`,mi=`Upgrades:
-Sword (3): +50% attack
-Soulstone (3): Passive life leech increased to 66%, +10% HP (bonus applied to base -HP only)
-Helm (3): +20% magical resist, +10% HP (bonus applied to base HP only)

Consumables:
-Scroll (2): Targets one friendly. Unit has 300% attack power for one attack/heal.

-Soul Harvest (2): Targets a 3×3 area. Enemies take 100 M. All friendly units in play gain D/(N+3) current and max HP (reviving KO'd units in the process), where D is the total damage dealt to non-Crystal units by the spell, and N is the number of friendly units in play.

-Mana Vial (2): Targets one friendly. Heals for 1000 and increases max HP by 50.

Faction passive:
Units are healed for 33% of any damage they deal to enemy units (not crystals).`;function gi(t){const a=new Phaser.GameObjects.Container(t,420,25),e={fontFamily:"proLight",fontSize:35,color:"#ffffff",wordWrap:{width:1e3,useAdvancedWrap:!0}};return a.add(t.add.text(0,0,"Index",{...e,fontSize:50})),a.add(t.add.text(0,220,"What is Fan Academy?",{...e,fontSize:50})),a.add(t.add.text(0,280,ai,e)),a.add(t.add.text(0,540,"What is Hero Academy?",{...e,fontSize:50})),a.add(t.add.text(0,600,ii,e)),a.add(t.add.text(0,790,"Disclaimer for third-party assets",{...e,fontSize:50})),a.add(t.add.text(0,850,si,e)),a.add(t.add.text(0,1030,"Menu guide",{...e,fontSize:50})),a.add(t.add.text(0,2050,oi,e)),a.add(t.add.text(0,4100,ni,e)),a.add(t.add.text(0,5e3,ri,e)),a.add(t.add.text(0,5250,"Game guide",{...e,fontSize:60})),a.add(t.add.text(0,5320,li,e)),a.add(t.add.text(0,5570,"General mechanics",{...e,fontSize:50})),a.add(t.add.text(0,5630,ci,e)),a.add(t.add.text(0,8660,"Factions",{...e,fontSize:60})),a.add(t.add.image(450,8890,"councilAbout")),a.add(t.add.text(0,9040,hi,{...e,wordWrap:{width:700,useAdvancedWrap:!0}})),a.add(t.add.text(0,10230,di,e)),a.add(t.add.image(450,10950,"elvesAbout")),a.add(t.add.text(0,11110,ui,{...e,wordWrap:{width:750,useAdvancedWrap:!0}})),a.add(t.add.text(0,12770,mi,e)),a}function pi(t){let a=0;return t.iterate(e=>{const i=e.y+(e.height??0);i>a&&(a=i)}),a}function fi(t,a,e,i,s){[{title:"Menu guide",y:1030},{title:"Game guide",y:5240},{title:"Factions",y:8660}].forEach((c,h)=>{const d=it(t,c,h,60,a,e,i,s);a.add(d)}),[{title:"Play!",y:1210},{title:"Profile",y:3200},{title:"Leaderboard",y:4620}].forEach((c,h)=>{const d=it(t,c,h,1090,a,e,i,s);a.add(d)})}function it(t,a,e,i,s,n,r,c){const h=t.add.text(0,i+e*50,a.title,{fontFamily:"proLight",color:"#ffffff",fontSize:35,backgroundColor:"#00f",padding:{x:10}});return h.setInteractive({useHandCursor:!0}).on("pointerdown",()=>{s.y=n-a.y;const d=n+(r-c);s.y=Phaser.Math.Clamp(s.y,d,n)}),h}function yi(t,a){a.add(t.add.image(87,1280,"aboutPlayButton").setScale(.5)),a.add(t.add.image(490,1690,"aboutPlayPage").setScale(.7)),a.add(t.add.image(170,3270,"aboutProfileButton")),a.add(t.add.image(490,3700,"aboutProfilePage")),a.add(t.add.image(170,4670,"aboutLeaderboardButton")),a.add(t.add.image(490,4860,"aboutLeaderboardPage"));const e=840;a.add(t.add.image(e,9130,"knightAbout").setScale(1.5)),a.add(t.add.image(e,9360,"archerAbout").setScale(1.5)),a.add(t.add.image(e,9560,"wizardAbout").setScale(1.5)),a.add(t.add.image(e,9845,"clericAbout").setScale(1.5)),a.add(t.add.image(e,10070,"ninjaAbout").setScale(1.5)),a.add(t.add.image(e,11210,"voidmonkAbout").setScale(1.5)),a.add(t.add.image(e,11460,"impalerAbout").setScale(1.5)),a.add(t.add.image(e,11680,"necromancerAbout").setScale(1.5)),a.add(t.add.image(e,11930,"priestessAbout").setScale(1.5)),a.add(t.add.image(e,12230,"wraithAbout").setScale(1.5)),a.add(t.add.image(e,12580,"phantomAbout").setScale(1.5))}function Ti(t){t.load.image("archerAbout",`${l}/images/aboutImages/Archer_tile.webp`),t.load.image("clericAbout",`${l}/images/aboutImages/Cleric_tile.webp`),t.load.image("councilAbout",`${l}/images/aboutImages/Council_SplashScreen1.webp`),t.load.image("elvesAbout",`${l}/images/aboutImages/DarkElves_SplashScreen.webp`),t.load.image("impalerAbout",`${l}/images/aboutImages/Impaler_tile.webp`),t.load.image("knightAbout",`${l}/images/aboutImages/Knight_tile.webp`),t.load.image("necromancerAbout",`${l}/images/aboutImages/Necromancer_tile.webp`),t.load.image("ninjaAbout",`${l}/images/aboutImages/Ninja_tile.webp`),t.load.image("phantomAbout",`${l}/images/aboutImages/Phantom_tile.webp`),t.load.image("priestessAbout",`${l}/images/aboutImages/Priestess_tile.webp`),t.load.image("voidmonkAbout",`${l}/images/aboutImages/VoidMonk_tile.webp`),t.load.image("wizardAbout",`${l}/images/aboutImages/Wizard_tile.webp`),t.load.image("wraithAbout",`${l}/images/aboutImages/Wraith_tile.webp`),t.load.image("arrowAbout",`${l}/images/aboutImages/AvatarArrow-hd.webp`),t.load.image("aboutPlayButton",`${l}/images/aboutImages/play_button.webp`),t.load.image("aboutProfileButton",`${l}/images/aboutImages/profile_button.webp`),t.load.image("aboutLeaderboardButton",`${l}/images/aboutImages/leaderboard_button.webp`),t.load.image("aboutPlayPage",`${l}/images/aboutImages/play_page.webp`),t.load.image("aboutProfilePage",`${l}/images/aboutImages/profile_page.webp`),t.load.image("aboutLeaderboardPage",`${l}/images/aboutImages/leaderboard_page.webp`)}class bi extends Phaser.Scene{constructor(){super({key:"AboutScene"})}preload(){Ti(this)}async create(){this.add.image(396,14,"gameBackground").setOrigin(0,0).setScale(1.07,1.2).setTint(10066329);const a=gi(this),e=396,i=2e3,s=20,n=750,r=this.make.graphics();r.fillRect(e,s,i,n);const c=new Phaser.Display.Masks.GeometryMask(this,r);a.setMask(c);const h=A=>A.x>=e&&A.x<=i&&A.y>=s&&A.y<=n,d=pi(a),u=n;fi(this,a,s,n,d),yi(this,a),this.input.on("wheel",(A,k,H,L,Y)=>{if(h(A)&&d>u){a.y-=L*1;const U=s+(u-d);a.y=Phaser.Math.Clamp(a.y,U,s)}});let m=!1,p=0,f=0;this.input.on("pointerdown",A=>{h(A)&&d>u?(m=!0,p=A.y,f=a.y):(m=!1,p=0,f=0)}),this.input.on("pointermove",A=>{if(!m)return;const k=A.y-p,H=s+(u-d);a.y=Phaser.Math.Clamp(f+k,H,s)}),this.input.on("pointerup",()=>{m=!1,p=0,f=0}),this.add.image(1350,60,"arrowAbout").setScale(2).setInteractive({useHandCursor:!0}).setScrollFactor(0).setDepth(999).on("pointerdown",()=>{a.y=s;const A=s+(u-d);a.y=Phaser.Math.Clamp(a.y,A,s)}),this.add.existing(a)}}const Ii={backgroundColor:"#808080",type:_e.AUTO,scene:[ba,va,At,Xa,Ja,ti,bi],scale:{mode:_e.Scale.FIT,autoCenter:_e.Scale.CENTER_BOTH,width:1434,height:990},dom:{createContainer:!0},parent:"app"};new _e.Game(Ii);
